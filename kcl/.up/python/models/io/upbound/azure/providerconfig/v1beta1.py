# generated by datamodel-codegen:
#   filename:  workdir/azure_upbound_io_v1beta1_providerconfig.yaml

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import AwareDatetime, BaseModel

from ....k8s.apimachinery.pkg.apis.meta import v1


class Env(BaseModel):
    name: str
    """
    Name is the name of an environment variable.
    """


class Fs(BaseModel):
    path: str
    """
    Path is a filesystem path.
    """


class SecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Source(Enum):
    None_ = 'None'
    Secret = 'Secret'
    UserAssignedManagedIdentity = 'UserAssignedManagedIdentity'
    SystemAssignedManagedIdentity = 'SystemAssignedManagedIdentity'
    OIDCTokenFile = 'OIDCTokenFile'
    Upbound = 'Upbound'
    Filesystem = 'Filesystem'


class Credentials(BaseModel):
    env: Optional[Env] = None
    """
    Env is a reference to an environment variable that contains credentials
    that must be used to connect to the provider.
    """
    fs: Optional[Fs] = None
    """
    Fs is a reference to a filesystem location that contains credentials that
    must be used to connect to the provider.
    """
    secretRef: Optional[SecretRef] = None
    """
    A SecretRef is a reference to a secret key that contains the credentials
    that must be used to connect to the provider.
    """
    source: Source
    """
    Source of the provider credentials.
    """


class Spec(BaseModel):
    clientID: Optional[str] = None
    """
    ClientID is the user-assigned managed identity's ID
    when Credentials.Source is `InjectedIdentity`. If unset and
    Credentials.Source is `InjectedIdentity`, then a system-assigned
    managed identity is used.
    """
    credentials: Credentials
    """
    Credentials required to authenticate to this provider.
    """
    environment: Optional[str] = None
    """
    The Cloud Environment which should be used. Possible values are "public",
    "usgovernment", "german", and "china". Defaults to "public".
    """
    msiEndpoint: Optional[str] = None
    """
    MSIEndpoint is the optional path to a custom endpoint for
    Managed Service Identity.
    """
    oidcTokenFilePath: Optional[str] = None
    """
    OIDCTokenFilePath is the optional path to a token file
    that allows to access a managed identity.
    """
    subscriptionID: Optional[str] = None
    """
    SubscriptionID is the Azure subscription ID to be used.
    If unset, subscription ID from Credentials will be used.
    Required if Credentials.Source is InjectedIdentity.
    """
    tenantID: Optional[str] = None
    """
    TenantID is the Azure AD tenant ID to be used.
    If unset, tenant ID from Credentials will be used.
    Required if Credentials.Source is InjectedIdentity.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    users: Optional[int] = None
    """
    Users of this provider configuration.
    """


class ProviderConfig(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    A ProviderConfigSpec defines the desired state of a ProviderConfig.
    """
    status: Optional[Status] = None
    """
    A ProviderConfigStatus reflects the observed state of a ProviderConfig.
    """


class ProviderConfigList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[ProviderConfig]
    """
    List of providerconfigs. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
# generated by datamodel-codegen:
#   filename:  workdir/dbforpostgresql_azure_upbound_io_v1beta1_server.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class AdministratorLoginPasswordSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class IdentityItem(BaseModel):
    type: Optional[str] = None
    """
    Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Server. The only possible value is SystemAssigned.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class ResourceGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ResourceGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class StorageAccountAccessKeySecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class ThreatDetectionPolicyItem(BaseModel):
    disabledAlerts: Optional[List[str]] = None
    """
    Specifies a list of alerts which should be disabled. Possible values are Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration and Unsafe_Action.
    """
    emailAccountAdmins: Optional[bool] = None
    """
    Should the account administrators be emailed when this alert is triggered?
    """
    emailAddresses: Optional[List[str]] = None
    """
    A list of email addresses which alerts should be sent to.
    """
    enabled: Optional[bool] = None
    """
    Is the policy enabled?
    """
    retentionDays: Optional[float] = None
    """
    Specifies the number of days to keep in the Threat Detection audit logs.
    """
    storageAccountAccessKeySecretRef: Optional[StorageAccountAccessKeySecretRef] = None
    """
    Specifies the identifier key of the Threat Detection audit storage account.
    """
    storageEndpoint: Optional[str] = None
    """
    Specifies the blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
    """


class ForProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Server. Required when create_mode is Default. Changing this forces a new resource to be created.
    """
    administratorLoginPasswordSecretRef: Optional[
        AdministratorLoginPasswordSecretRef
    ] = None
    """
    The Password associated with the administrator_login for the PostgreSQL Server. Required when create_mode is Default.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. Defaults to true.
    """
    backupRetentionDays: Optional[float] = None
    """
    Backup retention days for the server, supported values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode. Can be used to restore or replicate existing servers. Possible values are Default, Replica, GeoRestore, and PointInTimeRestore. Defaults to Default.
    """
    creationSourceServerId: Optional[str] = None
    """
    For creation modes other than Default, the source server ID to use.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    An identity block as defined below.
    """
    infrastructureEncryptionEnabled: Optional[bool] = None
    """
    Whether or not infrastructure is encrypted for this server. Changing this forces a new resource to be created.
    """
    location: Optional[str] = None
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Whether or not public network access is allowed for this server. Defaults to true.
    """
    resourceGroupName: Optional[str] = None
    """
    The name of the resource group in which to create the PostgreSQL Server. Changing this forces a new resource to be created.
    """
    resourceGroupNameRef: Optional[ResourceGroupNameRef] = None
    """
    Reference to a ResourceGroup in azure to populate resourceGroupName.
    """
    resourceGroupNameSelector: Optional[ResourceGroupNameSelector] = None
    """
    Selector for a ResourceGroup in azure to populate resourceGroupName.
    """
    restorePointInTime: Optional[str] = None
    """
    When create_mode is PointInTimeRestore the point in time to restore from creation_source_server_id. It should be provided in RFC3339 format, e.g. 2013-11-08T22:00:40Z.
    """
    skuName: Optional[str] = None
    """
    Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the tier + family + cores pattern (e.g. B_Gen4_1, GP_Gen5_8). For more information see the product documentation. Possible values are B_Gen4_1, B_Gen4_2, B_Gen5_1, B_Gen5_2, GP_Gen4_2, GP_Gen4_4, GP_Gen4_8, GP_Gen4_16, GP_Gen4_32, GP_Gen5_2, GP_Gen5_4, GP_Gen5_8, GP_Gen5_16, GP_Gen5_32, GP_Gen5_64, MO_Gen5_2, MO_Gen5_4, MO_Gen5_8, MO_Gen5_16 and MO_Gen5_32.
    """
    sslEnforcementEnabled: Optional[bool] = None
    """
    Specifies if SSL should be enforced on connections. Possible values are true and false.
    """
    sslMinimalTlsVersionEnforced: Optional[str] = None
    """
    The minimum TLS version to support on the sever. Possible values are TLSEnforcementDisabled, TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2.
    """
    storageMb: Optional[float] = None
    """
    Max storage allowed for a server. Possible values are between 5120 MB(5GB) and 1048576 MB(1TB) for the Basic SKU and between 5120 MB(5GB) and 16777216 MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the product documentation.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags to assign to the resource.
    """
    threatDetectionPolicy: Optional[List[ThreatDetectionPolicyItem]] = None
    """
    Threat detection policy configuration, known in the API as Server Security Alerts Policy. The threat_detection_policy block supports fields documented below.
    """
    version: Optional[str] = None
    """
    Specifies the version of PostgreSQL to use. Valid values are 9.5, 9.6, 10, 10.0, 10.2 and 11. Changing this forces a new resource to be created.
    """


class ThreatDetectionPolicyItemModel(BaseModel):
    disabledAlerts: Optional[List[str]] = None
    """
    Specifies a list of alerts which should be disabled. Possible values are Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration and Unsafe_Action.
    """
    emailAccountAdmins: Optional[bool] = None
    """
    Should the account administrators be emailed when this alert is triggered?
    """
    emailAddresses: Optional[List[str]] = None
    """
    A list of email addresses which alerts should be sent to.
    """
    enabled: Optional[bool] = None
    """
    Is the policy enabled?
    """
    retentionDays: Optional[float] = None
    """
    Specifies the number of days to keep in the Threat Detection audit logs.
    """
    storageEndpoint: Optional[str] = None
    """
    Specifies the blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.
    """


class InitProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Server. Required when create_mode is Default. Changing this forces a new resource to be created.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. Defaults to true.
    """
    backupRetentionDays: Optional[float] = None
    """
    Backup retention days for the server, supported values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode. Can be used to restore or replicate existing servers. Possible values are Default, Replica, GeoRestore, and PointInTimeRestore. Defaults to Default.
    """
    creationSourceServerId: Optional[str] = None
    """
    For creation modes other than Default, the source server ID to use.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    An identity block as defined below.
    """
    infrastructureEncryptionEnabled: Optional[bool] = None
    """
    Whether or not infrastructure is encrypted for this server. Changing this forces a new resource to be created.
    """
    location: Optional[str] = None
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Whether or not public network access is allowed for this server. Defaults to true.
    """
    restorePointInTime: Optional[str] = None
    """
    When create_mode is PointInTimeRestore the point in time to restore from creation_source_server_id. It should be provided in RFC3339 format, e.g. 2013-11-08T22:00:40Z.
    """
    skuName: Optional[str] = None
    """
    Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the tier + family + cores pattern (e.g. B_Gen4_1, GP_Gen5_8). For more information see the product documentation. Possible values are B_Gen4_1, B_Gen4_2, B_Gen5_1, B_Gen5_2, GP_Gen4_2, GP_Gen4_4, GP_Gen4_8, GP_Gen4_16, GP_Gen4_32, GP_Gen5_2, GP_Gen5_4, GP_Gen5_8, GP_Gen5_16, GP_Gen5_32, GP_Gen5_64, MO_Gen5_2, MO_Gen5_4, MO_Gen5_8, MO_Gen5_16 and MO_Gen5_32.
    """
    sslEnforcementEnabled: Optional[bool] = None
    """
    Specifies if SSL should be enforced on connections. Possible values are true and false.
    """
    sslMinimalTlsVersionEnforced: Optional[str] = None
    """
    The minimum TLS version to support on the sever. Possible values are TLSEnforcementDisabled, TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2.
    """
    storageMb: Optional[float] = None
    """
    Max storage allowed for a server. Possible values are between 5120 MB(5GB) and 1048576 MB(1TB) for the Basic SKU and between 5120 MB(5GB) and 16777216 MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the product documentation.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags to assign to the resource.
    """
    threatDetectionPolicy: Optional[List[ThreatDetectionPolicyItemModel]] = None
    """
    Threat detection policy configuration, known in the API as Server Security Alerts Policy. The threat_detection_policy block supports fields documented below.
    """
    version: Optional[str] = None
    """
    Specifies the version of PostgreSQL to use. Valid values are 9.5, 9.6, 10, 10.0, 10.2 and 11. Changing this forces a new resource to be created.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class IdentityItemModel(BaseModel):
    principalId: Optional[str] = None
    """
    The Principal ID associated with this Managed Service Identity.
    """
    tenantId: Optional[str] = None
    """
    The Tenant ID associated with this Managed Service Identity.
    """
    type: Optional[str] = None
    """
    Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Server. The only possible value is SystemAssigned.
    """


class AtProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Server. Required when create_mode is Default. Changing this forces a new resource to be created.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. Defaults to true.
    """
    backupRetentionDays: Optional[float] = None
    """
    Backup retention days for the server, supported values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode. Can be used to restore or replicate existing servers. Possible values are Default, Replica, GeoRestore, and PointInTimeRestore. Defaults to Default.
    """
    creationSourceServerId: Optional[str] = None
    """
    For creation modes other than Default, the source server ID to use.
    """
    fqdn: Optional[str] = None
    """
    The FQDN of the PostgreSQL Server.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created.
    """
    id: Optional[str] = None
    """
    The ID of the PostgreSQL Server.
    """
    identity: Optional[List[IdentityItemModel]] = None
    """
    An identity block as defined below.
    """
    infrastructureEncryptionEnabled: Optional[bool] = None
    """
    Whether or not infrastructure is encrypted for this server. Changing this forces a new resource to be created.
    """
    location: Optional[str] = None
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Whether or not public network access is allowed for this server. Defaults to true.
    """
    resourceGroupName: Optional[str] = None
    """
    The name of the resource group in which to create the PostgreSQL Server. Changing this forces a new resource to be created.
    """
    restorePointInTime: Optional[str] = None
    """
    When create_mode is PointInTimeRestore the point in time to restore from creation_source_server_id. It should be provided in RFC3339 format, e.g. 2013-11-08T22:00:40Z.
    """
    skuName: Optional[str] = None
    """
    Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the tier + family + cores pattern (e.g. B_Gen4_1, GP_Gen5_8). For more information see the product documentation. Possible values are B_Gen4_1, B_Gen4_2, B_Gen5_1, B_Gen5_2, GP_Gen4_2, GP_Gen4_4, GP_Gen4_8, GP_Gen4_16, GP_Gen4_32, GP_Gen5_2, GP_Gen5_4, GP_Gen5_8, GP_Gen5_16, GP_Gen5_32, GP_Gen5_64, MO_Gen5_2, MO_Gen5_4, MO_Gen5_8, MO_Gen5_16 and MO_Gen5_32.
    """
    sslEnforcementEnabled: Optional[bool] = None
    """
    Specifies if SSL should be enforced on connections. Possible values are true and false.
    """
    sslMinimalTlsVersionEnforced: Optional[str] = None
    """
    The minimum TLS version to support on the sever. Possible values are TLSEnforcementDisabled, TLS1_0, TLS1_1, and TLS1_2. Defaults to TLS1_2.
    """
    storageMb: Optional[float] = None
    """
    Max storage allowed for a server. Possible values are between 5120 MB(5GB) and 1048576 MB(1TB) for the Basic SKU and between 5120 MB(5GB) and 16777216 MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the product documentation.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags to assign to the resource.
    """
    threatDetectionPolicy: Optional[List[ThreatDetectionPolicyItemModel]] = None
    """
    Threat detection policy configuration, known in the API as Server Security Alerts Policy. The threat_detection_policy block supports fields documented below.
    """
    version: Optional[str] = None
    """
    Specifies the version of PostgreSQL to use. Valid values are 9.5, 9.6, 10, 10.0, 10.2 and 11. Changing this forces a new resource to be created.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class Server(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    ServerSpec defines the desired state of Server
    """
    status: Optional[Status] = None
    """
    ServerStatus defines the observed state of Server.
    """


class ServerList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Server]
    """
    List of servers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
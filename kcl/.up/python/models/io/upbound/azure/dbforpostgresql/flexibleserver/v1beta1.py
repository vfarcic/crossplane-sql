# generated by datamodel-codegen:
#   filename:  workdir/dbforpostgresql_azure_upbound_io_v1beta1_flexibleserver.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class AdministratorPasswordSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class AuthenticationItem(BaseModel):
    activeDirectoryAuthEnabled: Optional[bool] = None
    """
    Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to false.
    """
    passwordAuthEnabled: Optional[bool] = None
    """
    Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to true.
    """
    tenantId: Optional[str] = None
    """
    The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. active_directory_auth_enabled must be set to true.
    """


class CustomerManagedKeyItem(BaseModel):
    geoBackupKeyVaultKeyId: Optional[str] = None
    """
    The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.
    """
    geoBackupUserAssignedIdentityId: Optional[str] = None
    """
    The geo backup user managed identity id for a Customer Managed Key. Should be added with identity_ids. It can't cross region and need identity in same region as geo backup.
    """
    keyVaultKeyId: Optional[str] = None
    """
    The ID of the Key Vault Key.
    """
    primaryUserAssignedIdentityId: Optional[str] = None
    """
    Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class DelegatedSubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DelegatedSubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class HighAvailabilityItem(BaseModel):
    mode: Optional[str] = None
    """
    The high availability mode for the PostgreSQL Flexible Server. Possible value are SameZone or ZoneRedundant.
    """
    standbyAvailabilityZone: Optional[str] = None
    """
    Specifies the Availability Zone in which the standby Flexible Server should be located.
    """


class IdentityItem(BaseModel):
    identityIds: Optional[List[str]] = None
    """
    A list of User Assigned Managed Identity IDs to be assigned to this PostgreSQL Flexible Server. Required if used together with customer_managed_key block.
    """
    type: Optional[str] = None
    """
    Specifies the type of Managed Service Identity that should be configured on this PostgreSQL Flexible Server. The only possible value is UserAssigned.
    """


class MaintenanceWindowItem(BaseModel):
    dayOfWeek: Optional[float] = None
    """
    The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = 0, Monday = 1. Defaults to 0.
    """
    startHour: Optional[float] = None
    """
    The start hour for maintenance window. Defaults to 0.
    """
    startMinute: Optional[float] = None
    """
    The start minute for maintenance window. Defaults to 0.
    """


class PrivateDnsZoneIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class PrivateDnsZoneIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ResourceGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ResourceGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
    """
    administratorPasswordSecretRef: Optional[AdministratorPasswordSecretRef] = None
    """
    The Password associated with the administrator_login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.
    """
    authentication: Optional[List[AuthenticationItem]] = None
    """
    An authentication block as defined below.
    """
    autoGeneratePassword: Optional[bool] = None
    """
    If true, the password will be auto-generated and stored in the Secret referenced by the administratorPasswordSecretRef field.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to false.
    """
    backupRetentionDays: Optional[float] = None
    """
    The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update.
    """
    customerManagedKey: Optional[List[CustomerManagedKeyItem]] = None
    """
    A customer_managed_key block as defined below. Changing this forces a new resource to be created.
    """
    delegatedSubnetId: Optional[str] = None
    """
    The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    delegatedSubnetIdRef: Optional[DelegatedSubnetIdRef] = None
    """
    Reference to a Subnet in network to populate delegatedSubnetId.
    """
    delegatedSubnetIdSelector: Optional[DelegatedSubnetIdSelector] = None
    """
    Selector for a Subnet in network to populate delegatedSubnetId.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    highAvailability: Optional[List[HighAvailabilityItem]] = None
    """
    A high_availability block as defined below.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    An identity block as defined below.
    """
    location: Optional[str] = None
    """
    The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    maintenanceWindow: Optional[List[MaintenanceWindowItem]] = None
    """
    A maintenance_window block as defined below.
    """
    pointInTimeRestoreTimeInUtc: Optional[str] = None
    """
    The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    privateDnsZoneId: Optional[str] = None
    """
    The ID of the private DNS zone to create the PostgreSQL Flexible Server.
    """
    privateDnsZoneIdRef: Optional[PrivateDnsZoneIdRef] = None
    """
    Reference to a PrivateDNSZone in network to populate privateDnsZoneId.
    """
    privateDnsZoneIdSelector: Optional[PrivateDnsZoneIdSelector] = None
    """
    Selector for a PrivateDNSZone in network to populate privateDnsZoneId.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to true.
    """
    replicationRole: Optional[str] = None
    """
    The replication role for the PostgreSQL Flexible Server. Possible value is None.
    """
    resourceGroupName: Optional[str] = None
    """
    The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    resourceGroupNameRef: Optional[ResourceGroupNameRef] = None
    """
    Reference to a ResourceGroup in azure to populate resourceGroupName.
    """
    resourceGroupNameSelector: Optional[ResourceGroupNameSelector] = None
    """
    Selector for a ResourceGroup in azure to populate resourceGroupName.
    """
    skuName: Optional[str] = None
    """
    The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
    """
    sourceServerId: Optional[str] = None
    """
    The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    storageMb: Optional[float] = None
    """
    The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4193280, 4194304, 8388608, 16777216 and 33553408.
    """
    storageTier: Optional[str] = None
    """
    The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are P4, P6, P10, P15,P20, P30,P40, P50,P60, P70 or P80. Default value is dependant on the storage_mb value. Please see the storage_tier defaults based on storage_mb table below.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
    """
    version: Optional[str] = None
    """
    The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13, 14, 15 and 16. Required when create_mode is Default.
    """
    zone: Optional[str] = None
    """
    Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
    """


class InitProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
    """
    administratorPasswordSecretRef: Optional[AdministratorPasswordSecretRef] = None
    """
    The Password associated with the administrator_login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.
    """
    authentication: Optional[List[AuthenticationItem]] = None
    """
    An authentication block as defined below.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to false.
    """
    backupRetentionDays: Optional[float] = None
    """
    The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update.
    """
    customerManagedKey: Optional[List[CustomerManagedKeyItem]] = None
    """
    A customer_managed_key block as defined below. Changing this forces a new resource to be created.
    """
    delegatedSubnetId: Optional[str] = None
    """
    The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    delegatedSubnetIdRef: Optional[DelegatedSubnetIdRef] = None
    """
    Reference to a Subnet in network to populate delegatedSubnetId.
    """
    delegatedSubnetIdSelector: Optional[DelegatedSubnetIdSelector] = None
    """
    Selector for a Subnet in network to populate delegatedSubnetId.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    highAvailability: Optional[List[HighAvailabilityItem]] = None
    """
    A high_availability block as defined below.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    An identity block as defined below.
    """
    location: Optional[str] = None
    """
    The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    maintenanceWindow: Optional[List[MaintenanceWindowItem]] = None
    """
    A maintenance_window block as defined below.
    """
    pointInTimeRestoreTimeInUtc: Optional[str] = None
    """
    The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    privateDnsZoneId: Optional[str] = None
    """
    The ID of the private DNS zone to create the PostgreSQL Flexible Server.
    """
    privateDnsZoneIdRef: Optional[PrivateDnsZoneIdRef] = None
    """
    Reference to a PrivateDNSZone in network to populate privateDnsZoneId.
    """
    privateDnsZoneIdSelector: Optional[PrivateDnsZoneIdSelector] = None
    """
    Selector for a PrivateDNSZone in network to populate privateDnsZoneId.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Specifies whether this PostgreSQL Flexible Server is publicly accessible. Defaults to true.
    """
    replicationRole: Optional[str] = None
    """
    The replication role for the PostgreSQL Flexible Server. Possible value is None.
    """
    skuName: Optional[str] = None
    """
    The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
    """
    sourceServerId: Optional[str] = None
    """
    The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    storageMb: Optional[float] = None
    """
    The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4193280, 4194304, 8388608, 16777216 and 33553408.
    """
    storageTier: Optional[str] = None
    """
    The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are P4, P6, P10, P15,P20, P30,P40, P50,P60, P70 or P80. Default value is dependant on the storage_mb value. Please see the storage_tier defaults based on storage_mb table below.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
    """
    version: Optional[str] = None
    """
    The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13, 14, 15 and 16. Required when create_mode is Default.
    """
    zone: Optional[str] = None
    """
    Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AtProvider(BaseModel):
    administratorLogin: Optional[str] = None
    """
    The Administrator login for the PostgreSQL Flexible Server. Required when create_mode is Default and authentication.password_auth_enabled is true.
    """
    authentication: Optional[List[AuthenticationItem]] = None
    """
    An authentication block as defined below.
    """
    autoGrowEnabled: Optional[bool] = None
    """
    Is the storage auto grow for PostgreSQL Flexible Server enabled? Defaults to false.
    """
    backupRetentionDays: Optional[float] = None
    """
    The backup retention days for the PostgreSQL Flexible Server. Possible values are between 7 and 35 days.
    """
    createMode: Optional[str] = None
    """
    The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, Replica and Update.
    """
    customerManagedKey: Optional[List[CustomerManagedKeyItem]] = None
    """
    A customer_managed_key block as defined below. Changing this forces a new resource to be created.
    """
    delegatedSubnetId: Optional[str] = None
    """
    The ID of the virtual network subnet to create the PostgreSQL Flexible Server. The provided subnet should not have any other resource deployed in it and this subnet will be delegated to the PostgreSQL Flexible Server, if not already delegated. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    fqdn: Optional[str] = None
    """
    The FQDN of the PostgreSQL Flexible Server.
    """
    geoRedundantBackupEnabled: Optional[bool] = None
    """
    Is Geo-Redundant backup enabled on the PostgreSQL Flexible Server. Defaults to false. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    highAvailability: Optional[List[HighAvailabilityItem]] = None
    """
    A high_availability block as defined below.
    """
    id: Optional[str] = None
    """
    The ID of the PostgreSQL Flexible Server.
    """
    identity: Optional[List[IdentityItem]] = None
    """
    An identity block as defined below.
    """
    location: Optional[str] = None
    """
    The Azure Region where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    maintenanceWindow: Optional[List[MaintenanceWindowItem]] = None
    """
    A maintenance_window block as defined below.
    """
    pointInTimeRestoreTimeInUtc: Optional[str] = None
    """
    The point in time to restore from source_server_id when create_mode is PointInTimeRestore. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    privateDnsZoneId: Optional[str] = None
    """
    The ID of the private DNS zone to create the PostgreSQL Flexible Server.
    """
    publicNetworkAccessEnabled: Optional[bool] = None
    """
    Is public network access enabled?
    """
    replicationRole: Optional[str] = None
    """
    The replication role for the PostgreSQL Flexible Server. Possible value is None.
    """
    resourceGroupName: Optional[str] = None
    """
    The name of the Resource Group where the PostgreSQL Flexible Server should exist. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    skuName: Optional[str] = None
    """
    The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the tier + name pattern (e.g. B_Standard_B1ms, GP_Standard_D2s_v3, MO_Standard_E4s_v3).
    """
    sourceServerId: Optional[str] = None
    """
    The resource ID of the source PostgreSQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore or Replica. Changing this forces a new PostgreSQL Flexible Server to be created.
    """
    storageMb: Optional[float] = None
    """
    The max storage allowed for the PostgreSQL Flexible Server. Possible values are 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4193280, 4194304, 8388608, 16777216 and 33553408.
    """
    storageTier: Optional[str] = None
    """
    The name of storage performance tier for IOPS of the PostgreSQL Flexible Server. Possible values are P4, P6, P10, P15,P20, P30,P40, P50,P60, P70 or P80. Default value is dependant on the storage_mb value. Please see the storage_tier defaults based on storage_mb table below.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A mapping of tags which should be assigned to the PostgreSQL Flexible Server.
    """
    version: Optional[str] = None
    """
    The version of PostgreSQL Flexible Server to use. Possible values are 11,12, 13, 14, 15 and 16. Required when create_mode is Default.
    """
    zone: Optional[str] = None
    """
    Specifies the Availability Zone in which the PostgreSQL Flexible Server should be located.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class FlexibleServer(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    FlexibleServerSpec defines the desired state of FlexibleServer
    """
    status: Optional[Status] = None
    """
    FlexibleServerStatus defines the observed state of FlexibleServer.
    """


class FlexibleServerList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[FlexibleServer]
    """
    List of flexibleservers. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
# generated by datamodel-codegen:
#   filename:  workdir/rds_aws_upbound_io_v1beta1_cluster.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class DbClusterParameterGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DbClusterParameterGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class DbInstanceParameterGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DbInstanceParameterGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class DbSubnetGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DbSubnetGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class KmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class KmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class MasterPasswordSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class MasterUserSecretKmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class MasterUserSecretKmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class SourceClusterIdentifierRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SourceClusterIdentifierSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class RestoreToPointInTimeItem(BaseModel):
    restoreToTime: Optional[str] = None
    """
    Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.
    """
    restoreType: Optional[str] = None
    """
    Type of restore to be performed.
    Valid options are full-copy (default) and copy-on-write.
    """
    sourceClusterIdentifier: Optional[str] = None
    """
    Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
    """
    sourceClusterIdentifierRef: Optional[SourceClusterIdentifierRef] = None
    """
    Reference to a Cluster in rds to populate sourceClusterIdentifier.
    """
    sourceClusterIdentifierSelector: Optional[SourceClusterIdentifierSelector] = None
    """
    Selector for a Cluster in rds to populate sourceClusterIdentifier.
    """
    sourceClusterResourceId: Optional[str] = None
    """
    Cluster resource ID of the source database cluster from which to restore. To be used for restoring a deleted cluster in the same account which still has a retained automatic backup available.
    """
    useLatestRestorableTime: Optional[bool] = None
    """
    Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.
    """


class BucketNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class BucketNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class S3ImportItem(BaseModel):
    bucketName: Optional[str] = None
    """
    Bucket name where your backup is stored
    """
    bucketNameRef: Optional[BucketNameRef] = None
    """
    Reference to a Bucket in s3 to populate bucketName.
    """
    bucketNameSelector: Optional[BucketNameSelector] = None
    """
    Selector for a Bucket in s3 to populate bucketName.
    """
    bucketPrefix: Optional[str] = None
    """
    Can be blank, but is the path to your backup
    """
    ingestionRole: Optional[str] = None
    """
    Role applied to load the data.
    """
    sourceEngine: Optional[str] = None
    """
    Source engine for the backup
    """
    sourceEngineVersion: Optional[str] = None
    """
    Version of the source engine used to make the backup
    """


class ScalingConfigurationItem(BaseModel):
    autoPause: Optional[bool] = None
    """
    Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to true.
    """
    maxCapacity: Optional[float] = None
    """
    Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    """
    minCapacity: Optional[float] = None
    """
    Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    """
    secondsBeforeTimeout: Optional[float] = None
    """
    Amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. Valid values are 60 through 600. Defaults to 300.
    """
    secondsUntilAutoPause: Optional[float] = None
    """
    Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are 300 through 86400. Defaults to 300.
    """
    timeoutAction: Optional[str] = None
    """
    Action to take when the timeout is reached. Valid values: ForceApplyCapacityChange, RollbackCapacityChange. Defaults to RollbackCapacityChange. See documentation.
    """


class Serverlessv2ScalingConfigurationItem(BaseModel):
    maxCapacity: Optional[float] = None
    """
    Maximum capacity for an Aurora DB cluster in serverless DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 16.
    """
    minCapacity: Optional[float] = None
    """
    Minimum capacity for an Aurora DB cluster in serverless DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are 1, 2, 4, 8, 16, 32, 64, 128, 256. Valid Aurora PostgreSQL capacity values are (2, 4, 8, 16, 32, 64, 192, and 384). Defaults to 1.
    """


class VpcSecurityGroupIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class VpcSecurityGroupIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    allocatedStorage: Optional[float] = None
    """
    The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    """
    allowMajorVersionUpgrade: Optional[bool] = None
    """
    Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    """
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    """
    autoGeneratePassword: Optional[bool] = None
    """
    If true, the password will be auto-generated and stored in the Secret referenced by the masterPasswordSecretRef field.
    """
    availabilityZones: Optional[List[str]] = None
    """
    List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
    We recommend specifying 3 AZs or using the  if necessary.
    A maximum of 3 AZs can be configured.
    """
    backtrackWindow: Optional[float] = None
    """
    Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    """
    backupRetentionPeriod: Optional[float] = None
    """
    Days to retain backups for. Default 1
    """
    caCertificateIdentifier: Optional[str] = None
    """
    The CA certificate identifier to use for the DB cluster's server certificate.
    """
    clusterMembers: Optional[List[str]] = None
    """
    – List of RDS Instances that are a part of this cluster
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    –  Copy all Cluster tags to snapshots. Default is false.
    """
    databaseName: Optional[str] = None
    """
    Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    """
    dbClusterInstanceClass: Optional[str] = None
    """
    The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    """
    dbClusterParameterGroupName: Optional[str] = None
    """
    A cluster parameter group to associate with the cluster.
    """
    dbClusterParameterGroupNameRef: Optional[DbClusterParameterGroupNameRef] = None
    """
    Reference to a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.
    """
    dbClusterParameterGroupNameSelector: Optional[
        DbClusterParameterGroupNameSelector
    ] = None
    """
    Selector for a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.
    """
    dbInstanceParameterGroupName: Optional[str] = None
    """
    Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    """
    dbInstanceParameterGroupNameRef: Optional[DbInstanceParameterGroupNameRef] = None
    """
    Reference to a ParameterGroup in rds to populate dbInstanceParameterGroupName.
    """
    dbInstanceParameterGroupNameSelector: Optional[
        DbInstanceParameterGroupNameSelector
    ] = None
    """
    Selector for a ParameterGroup in rds to populate dbInstanceParameterGroupName.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    DB subnet group to associate with this DB cluster.
    NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    """
    dbSubnetGroupNameRef: Optional[DbSubnetGroupNameRef] = None
    """
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSubnetGroupNameSelector: Optional[DbSubnetGroupNameSelector] = None
    """
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSystemId: Optional[str] = None
    """
    For use with RDS Custom.
    """
    deleteAutomatedBackups: Optional[bool] = None
    """
    Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    """
    deletionProtection: Optional[bool] = None
    """
    If the DB cluster should have deletion protection enabled.
    The database can't be deleted when this value is set to true.
    The default is false.
    """
    domain: Optional[str] = None
    """
    The ID of the Directory Service Active Directory domain to create the cluster in.
    """
    domainIamRoleName: Optional[str] = None
    """
    The name of the IAM role to be used when making API calls to the Directory Service.
    """
    enableGlobalWriteForwarding: Optional[bool] = None
    """
    Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    """
    enableHttpEndpoint: Optional[bool] = None
    """
    Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    """
    enableLocalWriteForwarding: Optional[bool] = None
    """
    Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    """
    enabledCloudwatchLogsExports: Optional[List[str]] = None
    """
    Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineLifecycleSupport: Optional[str] = None
    """
    The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    """
    engineMode: Optional[str] = None
    """
    Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    """
    finalSnapshotIdentifier: Optional[str] = None
    """
    Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    """
    globalClusterIdentifier: Optional[str] = None
    """
    Global cluster identifier specified on aws_rds_global_cluster.
    """
    iamDatabaseAuthenticationEnabled: Optional[bool] = None
    """
    Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    """
    iops: Optional[float] = None
    """
    Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    manageMasterUserPassword: Optional[bool] = None
    """
    Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    """
    masterPasswordSecretRef: Optional[MasterPasswordSecretRef] = None
    """
    Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.
    """
    masterUserSecretKmsKeyId: Optional[str] = None
    """
    Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    """
    masterUserSecretKmsKeyIdRef: Optional[MasterUserSecretKmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.
    """
    masterUserSecretKmsKeyIdSelector: Optional[MasterUserSecretKmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.
    """
    masterUsername: Optional[str] = None
    """
    Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    """
    networkType: Optional[str] = None
    """
    Network type of the cluster. Valid values: IPV4, DUAL.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    """
    port: Optional[float] = None
    """
    Port on which the DB accepts connections
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    replicationSourceIdentifier: Optional[str] = None
    """
    ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    """
    restoreToPointInTime: Optional[List[RestoreToPointInTimeItem]] = None
    """
    Nested attribute for point in time restore. More details below.
    """
    s3Import: Optional[List[S3ImportItem]] = None
    """
    Port on which the DB accepts connections
    """
    scalingConfiguration: Optional[List[ScalingConfigurationItem]] = None
    """
    Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    """
    serverlessv2ScalingConfiguration: Optional[
        List[Serverlessv2ScalingConfigurationItem]
    ] = None
    """
    Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    """
    skipFinalSnapshot: Optional[bool] = None
    """
    Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    """
    snapshotIdentifier: Optional[str] = None
    """
    Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    """
    sourceRegion: Optional[str] = None
    """
    The source region for an encrypted replica DB cluster.
    """
    storageEncrypted: Optional[bool] = None
    """
    Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    """
    storageType: Optional[str] = None
    """
    (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of VPC security groups to associate with the Cluster
    """


class InitProvider(BaseModel):
    allocatedStorage: Optional[float] = None
    """
    The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    """
    allowMajorVersionUpgrade: Optional[bool] = None
    """
    Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    """
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    """
    availabilityZones: Optional[List[str]] = None
    """
    List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
    We recommend specifying 3 AZs or using the  if necessary.
    A maximum of 3 AZs can be configured.
    """
    backtrackWindow: Optional[float] = None
    """
    Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    """
    backupRetentionPeriod: Optional[float] = None
    """
    Days to retain backups for. Default 1
    """
    caCertificateIdentifier: Optional[str] = None
    """
    The CA certificate identifier to use for the DB cluster's server certificate.
    """
    clusterMembers: Optional[List[str]] = None
    """
    – List of RDS Instances that are a part of this cluster
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    –  Copy all Cluster tags to snapshots. Default is false.
    """
    databaseName: Optional[str] = None
    """
    Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    """
    dbClusterInstanceClass: Optional[str] = None
    """
    The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    """
    dbClusterParameterGroupName: Optional[str] = None
    """
    A cluster parameter group to associate with the cluster.
    """
    dbClusterParameterGroupNameRef: Optional[DbClusterParameterGroupNameRef] = None
    """
    Reference to a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.
    """
    dbClusterParameterGroupNameSelector: Optional[
        DbClusterParameterGroupNameSelector
    ] = None
    """
    Selector for a ClusterParameterGroup in rds to populate dbClusterParameterGroupName.
    """
    dbInstanceParameterGroupName: Optional[str] = None
    """
    Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    """
    dbInstanceParameterGroupNameRef: Optional[DbInstanceParameterGroupNameRef] = None
    """
    Reference to a ParameterGroup in rds to populate dbInstanceParameterGroupName.
    """
    dbInstanceParameterGroupNameSelector: Optional[
        DbInstanceParameterGroupNameSelector
    ] = None
    """
    Selector for a ParameterGroup in rds to populate dbInstanceParameterGroupName.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    DB subnet group to associate with this DB cluster.
    NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    """
    dbSubnetGroupNameRef: Optional[DbSubnetGroupNameRef] = None
    """
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSubnetGroupNameSelector: Optional[DbSubnetGroupNameSelector] = None
    """
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSystemId: Optional[str] = None
    """
    For use with RDS Custom.
    """
    deleteAutomatedBackups: Optional[bool] = None
    """
    Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    """
    deletionProtection: Optional[bool] = None
    """
    If the DB cluster should have deletion protection enabled.
    The database can't be deleted when this value is set to true.
    The default is false.
    """
    domain: Optional[str] = None
    """
    The ID of the Directory Service Active Directory domain to create the cluster in.
    """
    domainIamRoleName: Optional[str] = None
    """
    The name of the IAM role to be used when making API calls to the Directory Service.
    """
    enableGlobalWriteForwarding: Optional[bool] = None
    """
    Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    """
    enableHttpEndpoint: Optional[bool] = None
    """
    Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    """
    enableLocalWriteForwarding: Optional[bool] = None
    """
    Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    """
    enabledCloudwatchLogsExports: Optional[List[str]] = None
    """
    Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineLifecycleSupport: Optional[str] = None
    """
    The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    """
    engineMode: Optional[str] = None
    """
    Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    """
    finalSnapshotIdentifier: Optional[str] = None
    """
    Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    """
    globalClusterIdentifier: Optional[str] = None
    """
    Global cluster identifier specified on aws_rds_global_cluster.
    """
    iamDatabaseAuthenticationEnabled: Optional[bool] = None
    """
    Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    """
    iops: Optional[float] = None
    """
    Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    manageMasterUserPassword: Optional[bool] = None
    """
    Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    """
    masterPasswordSecretRef: Optional[MasterPasswordSecretRef] = None
    """
    Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the RDS Naming Constraints. Cannot be set if manage_master_user_password is set to true.
    Password for the master DB user. If you set autoGeneratePassword to true, the Secret referenced here will be created or updated with generated password if it does not already contain one.
    """
    masterUserSecretKmsKeyId: Optional[str] = None
    """
    Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    """
    masterUserSecretKmsKeyIdRef: Optional[MasterUserSecretKmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate masterUserSecretKmsKeyId.
    """
    masterUserSecretKmsKeyIdSelector: Optional[MasterUserSecretKmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate masterUserSecretKmsKeyId.
    """
    masterUsername: Optional[str] = None
    """
    Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    """
    networkType: Optional[str] = None
    """
    Network type of the cluster. Valid values: IPV4, DUAL.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    """
    port: Optional[float] = None
    """
    Port on which the DB accepts connections
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    """
    replicationSourceIdentifier: Optional[str] = None
    """
    ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    """
    restoreToPointInTime: Optional[List[RestoreToPointInTimeItem]] = None
    """
    Nested attribute for point in time restore. More details below.
    """
    s3Import: Optional[List[S3ImportItem]] = None
    """
    Port on which the DB accepts connections
    """
    scalingConfiguration: Optional[List[ScalingConfigurationItem]] = None
    """
    Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    """
    serverlessv2ScalingConfiguration: Optional[
        List[Serverlessv2ScalingConfigurationItem]
    ] = None
    """
    Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    """
    skipFinalSnapshot: Optional[bool] = None
    """
    Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    """
    snapshotIdentifier: Optional[str] = None
    """
    Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    """
    sourceRegion: Optional[str] = None
    """
    The source region for an encrypted replica DB cluster.
    """
    storageEncrypted: Optional[bool] = None
    """
    Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    """
    storageType: Optional[str] = None
    """
    (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of VPC security groups to associate with the Cluster
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class MasterUserSecretItem(BaseModel):
    kmsKeyId: Optional[str] = None
    """
    Amazon Web Services KMS key identifier that is used to encrypt the secret.
    """
    secretArn: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the secret.
    """
    secretStatus: Optional[str] = None
    """
    Status of the secret. Valid Values: creating | active | rotating | impaired.
    """


class RestoreToPointInTimeItemModel(BaseModel):
    restoreToTime: Optional[str] = None
    """
    Date and time in UTC format to restore the database cluster to. Conflicts with use_latest_restorable_time.
    """
    restoreType: Optional[str] = None
    """
    Type of restore to be performed.
    Valid options are full-copy (default) and copy-on-write.
    """
    sourceClusterIdentifier: Optional[str] = None
    """
    Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
    """
    sourceClusterResourceId: Optional[str] = None
    """
    Cluster resource ID of the source database cluster from which to restore. To be used for restoring a deleted cluster in the same account which still has a retained automatic backup available.
    """
    useLatestRestorableTime: Optional[bool] = None
    """
    Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with restore_to_time.
    """


class S3ImportItemModel(BaseModel):
    bucketName: Optional[str] = None
    """
    Bucket name where your backup is stored
    """
    bucketPrefix: Optional[str] = None
    """
    Can be blank, but is the path to your backup
    """
    ingestionRole: Optional[str] = None
    """
    Role applied to load the data.
    """
    sourceEngine: Optional[str] = None
    """
    Source engine for the backup
    """
    sourceEngineVersion: Optional[str] = None
    """
    Version of the source engine used to make the backup
    """


class AtProvider(BaseModel):
    allocatedStorage: Optional[float] = None
    """
    The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.
    """
    allowMajorVersionUpgrade: Optional[bool] = None
    """
    Enable to allow major engine version upgrades when changing engine versions. Defaults to false.
    """
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is false. See Amazon RDS Documentation for more information.
    """
    arn: Optional[str] = None
    """
    Amazon Resource Name (ARN) of cluster
    """
    availabilityZones: Optional[List[str]] = None
    """
    List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.
    We recommend specifying 3 AZs or using the  if necessary.
    A maximum of 3 AZs can be configured.
    """
    backtrackWindow: Optional[float] = None
    """
    Target backtrack window, in seconds. Only available for aurora and aurora-mysql engines currently. To disable backtracking, set this value to 0. Defaults to 0. Must be between 0 and 259200 (72 hours)
    """
    backupRetentionPeriod: Optional[float] = None
    """
    Days to retain backups for. Default 1
    """
    caCertificateIdentifier: Optional[str] = None
    """
    The CA certificate identifier to use for the DB cluster's server certificate.
    """
    caCertificateValidTill: Optional[str] = None
    """
    Expiration date of the DB instance’s server certificate
    """
    clusterMembers: Optional[List[str]] = None
    """
    – List of RDS Instances that are a part of this cluster
    """
    clusterResourceId: Optional[str] = None
    """
    RDS Cluster Resource ID
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    –  Copy all Cluster tags to snapshots. Default is false.
    """
    databaseName: Optional[str] = None
    """
    Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: RDS Naming Constraints
    """
    dbClusterInstanceClass: Optional[str] = None
    """
    The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example db.m6g.xlarge. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see DB instance class in the Amazon RDS User Guide.
    """
    dbClusterParameterGroupName: Optional[str] = None
    """
    A cluster parameter group to associate with the cluster.
    """
    dbInstanceParameterGroupName: Optional[str] = None
    """
    Instance parameter group to associate with all instances of the DB cluster. The db_instance_parameter_group_name parameter is only valid in combination with the allow_major_version_upgrade parameter.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    DB subnet group to associate with this DB cluster.
    NOTE: This must match the db_subnet_group_name specified on every aws_rds_cluster_instance in the cluster.
    """
    dbSystemId: Optional[str] = None
    """
    For use with RDS Custom.
    """
    deleteAutomatedBackups: Optional[bool] = None
    """
    Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is true.
    """
    deletionProtection: Optional[bool] = None
    """
    If the DB cluster should have deletion protection enabled.
    The database can't be deleted when this value is set to true.
    The default is false.
    """
    domain: Optional[str] = None
    """
    The ID of the Directory Service Active Directory domain to create the cluster in.
    """
    domainIamRoleName: Optional[str] = None
    """
    The name of the IAM role to be used when making API calls to the Directory Service.
    """
    enableGlobalWriteForwarding: Optional[bool] = None
    """
    Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an aws_rds_global_cluster's primary cluster. See the User Guide for Aurora for more information.
    """
    enableHttpEndpoint: Optional[bool] = None
    """
    Enable HTTP endpoint (data API). Only valid for some combinations of engine_mode, engine and engine_version and only available in some regions. See the Region and version availability section of the documentation. This option also does not work with any of these options specified: snapshot_identifier, replication_source_identifier, s3_import.
    """
    enableLocalWriteForwarding: Optional[bool] = None
    """
    Whether read replicas can forward write operations to the writer DB instance in the DB cluster. By default, write operations aren't allowed on reader DB instances.. See the User Guide for Aurora for more information. NOTE: Local write forwarding requires Aurora MySQL version 3.04 or higher.
    """
    enabledCloudwatchLogsExports: Optional[List[str]] = None
    """
    Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: audit, error, general, slowquery, postgresql (PostgreSQL).
    """
    endpoint: Optional[str] = None
    """
    DNS address of the RDS instance
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for this DB cluster. Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres. (Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineLifecycleSupport: Optional[str] = None
    """
    The life cycle type for this DB instance. This setting is valid for cluster types Aurora DB clusters and Multi-AZ DB clusters. Valid values are open-source-rds-extended-support, open-source-rds-extended-support-disabled. Default value is open-source-rds-extended-support. [Using Amazon RDS Extended Support]: https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/extended-support.html
    """
    engineMode: Optional[str] = None
    """
    Database engine mode. Valid values: global (only valid for Aurora MySQL 1.21 and earlier), parallelquery, provisioned, serverless. Defaults to: provisioned. See the RDS User Guide for limitations when using serverless.
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Updating this argument results in an outage. See the Aurora MySQL and Aurora Postgres documentation for your configured engine to determine this value, or by running aws rds describe-db-engine-versions. For example with Aurora MySQL 2, a potential value for this argument is 5.7.mysql_aurora.2.03.2. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute engine_version_actual, , see Attribute Reference below.
    """
    engineVersionActual: Optional[str] = None
    """
    Running version of the database.
    """
    finalSnapshotIdentifier: Optional[str] = None
    """
    Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.
    """
    globalClusterIdentifier: Optional[str] = None
    """
    Global cluster identifier specified on aws_rds_global_cluster.
    """
    hostedZoneId: Optional[str] = None
    """
    Route53 Hosted Zone ID of the endpoint
    """
    iamDatabaseAuthenticationEnabled: Optional[bool] = None
    """
    Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see AWS Documentation for availability and limitations.
    """
    iamRoles: Optional[List[str]] = None
    """
    List of ARNs for the IAM roles to associate to the RDS Cluster.
    """
    id: Optional[str] = None
    """
    RDS Cluster Identifier
    """
    iops: Optional[float] = None
    """
    Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see Amazon RDS Provisioned IOPS storage to improve performance in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN for the KMS encryption key. When specifying kms_key_id, storage_encrypted needs to be set to true.
    """
    manageMasterUserPassword: Optional[bool] = None
    """
    Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if master_password is provided.
    """
    masterUserSecret: Optional[List[MasterUserSecretItem]] = None
    """
    Block that specifies the master user secret. Only available when manage_master_user_password is set to true. Documented below.
    """
    masterUserSecretKmsKeyId: Optional[str] = None
    """
    Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.
    """
    masterUsername: Optional[str] = None
    """
    Username for the master DB user. Please refer to the RDS Naming Constraints. This argument does not support in-place updates and cannot be changed during a restore from snapshot.
    """
    networkType: Optional[str] = None
    """
    Network type of the cluster. Valid values: IPV4, DUAL.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Enables Performance Insights for the RDS Cluster
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the KMS Key ID to encrypt Performance Insights data. If not specified, the default RDS KMS key will be used (aws/rds).
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Valid only for Non-Aurora Multi-AZ DB Clusters. Specifies the amount of time to retain performance insights data for. Defaults to 7 days if Performance Insights are enabled. Valid values are 7, month * 31 (where month is a number of months from 1-23), and 731. See here for more information on retention periods.
    """
    port: Optional[float] = None
    """
    Port on which the DB accepts connections
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30
    """
    readerEndpoint: Optional[str] = None
    """
    Read-only endpoint for the Aurora cluster, automatically
    load-balanced across replicas
    """
    replicationSourceIdentifier: Optional[str] = None
    """
    ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica.
    """
    restoreToPointInTime: Optional[List[RestoreToPointInTimeItemModel]] = None
    """
    Nested attribute for point in time restore. More details below.
    """
    s3Import: Optional[List[S3ImportItemModel]] = None
    """
    Port on which the DB accepts connections
    """
    scalingConfiguration: Optional[List[ScalingConfigurationItem]] = None
    """
    Nested attribute with scaling properties. Only valid when engine_mode is set to serverless. More details below.
    """
    serverlessv2ScalingConfiguration: Optional[
        List[Serverlessv2ScalingConfigurationItem]
    ] = None
    """
    Nested attribute with scaling properties for ServerlessV2. Only valid when engine_mode is set to provisioned. More details below.
    """
    skipFinalSnapshot: Optional[bool] = None
    """
    Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from final_snapshot_identifier. Default is false.
    """
    snapshotIdentifier: Optional[str] = None
    """
    Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with global_cluster_identifier. Clusters cannot be restored from snapshot and joined to an existing global cluster in a single operation. See the AWS documentation or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.
    """
    sourceRegion: Optional[str] = None
    """
    The source region for an encrypted replica DB cluster.
    """
    storageEncrypted: Optional[bool] = None
    """
    Specifies whether the DB cluster is encrypted. The default is false for provisioned engine_mode and true for serverless engine_mode. When restoring an unencrypted snapshot_identifier, the kms_key_id argument must be provided to encrypt the restored cluster.
    """
    storageType: Optional[str] = None
    """
    (Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, storage_type modifications can be done in-place. For Multi-AZ DB Clusters, the iops argument must also be set. Valid values are: "", aurora-iopt1 (Aurora DB Clusters); io1, io2 (Multi-AZ DB Clusters). Default: "" (Aurora DB Clusters); io1 (Multi-AZ DB Clusters).
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of VPC security groups to associate with the Cluster
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class Cluster(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    ClusterSpec defines the desired state of Cluster
    """
    status: Optional[Status] = None
    """
    ClusterStatus defines the observed state of Cluster.
    """


class ClusterList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Cluster]
    """
    List of clusters. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
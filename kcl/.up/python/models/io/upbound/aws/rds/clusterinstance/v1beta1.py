# generated by datamodel-codegen:
#   filename:  workdir/rds_aws_upbound_io_v1beta1_clusterinstance.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class ClusterIdentifierRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ClusterIdentifierSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class DbParameterGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DbParameterGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class DbSubnetGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class DbSubnetGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class MonitoringRoleArnRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class MonitoringRoleArnSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class PerformanceInsightsKmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class PerformanceInsightsKmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    """
    autoMinorVersionUpgrade: Optional[bool] = None
    """
    Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    """
    availabilityZone: Optional[str] = None
    """
    EC2 Availability Zone that the DB instance is created in. See docs about the details.
    """
    caCertIdentifier: Optional[str] = None
    """
    Identifier of the CA certificate for the DB instance.
    """
    clusterIdentifier: Optional[str] = None
    """
    Identifier of the aws_rds_cluster in which to launch this instance.
    """
    clusterIdentifierRef: Optional[ClusterIdentifierRef] = None
    """
    Reference to a Cluster in rds to populate clusterIdentifier.
    """
    clusterIdentifierSelector: Optional[ClusterIdentifierSelector] = None
    """
    Selector for a Cluster in rds to populate clusterIdentifier.
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    defined tags from the DB instance to snapshots of the DB instance. Default false.
    """
    customIamInstanceProfile: Optional[str] = None
    """
    Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    """
    dbParameterGroupName: Optional[str] = None
    """
    Name of the DB parameter group to associate with this instance.
    """
    dbParameterGroupNameRef: Optional[DbParameterGroupNameRef] = None
    """
    Reference to a ParameterGroup in rds to populate dbParameterGroupName.
    """
    dbParameterGroupNameSelector: Optional[DbParameterGroupNameSelector] = None
    """
    Selector for a ParameterGroup in rds to populate dbParameterGroupName.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    """
    dbSubnetGroupNameRef: Optional[DbSubnetGroupNameRef] = None
    """
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSubnetGroupNameSelector: Optional[DbSubnetGroupNameSelector] = None
    """
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for the RDS cluster instance.
    Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    """
    instanceClass: Optional[str] = None
    """
    Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    """
    monitoringInterval: Optional[float] = None
    """
    Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    """
    monitoringRoleArn: Optional[str] = None
    """
    ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    """
    monitoringRoleArnRef: Optional[MonitoringRoleArnRef] = None
    """
    Reference to a Role in iam to populate monitoringRoleArn.
    """
    monitoringRoleArnSelector: Optional[MonitoringRoleArnSelector] = None
    """
    Selector for a Role in iam to populate monitoringRoleArn.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Specifies whether Performance Insights is enabled or not.
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    """
    performanceInsightsKmsKeyIdRef: Optional[PerformanceInsightsKmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate performanceInsightsKmsKeyId.
    """
    performanceInsightsKmsKeyIdSelector: Optional[
        PerformanceInsightsKmsKeyIdSelector
    ] = None
    """
    Selector for a Key in kms to populate performanceInsightsKmsKeyId.
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    """
    promotionTier: Optional[float] = None
    """
    Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    """
    publiclyAccessible: Optional[bool] = None
    """
    Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """


class InitProvider(BaseModel):
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    """
    autoMinorVersionUpgrade: Optional[bool] = None
    """
    Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    """
    availabilityZone: Optional[str] = None
    """
    EC2 Availability Zone that the DB instance is created in. See docs about the details.
    """
    caCertIdentifier: Optional[str] = None
    """
    Identifier of the CA certificate for the DB instance.
    """
    clusterIdentifier: Optional[str] = None
    """
    Identifier of the aws_rds_cluster in which to launch this instance.
    """
    clusterIdentifierRef: Optional[ClusterIdentifierRef] = None
    """
    Reference to a Cluster in rds to populate clusterIdentifier.
    """
    clusterIdentifierSelector: Optional[ClusterIdentifierSelector] = None
    """
    Selector for a Cluster in rds to populate clusterIdentifier.
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    defined tags from the DB instance to snapshots of the DB instance. Default false.
    """
    customIamInstanceProfile: Optional[str] = None
    """
    Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    """
    dbParameterGroupName: Optional[str] = None
    """
    Name of the DB parameter group to associate with this instance.
    """
    dbParameterGroupNameRef: Optional[DbParameterGroupNameRef] = None
    """
    Reference to a ParameterGroup in rds to populate dbParameterGroupName.
    """
    dbParameterGroupNameSelector: Optional[DbParameterGroupNameSelector] = None
    """
    Selector for a ParameterGroup in rds to populate dbParameterGroupName.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    """
    dbSubnetGroupNameRef: Optional[DbSubnetGroupNameRef] = None
    """
    Reference to a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    dbSubnetGroupNameSelector: Optional[DbSubnetGroupNameSelector] = None
    """
    Selector for a SubnetGroup in rds to populate dbSubnetGroupName.
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for the RDS cluster instance.
    Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    """
    instanceClass: Optional[str] = None
    """
    Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    """
    monitoringInterval: Optional[float] = None
    """
    Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    """
    monitoringRoleArn: Optional[str] = None
    """
    ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    """
    monitoringRoleArnRef: Optional[MonitoringRoleArnRef] = None
    """
    Reference to a Role in iam to populate monitoringRoleArn.
    """
    monitoringRoleArnSelector: Optional[MonitoringRoleArnSelector] = None
    """
    Selector for a Role in iam to populate monitoringRoleArn.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Specifies whether Performance Insights is enabled or not.
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    """
    performanceInsightsKmsKeyIdRef: Optional[PerformanceInsightsKmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate performanceInsightsKmsKeyId.
    """
    performanceInsightsKmsKeyIdSelector: Optional[
        PerformanceInsightsKmsKeyIdSelector
    ] = None
    """
    Selector for a Key in kms to populate performanceInsightsKmsKeyId.
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    """
    promotionTier: Optional[float] = None
    """
    Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    """
    publiclyAccessible: Optional[bool] = None
    """
    Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AtProvider(BaseModel):
    applyImmediately: Optional[bool] = None
    """
    Specifies whether any database modifications are applied immediately, or during the next maintenance window. Default isfalse.
    """
    arn: Optional[str] = None
    """
    Amazon Resource Name (ARN) of cluster instance
    """
    autoMinorVersionUpgrade: Optional[bool] = None
    """
    Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default true.
    """
    availabilityZone: Optional[str] = None
    """
    EC2 Availability Zone that the DB instance is created in. See docs about the details.
    """
    caCertIdentifier: Optional[str] = None
    """
    Identifier of the CA certificate for the DB instance.
    """
    clusterIdentifier: Optional[str] = None
    """
    Identifier of the aws_rds_cluster in which to launch this instance.
    """
    copyTagsToSnapshot: Optional[bool] = None
    """
    defined tags from the DB instance to snapshots of the DB instance. Default false.
    """
    customIamInstanceProfile: Optional[str] = None
    """
    Instance profile associated with the underlying Amazon EC2 instance of an RDS Custom DB instance.
    """
    dbParameterGroupName: Optional[str] = None
    """
    Name of the DB parameter group to associate with this instance.
    """
    dbSubnetGroupName: Optional[str] = None
    """
    Specifies the DB subnet group to associate with this DB instance. The default behavior varies depending on whether db_subnet_group_name is specified. Please refer to official AWS documentation to understand how db_subnet_group_name and publicly_accessible parameters affect DB instance behaviour. NOTE: This must match the db_subnet_group_name of the attached aws_rds_cluster.
    """
    dbiResourceId: Optional[str] = None
    """
    Region-unique, immutable identifier for the DB instance.
    """
    endpoint: Optional[str] = None
    """
    DNS address for this instance. May not be writable
    """
    engine: Optional[str] = None
    """
    Name of the database engine to be used for the RDS cluster instance.
    Valid Values: aurora-mysql, aurora-postgresql, mysql, postgres.(Note that mysql and postgres are Multi-AZ RDS clusters).
    """
    engineVersion: Optional[str] = None
    """
    Database engine version. Please note that to upgrade the engine_version of the instance, it must be done on the aws_rds_cluster engine_version. Trying to upgrade in aws_cluster_instance will not update the engine_version.
    """
    engineVersionActual: Optional[str] = None
    """
    Database engine version
    """
    id: Optional[str] = None
    """
    Instance identifier
    """
    instanceClass: Optional[str] = None
    """
    Instance class to use. For details on CPU and memory, see Scaling Aurora DB Instances. Aurora uses db.* instance classes/types. Please see AWS Documentation for currently available instance classes and complete details. For Aurora Serverless v2 use db.serverless.
    """
    kmsKeyId: Optional[str] = None
    """
    ARN for the KMS encryption key if one is set to the cluster.
    """
    monitoringInterval: Optional[float] = None
    """
    Interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.
    """
    monitoringRoleArn: Optional[str] = None
    """
    ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. You can find more information on the AWS Documentation what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
    """
    networkType: Optional[str] = None
    """
    Network type of the DB instance.
    """
    performanceInsightsEnabled: Optional[bool] = None
    """
    Specifies whether Performance Insights is enabled or not.
    """
    performanceInsightsKmsKeyId: Optional[str] = None
    """
    ARN for the KMS key to encrypt Performance Insights data. When specifying performance_insights_kms_key_id, performance_insights_enabled needs to be set to true.
    """
    performanceInsightsRetentionPeriod: Optional[float] = None
    """
    Amount of time in days to retain Performance Insights data. Valid values are 7, 731 (2 years) or a multiple of 31. When specifying performance_insights_retention_period, performance_insights_enabled needs to be set to true. Defaults to '7'.
    """
    port: Optional[float] = None
    """
    Database port
    """
    preferredBackupWindow: Optional[str] = None
    """
    Daily time range during which automated backups are created if automated backups are enabled. Eg: "04:00-09:00". NOTE: If preferred_backup_window is set at the cluster level, this argument must be omitted.
    """
    preferredMaintenanceWindow: Optional[str] = None
    """
    Window to perform maintenance in. Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
    """
    promotionTier: Optional[float] = None
    """
    Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoted to writer.
    """
    publiclyAccessible: Optional[bool] = None
    """
    Bool to control if instance is publicly accessible. Default false. See the documentation on Creating DB Instances for more details on controlling this property.
    """
    storageEncrypted: Optional[bool] = None
    """
    Specifies whether the DB cluster is encrypted.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    writer: Optional[bool] = None
    """
    – Boolean indicating if this instance is writable. False indicates this instance is a read replica.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class ClusterInstance(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    ClusterInstanceSpec defines the desired state of ClusterInstance
    """
    status: Optional[Status] = None
    """
    ClusterInstanceStatus defines the observed state of ClusterInstance.
    """


class ClusterInstanceList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[ClusterInstance]
    """
    List of clusterinstances. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
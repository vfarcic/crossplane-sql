# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_networkinsightsanalysis.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class NetworkInsightsPathIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class NetworkInsightsPathIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    filterInArns: Optional[List[str]] = None
    """
    A list of ARNs for resources the path must traverse.
    """
    networkInsightsPathId: Optional[str] = None
    """
    ID of the Network Insights Path to run an analysis on.
    """
    networkInsightsPathIdRef: Optional[NetworkInsightsPathIdRef] = None
    """
    Reference to a NetworkInsightsPath in ec2 to populate networkInsightsPathId.
    """
    networkInsightsPathIdSelector: Optional[NetworkInsightsPathIdSelector] = None
    """
    Selector for a NetworkInsightsPath in ec2 to populate networkInsightsPathId.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    waitForCompletion: Optional[bool] = None
    """
    If enabled, the resource will wait for the Network Insights Analysis status to change to succeeded or failed. Setting this to false will skip the process. Default: true.
    """


class InitProvider(BaseModel):
    filterInArns: Optional[List[str]] = None
    """
    A list of ARNs for resources the path must traverse.
    """
    networkInsightsPathId: Optional[str] = None
    """
    ID of the Network Insights Path to run an analysis on.
    """
    networkInsightsPathIdRef: Optional[NetworkInsightsPathIdRef] = None
    """
    Reference to a NetworkInsightsPath in ec2 to populate networkInsightsPathId.
    """
    networkInsightsPathIdSelector: Optional[NetworkInsightsPathIdSelector] = None
    """
    Selector for a NetworkInsightsPath in ec2 to populate networkInsightsPathId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    waitForCompletion: Optional[bool] = None
    """
    If enabled, the resource will wait for the Network Insights Analysis status to change to succeeded or failed. Setting this to false will skip the process. Default: true.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AlternatePathHint(BaseModel):
    componentArn: Optional[str] = None
    """
    The Amazon Resource Name (ARN) of the component.
    """
    componentId: Optional[str] = None
    """
    The ID of the component.
    """


class AclItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class PortRangeItem(BaseModel):
    from_: Optional[float] = Field(None, alias='from')
    to: Optional[float] = None


class AclRuleItem(BaseModel):
    cidr: Optional[str] = None
    egress: Optional[bool] = None
    portRange: Optional[List[PortRangeItem]] = None
    protocol: Optional[str] = None
    ruleAction: Optional[str] = None
    ruleNumber: Optional[float] = None


class AttachedToItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class ClassicLoadBalancerListenerItem(BaseModel):
    instancePort: Optional[float] = None
    loadBalancerPort: Optional[float] = None


class ComponentItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class CustomerGatewayItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class DestinationItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class DestinationVpcItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class ElasticLoadBalancerListenerItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class IngressRouteTableItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class InternetGatewayItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class LoadBalancerTargetGroupItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class LoadBalancerTargetGroup(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class NatGatewayItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class NetworkInterfaceItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class PortRange(BaseModel):
    from_: Optional[float] = Field(None, alias='from')
    to: Optional[float] = None


class PrefixListItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class RouteTableItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class RouteTableRouteItem(BaseModel):
    destinationCidr: Optional[str] = None
    destinationPrefixListId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    egressOnlyInternetGatewayId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    gatewayId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    instanceId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    natGatewayId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    networkInterfaceId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    origin: Optional[str] = None
    transitGatewayId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    vpcPeeringConnectionId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """


class SecurityGroupItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class SecurityGroupRuleItem(BaseModel):
    cidr: Optional[str] = None
    direction: Optional[str] = None
    portRange: Optional[List[PortRangeItem]] = None
    prefixListId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    protocol: Optional[str] = None
    securityGroupId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """


class SecurityGroup(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class SourceVpcItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class SubnetItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class SubnetRouteTableItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class TransitGatewayItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class TransitGatewayAttachmentItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class TransitGatewayRouteTableItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class TransitGatewayRouteTableRouteItem(BaseModel):
    attachmentId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    destinationCidr: Optional[str] = None
    prefixListId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    resourceId: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    resourceType: Optional[str] = None
    routeOrigin: Optional[str] = None
    state: Optional[str] = None


class VpcItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class VpcEndpointItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class VpcPeeringConnectionItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class VpnConnectionItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class VpnGatewayItem(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    name: Optional[str] = None


class Explanation(BaseModel):
    acl: Optional[List[AclItem]] = None
    aclRule: Optional[List[AclRuleItem]] = None
    address: Optional[str] = None
    addresses: Optional[List[str]] = None
    attachedTo: Optional[List[AttachedToItem]] = None
    availabilityZones: Optional[List[str]] = None
    cidrs: Optional[List[str]] = None
    classicLoadBalancerListener: Optional[List[ClassicLoadBalancerListenerItem]] = None
    component: Optional[List[ComponentItem]] = None
    customerGateway: Optional[List[CustomerGatewayItem]] = None
    destination: Optional[List[DestinationItem]] = None
    destinationVpc: Optional[List[DestinationVpcItem]] = None
    direction: Optional[str] = None
    elasticLoadBalancerListener: Optional[List[ElasticLoadBalancerListenerItem]] = None
    explanationCode: Optional[str] = None
    ingressRouteTable: Optional[List[IngressRouteTableItem]] = None
    internetGateway: Optional[List[InternetGatewayItem]] = None
    loadBalancerArn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    loadBalancerListenerPort: Optional[float] = None
    loadBalancerTargetGroup: Optional[List[LoadBalancerTargetGroupItem]] = None
    loadBalancerTargetGroups: Optional[List[LoadBalancerTargetGroup]] = None
    loadBalancerTargetPort: Optional[float] = None
    missingComponent: Optional[str] = None
    natGateway: Optional[List[NatGatewayItem]] = None
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    packetField: Optional[str] = None
    port: Optional[float] = None
    portRanges: Optional[List[PortRange]] = None
    prefixList: Optional[List[PrefixListItem]] = None
    protocols: Optional[List[str]] = None
    routeTable: Optional[List[RouteTableItem]] = None
    routeTableRoute: Optional[List[RouteTableRouteItem]] = None
    securityGroup: Optional[List[SecurityGroupItem]] = None
    securityGroupRule: Optional[List[SecurityGroupRuleItem]] = None
    securityGroups: Optional[List[SecurityGroup]] = None
    sourceVpc: Optional[List[SourceVpcItem]] = None
    state: Optional[str] = None
    subnet: Optional[List[SubnetItem]] = None
    subnetRouteTable: Optional[List[SubnetRouteTableItem]] = None
    transitGateway: Optional[List[TransitGatewayItem]] = None
    transitGatewayAttachment: Optional[List[TransitGatewayAttachmentItem]] = None
    transitGatewayRouteTable: Optional[List[TransitGatewayRouteTableItem]] = None
    transitGatewayRouteTableRoute: Optional[List[TransitGatewayRouteTableRouteItem]] = (
        None
    )
    vpc: Optional[List[VpcItem]] = None
    vpcEndpoint: Optional[List[VpcEndpointItem]] = None
    vpcPeeringConnection: Optional[List[VpcPeeringConnectionItem]] = None
    vpnConnection: Optional[List[VpnConnectionItem]] = None
    vpnGateway: Optional[List[VpnGatewayItem]] = None


class AdditionalDetail(BaseModel):
    additionalDetailType: Optional[str] = None
    component: Optional[List[ComponentItem]] = None


class DestinationPortRange(BaseModel):
    from_: Optional[float] = Field(None, alias='from')
    to: Optional[float] = None


class SourcePortRange(BaseModel):
    from_: Optional[float] = Field(None, alias='from')
    to: Optional[float] = None


class InboundHeaderItem(BaseModel):
    destinationAddresses: Optional[List[str]] = None
    destinationPortRanges: Optional[List[DestinationPortRange]] = None
    protocol: Optional[str] = None
    sourceAddresses: Optional[List[str]] = None
    sourcePortRanges: Optional[List[SourcePortRange]] = None


class OutboundHeaderItem(BaseModel):
    destinationAddresses: Optional[List[str]] = None
    destinationPortRanges: Optional[List[DestinationPortRange]] = None
    protocol: Optional[str] = None
    sourceAddresses: Optional[List[str]] = None
    sourcePortRanges: Optional[List[SourcePortRange]] = None


class ForwardPathComponent(BaseModel):
    aclRule: Optional[List[AclRuleItem]] = None
    additionalDetails: Optional[List[AdditionalDetail]] = None
    attachedTo: Optional[List[AttachedToItem]] = None
    component: Optional[List[ComponentItem]] = None
    destinationVpc: Optional[List[DestinationVpcItem]] = None
    inboundHeader: Optional[List[InboundHeaderItem]] = None
    outboundHeader: Optional[List[OutboundHeaderItem]] = None
    routeTableRoute: Optional[List[RouteTableRouteItem]] = None
    securityGroupRule: Optional[List[SecurityGroupRuleItem]] = None
    sequenceNumber: Optional[float] = None
    sourceVpc: Optional[List[SourceVpcItem]] = None
    subnet: Optional[List[SubnetItem]] = None
    transitGateway: Optional[List[TransitGatewayItem]] = None
    transitGatewayRouteTableRoute: Optional[List[TransitGatewayRouteTableRouteItem]] = (
        None
    )
    vpc: Optional[List[VpcItem]] = None


class ReturnPathComponent(BaseModel):
    aclRule: Optional[List[AclRuleItem]] = None
    additionalDetails: Optional[List[AdditionalDetail]] = None
    attachedTo: Optional[List[AttachedToItem]] = None
    component: Optional[List[ComponentItem]] = None
    destinationVpc: Optional[List[DestinationVpcItem]] = None
    inboundHeader: Optional[List[InboundHeaderItem]] = None
    outboundHeader: Optional[List[OutboundHeaderItem]] = None
    routeTableRoute: Optional[List[RouteTableRouteItem]] = None
    securityGroupRule: Optional[List[SecurityGroupRuleItem]] = None
    sequenceNumber: Optional[float] = None
    sourceVpc: Optional[List[SourceVpcItem]] = None
    subnet: Optional[List[SubnetItem]] = None
    transitGateway: Optional[List[TransitGatewayItem]] = None
    transitGatewayRouteTableRoute: Optional[List[TransitGatewayRouteTableRouteItem]] = (
        None
    )
    vpc: Optional[List[VpcItem]] = None


class AtProvider(BaseModel):
    alternatePathHints: Optional[List[AlternatePathHint]] = None
    """
    Potential intermediate components of a feasible path. Described below.
    """
    arn: Optional[str] = None
    """
    ARN of the Network Insights Analysis.
    """
    explanations: Optional[List[Explanation]] = None
    """
    Explanation codes for an unreachable path. See the AWS documentation for details.
    """
    filterInArns: Optional[List[str]] = None
    """
    A list of ARNs for resources the path must traverse.
    """
    forwardPathComponents: Optional[List[ForwardPathComponent]] = None
    """
    The components in the path from source to destination. See the AWS documentation for details.
    """
    id: Optional[str] = None
    """
    ID of the Network Insights Analysis.
    """
    networkInsightsPathId: Optional[str] = None
    """
    ID of the Network Insights Path to run an analysis on.
    """
    pathFound: Optional[bool] = None
    """
    Set to true if the destination was reachable.
    """
    returnPathComponents: Optional[List[ReturnPathComponent]] = None
    """
    The components in the path from destination to source. See the AWS documentation for details.
    """
    startDate: Optional[str] = None
    """
    The date/time the analysis was started.
    """
    status: Optional[str] = None
    """
    The status of the analysis. succeeded means the analysis was completed, not that a path was found, for that see path_found.
    """
    statusMessage: Optional[str] = None
    """
    A message to provide more context when the status is failed.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    waitForCompletion: Optional[bool] = None
    """
    If enabled, the resource will wait for the Network Insights Analysis status to change to succeeded or failed. Setting this to false will skip the process. Default: true.
    """
    warningMessage: Optional[str] = None
    """
    The warning message.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class NetworkInsightsAnalysis(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    NetworkInsightsAnalysisSpec defines the desired state of NetworkInsightsAnalysis
    """
    status: Optional[Status] = None
    """
    NetworkInsightsAnalysisStatus defines the observed state of NetworkInsightsAnalysis.
    """


class NetworkInsightsAnalysisList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[NetworkInsightsAnalysis]
    """
    List of networkinsightsanalyses. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_networkinterface.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class SecurityGroupRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SecurityGroupSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class SubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    description: Optional[str] = None
    """
    Description for the network interface.
    """
    interfaceType: Optional[str] = None
    """
    Type of network interface to create. Set to efa for Elastic Fabric Adapter. Changing interface_type will cause the resource to be destroyed and re-created.
    """
    ipv4PrefixCount: Optional[float] = None
    """
    Number of IPv4 prefixes that AWS automatically assigns to the network interface.
    """
    ipv4Prefixes: Optional[List[str]] = None
    """
    One or more IPv4 prefixes assigned to the network interface.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific ipv6_addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true, you can specify 0 to override this setting.
    """
    ipv6AddressList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order.
    """
    ipv6AddressListEnabled: Optional[bool] = None
    """
    Whether ipv6_address_list is allowed and controls the IPs to assign to the ENI and ipv6_addresses and ipv6_address_count become read-only. Default false.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying ipv6_address_count.
    """
    ipv6PrefixCount: Optional[float] = None
    """
    Number of IPv6 prefixes that AWS automatically assigns to the network interface.
    """
    ipv6Prefixes: Optional[List[str]] = None
    """
    One or more IPv6 prefixes assigned to the network interface.
    """
    privateIp: Optional[str] = None
    privateIpList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order. Requires setting private_ip_list_enabled to true.
    """
    privateIpListEnabled: Optional[bool] = None
    """
    Whether private_ip_list is allowed and controls the IPs to assign to the ENI and private_ips and private_ips_count become read-only. Default false.
    """
    privateIps: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI without regard to order.
    """
    privateIpsCount: Optional[float] = None
    """
    Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + private_ips_count, as a primary private IP will be assiged to an ENI by default.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    securityGroupRefs: Optional[List[SecurityGroupRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroupSelector: Optional[SecurityGroupSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroups: Optional[List[str]] = None
    """
    List of security group IDs to assign to the ENI.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Whether to enable source destination checking for the ENI. Default true.
    """
    subnetId: Optional[str] = None
    """
    Subnet ID to create the ENI in.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """


class InitProvider(BaseModel):
    description: Optional[str] = None
    """
    Description for the network interface.
    """
    interfaceType: Optional[str] = None
    """
    Type of network interface to create. Set to efa for Elastic Fabric Adapter. Changing interface_type will cause the resource to be destroyed and re-created.
    """
    ipv4PrefixCount: Optional[float] = None
    """
    Number of IPv4 prefixes that AWS automatically assigns to the network interface.
    """
    ipv4Prefixes: Optional[List[str]] = None
    """
    One or more IPv4 prefixes assigned to the network interface.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific ipv6_addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true, you can specify 0 to override this setting.
    """
    ipv6AddressList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order.
    """
    ipv6AddressListEnabled: Optional[bool] = None
    """
    Whether ipv6_address_list is allowed and controls the IPs to assign to the ENI and ipv6_addresses and ipv6_address_count become read-only. Default false.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying ipv6_address_count.
    """
    ipv6PrefixCount: Optional[float] = None
    """
    Number of IPv6 prefixes that AWS automatically assigns to the network interface.
    """
    ipv6Prefixes: Optional[List[str]] = None
    """
    One or more IPv6 prefixes assigned to the network interface.
    """
    privateIp: Optional[str] = None
    privateIpList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order. Requires setting private_ip_list_enabled to true.
    """
    privateIpListEnabled: Optional[bool] = None
    """
    Whether private_ip_list is allowed and controls the IPs to assign to the ENI and private_ips and private_ips_count become read-only. Default false.
    """
    privateIps: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI without regard to order.
    """
    privateIpsCount: Optional[float] = None
    """
    Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + private_ips_count, as a primary private IP will be assiged to an ENI by default.
    """
    securityGroupRefs: Optional[List[SecurityGroupRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroupSelector: Optional[SecurityGroupSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroups: Optional[List[str]] = None
    """
    List of security group IDs to assign to the ENI.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Whether to enable source destination checking for the ENI. Default true.
    """
    subnetId: Optional[str] = None
    """
    Subnet ID to create the ENI in.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class AttachmentItem(BaseModel):
    attachmentId: Optional[str] = None
    """
    ID of the network interface.
    """
    deviceIndex: Optional[float] = None
    """
    Integer to define the devices index.
    """
    instance: Optional[str] = None
    """
    ID of the instance to attach to.
    """


class AtProvider(BaseModel):
    arn: Optional[str] = None
    """
    ARN of the network interface.
    """
    attachment: Optional[List[AttachmentItem]] = None
    """
    Configuration block to define the attachment of the ENI. See Attachment below for more details!
    """
    description: Optional[str] = None
    """
    Description for the network interface.
    """
    id: Optional[str] = None
    """
    ID of the network interface.
    """
    interfaceType: Optional[str] = None
    """
    Type of network interface to create. Set to efa for Elastic Fabric Adapter. Changing interface_type will cause the resource to be destroyed and re-created.
    """
    ipv4PrefixCount: Optional[float] = None
    """
    Number of IPv4 prefixes that AWS automatically assigns to the network interface.
    """
    ipv4Prefixes: Optional[List[str]] = None
    """
    One or more IPv4 prefixes assigned to the network interface.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to assign to a network interface. You can't use this option if specifying specific ipv6_addresses. If your subnet has the AssignIpv6AddressOnCreation attribute set to true, you can specify 0 to override this setting.
    """
    ipv6AddressList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order.
    """
    ipv6AddressListEnabled: Optional[bool] = None
    """
    Whether ipv6_address_list is allowed and controls the IPs to assign to the ENI and ipv6_addresses and ipv6_address_count become read-only. Default false.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Addresses are assigned without regard to order. You can't use this option if you're specifying ipv6_address_count.
    """
    ipv6PrefixCount: Optional[float] = None
    """
    Number of IPv6 prefixes that AWS automatically assigns to the network interface.
    """
    ipv6Prefixes: Optional[List[str]] = None
    """
    One or more IPv6 prefixes assigned to the network interface.
    """
    macAddress: Optional[str] = None
    """
    MAC address of the network interface.
    """
    outpostArn: Optional[str] = None
    """
    ARN of the network interface.
    """
    ownerId: Optional[str] = None
    """
    AWS account ID of the owner of the network interface.
    """
    privateDnsName: Optional[str] = None
    """
    Private DNS name of the network interface (IPv4).
    """
    privateIp: Optional[str] = None
    privateIpList: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI in sequential order. Requires setting private_ip_list_enabled to true.
    """
    privateIpListEnabled: Optional[bool] = None
    """
    Whether private_ip_list is allowed and controls the IPs to assign to the ENI and private_ips and private_ips_count become read-only. Default false.
    """
    privateIps: Optional[List[str]] = None
    """
    List of private IPs to assign to the ENI without regard to order.
    """
    privateIpsCount: Optional[float] = None
    """
    Number of secondary private IPs to assign to the ENI. The total number of private IPs will be 1 + private_ips_count, as a primary private IP will be assiged to an ENI by default.
    """
    securityGroups: Optional[List[str]] = None
    """
    List of security group IDs to assign to the ENI.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Whether to enable source destination checking for the ENI. Default true.
    """
    subnetId: Optional[str] = None
    """
    Subnet ID to create the ENI in.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class NetworkInterface(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    NetworkInterfaceSpec defines the desired state of NetworkInterface
    """
    status: Optional[Status] = None
    """
    NetworkInterfaceStatus defines the observed state of NetworkInterface.
    """


class NetworkInterfaceList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[NetworkInterface]
    """
    List of networkinterfaces. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
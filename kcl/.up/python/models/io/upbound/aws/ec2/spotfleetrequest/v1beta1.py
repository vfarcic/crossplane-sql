# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_spotfleetrequest.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class EbsBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    deviceName: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    snapshotId: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    throughput: Optional[float] = None
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class EphemeralBlockDeviceItem(BaseModel):
    deviceName: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    virtualName: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class IamInstanceProfileArnRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class IamInstanceProfileArnSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class RootBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    throughput: Optional[float] = None
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class LaunchSpecificationItem(BaseModel):
    ami: Optional[str] = None
    associatePublicIpAddress: Optional[bool] = None
    availabilityZone: Optional[str] = None
    """
    The availability zone in which to place the request.
    """
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    ebsOptimized: Optional[bool] = None
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    iamInstanceProfile: Optional[str] = None
    iamInstanceProfileArn: Optional[str] = None
    """
    takes aws_iam_instance_profile attribute arn as input.
    """
    iamInstanceProfileArnRef: Optional[IamInstanceProfileArnRef] = None
    """
    Reference to a InstanceProfile in iam to populate iamInstanceProfileArn.
    """
    iamInstanceProfileArnSelector: Optional[IamInstanceProfileArnSelector] = None
    """
    Selector for a InstanceProfile in iam to populate iamInstanceProfileArn.
    """
    instanceType: Optional[str] = None
    """
    The type of instance to request.
    """
    keyName: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    monitoring: Optional[bool] = None
    placementGroup: Optional[str] = None
    placementTenancy: Optional[str] = None
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    subnetId: Optional[str] = None
    """
    The subnet in which to launch the requested instance.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    userData: Optional[str] = None
    vpcSecurityGroupIds: Optional[List[str]] = None
    weightedCapacity: Optional[str] = None
    """
    The capacity added to the fleet by a fulfilled request.
    """


class IdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class IdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class VersionRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class VersionSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class LaunchTemplateSpecificationItem(BaseModel):
    id: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    idRef: Optional[IdRef] = None
    """
    Reference to a LaunchTemplate in ec2 to populate id.
    """
    idSelector: Optional[IdSelector] = None
    """
    Selector for a LaunchTemplate in ec2 to populate id.
    """
    name: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    version: Optional[str] = None
    """
    Template version. Unlike the autoscaling equivalent, does not support $Latest or $Default, so use the launch_template resource's attribute, e.g., "${aws_launch_template.foo.latest_version}". It will use the default version if omitted.
    """
    versionRef: Optional[VersionRef] = None
    """
    Reference to a LaunchTemplate in ec2 to populate version.
    """
    versionSelector: Optional[VersionSelector] = None
    """
    Selector for a LaunchTemplate in ec2 to populate version.
    """


class AcceleratorCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class AcceleratorTotalMemoryMibItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class BaselineEbsBandwidthMbp(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class MemoryGibPerVcpuItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class MemoryMibItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class NetworkBandwidthGbp(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class NetworkInterfaceCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class TotalLocalStorageGbItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class VcpuCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class InstanceRequirement(BaseModel):
    acceleratorCount: Optional[List[AcceleratorCountItem]] = None
    """
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
    """
    acceleratorManufacturers: Optional[List[str]] = None
    """
    List of accelerator manufacturer names. Default is any manufacturer.
    """
    acceleratorNames: Optional[List[str]] = None
    """
    List of accelerator names. Default is any acclerator.
    """
    acceleratorTotalMemoryMib: Optional[List[AcceleratorTotalMemoryMibItem]] = None
    """
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
    """
    acceleratorTypes: Optional[List[str]] = None
    """
    List of accelerator types. Default is any accelerator type.
    """
    allowedInstanceTypes: Optional[List[str]] = None
    """
    List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    """
    bareMetal: Optional[str] = None
    """
    Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    """
    baselineEbsBandwidthMbps: Optional[List[BaselineEbsBandwidthMbp]] = None
    """
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
    """
    burstablePerformance: Optional[str] = None
    """
    Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    """
    cpuManufacturers: Optional[List[str]] = None
    """
    List of CPU manufacturer names. Default is any manufacturer.
    """
    excludedInstanceTypes: Optional[List[str]] = None
    """
    List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    """
    instanceGenerations: Optional[List[str]] = None
    """
    List of instance generation names. Default is any generation.
    """
    localStorage: Optional[str] = None
    """
    Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    """
    localStorageTypes: Optional[List[str]] = None
    """
    List of local storage type names. Default any storage type.
    """
    memoryGibPerVcpu: Optional[List[MemoryGibPerVcpuItem]] = None
    """
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
    """
    memoryMib: Optional[List[MemoryMibItem]] = None
    """
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
    """
    networkBandwidthGbps: Optional[List[NetworkBandwidthGbp]] = None
    """
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
    """
    networkInterfaceCount: Optional[List[NetworkInterfaceCountItem]] = None
    """
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
    """
    onDemandMaxPricePercentageOverLowestPrice: Optional[float] = None
    """
    The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    """
    requireHibernateSupport: Optional[bool] = None
    """
    Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    """
    spotMaxPricePercentageOverLowestPrice: Optional[float] = None
    """
    The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
    """
    totalLocalStorageGb: Optional[List[TotalLocalStorageGbItem]] = None
    """
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
    """
    vcpuCount: Optional[List[VcpuCountItem]] = None
    """
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.
    """


class Override(BaseModel):
    availabilityZone: Optional[str] = None
    """
    The availability zone in which to place the request.
    """
    instanceRequirements: Optional[List[InstanceRequirement]] = None
    """
    The instance requirements. See below.
    """
    instanceType: Optional[str] = None
    """
    The type of instance to request.
    """
    priority: Optional[float] = None
    """
    The priority for the launch template override. The lower the number, the higher the priority. If no number is set, the launch template override has the lowest priority.
    """
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    subnetId: Optional[str] = None
    """
    The subnet in which to launch the requested instance.
    """
    weightedCapacity: Optional[float] = None
    """
    The capacity added to the fleet by a fulfilled request.
    """


class LaunchTemplateConfigItem(BaseModel):
    launchTemplateSpecification: Optional[List[LaunchTemplateSpecificationItem]] = None
    """
    Launch template specification. See Launch Template Specification below for more details.
    """
    overrides: Optional[List[Override]] = None
    """
    One or more override configurations. See Overrides below for more details.
    """


class CapacityRebalanceItem(BaseModel):
    replacementStrategy: Optional[str] = None
    """
    The replacement strategy to use. Only available for spot fleets with fleet_type set to maintain. Valid values: launch.
    """


class SpotMaintenanceStrategy(BaseModel):
    capacityRebalance: Optional[List[CapacityRebalanceItem]] = None
    """
    Nested argument containing the capacity rebalance for your fleet request. Defined below.
    """


class ForProvider(BaseModel):
    allocationStrategy: Optional[str] = None
    """
    Indicates how to allocate the target capacity across
    the Spot pools specified by the Spot fleet request. Valid values: lowestPrice, diversified, capacityOptimized, capacityOptimizedPrioritized, and priceCapacityOptimized. The default is
    lowestPrice.
    """
    context: Optional[str] = None
    """
    Reserved.
    """
    excessCapacityTerminationPolicy: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated if the target capacity of the Spot fleet
    request is decreased below the current size of the Spot fleet.
    """
    fleetType: Optional[str] = None
    """
    The type of fleet request. Indicates whether the Spot Fleet only requests the target
    capacity or also attempts to maintain it. Default is maintain.
    """
    iamFleetRole: Optional[str] = None
    """
    Grants the Spot fleet permission to terminate
    Spot instances on your behalf when you cancel its Spot fleet request using
    CancelSpotFleetRequests or when the Spot fleet request expires, if you set
    terminateInstancesWithExpiration.
    """
    instanceInterruptionBehaviour: Optional[str] = None
    """
    Indicates whether a Spot
    instance stops or terminates when it is interrupted. Default is
    terminate.
    """
    instancePoolsToUseCount: Optional[float] = None
    """
    The number of Spot pools across which to allocate your target Spot capacity.
    Valid only when allocation_strategy is set to lowestPrice. Spot Fleet selects
    the cheapest Spot pools and evenly allocates your target Spot capacity across
    the number of Spot pools that you specify.
    """
    launchSpecification: Optional[List[LaunchSpecificationItem]] = None
    """
    Used to define the launch configuration of the
    spot-fleet request. Can be specified multiple times to define different bids
    across different markets and instance types. Conflicts with launch_template_config. At least one of launch_specification or launch_template_config is required.
    """
    launchTemplateConfig: Optional[List[LaunchTemplateConfigItem]] = None
    """
    Launch template configuration block. See Launch Template Configs below for more details. Conflicts with launch_specification. At least one of launch_specification or launch_template_config is required.
    """
    loadBalancers: Optional[List[str]] = None
    """
    A list of elastic load balancer names to add to the Spot fleet.
    """
    onDemandAllocationStrategy: Optional[str] = None
    """
    The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: lowestPrice and prioritized. the default is lowestPrice.
    """
    onDemandMaxTotalPrice: Optional[str] = None
    """
    The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.
    """
    onDemandTargetCapacity: Optional[float] = None
    """
    The number of On-Demand units to request. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    replaceUnhealthyInstances: Optional[bool] = None
    """
    Indicates whether Spot fleet should replace unhealthy instances. Default false.
    """
    spotMaintenanceStrategies: Optional[List[SpotMaintenanceStrategy]] = None
    """
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
    """
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    targetCapacity: Optional[float] = None
    """
    The number of units to request. You can choose to set the
    target capacity in terms of instances or a performance characteristic that is
    important to your application workload, such as vCPUs, memory, or I/O.
    """
    targetCapacityUnitType: Optional[str] = None
    """
    The unit for the target capacity. This can only be done with instance_requirements defined
    """
    targetGroupArns: Optional[List[str]] = None
    """
    A list of aws_alb_target_group ARNs, for use with Application Load Balancing.
    """
    terminateInstancesOnDelete: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated when the resource is deleted (and the Spot fleet request cancelled).
    If no value is specified, the value of the terminate_instances_with_expiration argument is used.
    """
    terminateInstancesWithExpiration: Optional[bool] = None
    """
    Indicates whether running Spot
    instances should be terminated when the Spot fleet request expires.
    """
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.
    """
    waitForFulfillment: Optional[bool] = None


class InitProvider(BaseModel):
    allocationStrategy: Optional[str] = None
    """
    Indicates how to allocate the target capacity across
    the Spot pools specified by the Spot fleet request. Valid values: lowestPrice, diversified, capacityOptimized, capacityOptimizedPrioritized, and priceCapacityOptimized. The default is
    lowestPrice.
    """
    context: Optional[str] = None
    """
    Reserved.
    """
    excessCapacityTerminationPolicy: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated if the target capacity of the Spot fleet
    request is decreased below the current size of the Spot fleet.
    """
    fleetType: Optional[str] = None
    """
    The type of fleet request. Indicates whether the Spot Fleet only requests the target
    capacity or also attempts to maintain it. Default is maintain.
    """
    iamFleetRole: Optional[str] = None
    """
    Grants the Spot fleet permission to terminate
    Spot instances on your behalf when you cancel its Spot fleet request using
    CancelSpotFleetRequests or when the Spot fleet request expires, if you set
    terminateInstancesWithExpiration.
    """
    instanceInterruptionBehaviour: Optional[str] = None
    """
    Indicates whether a Spot
    instance stops or terminates when it is interrupted. Default is
    terminate.
    """
    instancePoolsToUseCount: Optional[float] = None
    """
    The number of Spot pools across which to allocate your target Spot capacity.
    Valid only when allocation_strategy is set to lowestPrice. Spot Fleet selects
    the cheapest Spot pools and evenly allocates your target Spot capacity across
    the number of Spot pools that you specify.
    """
    launchSpecification: Optional[List[LaunchSpecificationItem]] = None
    """
    Used to define the launch configuration of the
    spot-fleet request. Can be specified multiple times to define different bids
    across different markets and instance types. Conflicts with launch_template_config. At least one of launch_specification or launch_template_config is required.
    """
    launchTemplateConfig: Optional[List[LaunchTemplateConfigItem]] = None
    """
    Launch template configuration block. See Launch Template Configs below for more details. Conflicts with launch_specification. At least one of launch_specification or launch_template_config is required.
    """
    loadBalancers: Optional[List[str]] = None
    """
    A list of elastic load balancer names to add to the Spot fleet.
    """
    onDemandAllocationStrategy: Optional[str] = None
    """
    The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: lowestPrice and prioritized. the default is lowestPrice.
    """
    onDemandMaxTotalPrice: Optional[str] = None
    """
    The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.
    """
    onDemandTargetCapacity: Optional[float] = None
    """
    The number of On-Demand units to request. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.
    """
    replaceUnhealthyInstances: Optional[bool] = None
    """
    Indicates whether Spot fleet should replace unhealthy instances. Default false.
    """
    spotMaintenanceStrategies: Optional[List[SpotMaintenanceStrategy]] = None
    """
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
    """
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    targetCapacity: Optional[float] = None
    """
    The number of units to request. You can choose to set the
    target capacity in terms of instances or a performance characteristic that is
    important to your application workload, such as vCPUs, memory, or I/O.
    """
    targetCapacityUnitType: Optional[str] = None
    """
    The unit for the target capacity. This can only be done with instance_requirements defined
    """
    targetGroupArns: Optional[List[str]] = None
    """
    A list of aws_alb_target_group ARNs, for use with Application Load Balancing.
    """
    terminateInstancesOnDelete: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated when the resource is deleted (and the Spot fleet request cancelled).
    If no value is specified, the value of the terminate_instances_with_expiration argument is used.
    """
    terminateInstancesWithExpiration: Optional[bool] = None
    """
    Indicates whether running Spot
    instances should be terminated when the Spot fleet request expires.
    """
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.
    """
    waitForFulfillment: Optional[bool] = None


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class LaunchSpecificationItemModel(BaseModel):
    ami: Optional[str] = None
    associatePublicIpAddress: Optional[bool] = None
    availabilityZone: Optional[str] = None
    """
    The availability zone in which to place the request.
    """
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    ebsOptimized: Optional[bool] = None
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    iamInstanceProfile: Optional[str] = None
    iamInstanceProfileArn: Optional[str] = None
    """
    takes aws_iam_instance_profile attribute arn as input.
    """
    instanceType: Optional[str] = None
    """
    The type of instance to request.
    """
    keyName: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    monitoring: Optional[bool] = None
    placementGroup: Optional[str] = None
    placementTenancy: Optional[str] = None
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    subnetId: Optional[str] = None
    """
    The subnet in which to launch the requested instance.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    userData: Optional[str] = None
    vpcSecurityGroupIds: Optional[List[str]] = None
    weightedCapacity: Optional[str] = None
    """
    The capacity added to the fleet by a fulfilled request.
    """


class LaunchTemplateSpecificationItemModel(BaseModel):
    id: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    name: Optional[str] = None
    """
    The name of the launch template. Conflicts with id.
    """
    version: Optional[str] = None
    """
    Template version. Unlike the autoscaling equivalent, does not support $Latest or $Default, so use the launch_template resource's attribute, e.g., "${aws_launch_template.foo.latest_version}". It will use the default version if omitted.
    """


class AtProvider(BaseModel):
    allocationStrategy: Optional[str] = None
    """
    Indicates how to allocate the target capacity across
    the Spot pools specified by the Spot fleet request. Valid values: lowestPrice, diversified, capacityOptimized, capacityOptimizedPrioritized, and priceCapacityOptimized. The default is
    lowestPrice.
    """
    clientToken: Optional[str] = None
    context: Optional[str] = None
    """
    Reserved.
    """
    excessCapacityTerminationPolicy: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated if the target capacity of the Spot fleet
    request is decreased below the current size of the Spot fleet.
    """
    fleetType: Optional[str] = None
    """
    The type of fleet request. Indicates whether the Spot Fleet only requests the target
    capacity or also attempts to maintain it. Default is maintain.
    """
    iamFleetRole: Optional[str] = None
    """
    Grants the Spot fleet permission to terminate
    Spot instances on your behalf when you cancel its Spot fleet request using
    CancelSpotFleetRequests or when the Spot fleet request expires, if you set
    terminateInstancesWithExpiration.
    """
    id: Optional[str] = None
    """
    The ID of the launch template. Conflicts with name.
    """
    instanceInterruptionBehaviour: Optional[str] = None
    """
    Indicates whether a Spot
    instance stops or terminates when it is interrupted. Default is
    terminate.
    """
    instancePoolsToUseCount: Optional[float] = None
    """
    The number of Spot pools across which to allocate your target Spot capacity.
    Valid only when allocation_strategy is set to lowestPrice. Spot Fleet selects
    the cheapest Spot pools and evenly allocates your target Spot capacity across
    the number of Spot pools that you specify.
    """
    launchSpecification: Optional[List[LaunchSpecificationItemModel]] = None
    """
    Used to define the launch configuration of the
    spot-fleet request. Can be specified multiple times to define different bids
    across different markets and instance types. Conflicts with launch_template_config. At least one of launch_specification or launch_template_config is required.
    """
    launchTemplateConfig: Optional[List[LaunchTemplateConfigItem]] = None
    """
    Launch template configuration block. See Launch Template Configs below for more details. Conflicts with launch_specification. At least one of launch_specification or launch_template_config is required.
    """
    loadBalancers: Optional[List[str]] = None
    """
    A list of elastic load balancer names to add to the Spot fleet.
    """
    onDemandAllocationStrategy: Optional[str] = None
    """
    The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: lowestPrice and prioritized. the default is lowestPrice.
    """
    onDemandMaxTotalPrice: Optional[str] = None
    """
    The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasn’t met the target capacity.
    """
    onDemandTargetCapacity: Optional[float] = None
    """
    The number of On-Demand units to request. If the request type is maintain, you can specify a target capacity of 0 and add capacity later.
    """
    replaceUnhealthyInstances: Optional[bool] = None
    """
    Indicates whether Spot fleet should replace unhealthy instances. Default false.
    """
    spotMaintenanceStrategies: Optional[List[SpotMaintenanceStrategy]] = None
    """
    Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.
    """
    spotPrice: Optional[str] = None
    """
    The maximum bid price per unit hour.
    """
    spotRequestState: Optional[str] = None
    """
    The state of the Spot fleet request.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    targetCapacity: Optional[float] = None
    """
    The number of units to request. You can choose to set the
    target capacity in terms of instances or a performance characteristic that is
    important to your application workload, such as vCPUs, memory, or I/O.
    """
    targetCapacityUnitType: Optional[str] = None
    """
    The unit for the target capacity. This can only be done with instance_requirements defined
    """
    targetGroupArns: Optional[List[str]] = None
    """
    A list of aws_alb_target_group ARNs, for use with Application Load Balancing.
    """
    terminateInstancesOnDelete: Optional[str] = None
    """
    Indicates whether running Spot
    instances should be terminated when the resource is deleted (and the Spot fleet request cancelled).
    If no value is specified, the value of the terminate_instances_with_expiration argument is used.
    """
    terminateInstancesWithExpiration: Optional[bool] = None
    """
    Indicates whether running Spot
    instances should be terminated when the Spot fleet request expires.
    """
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.
    """
    waitForFulfillment: Optional[bool] = None


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class SpotFleetRequest(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    SpotFleetRequestSpec defines the desired state of SpotFleetRequest
    """
    status: Optional[Status] = None
    """
    SpotFleetRequestStatus defines the observed state of SpotFleetRequest.
    """


class SpotFleetRequestList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[SpotFleetRequest]
    """
    List of spotfleetrequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
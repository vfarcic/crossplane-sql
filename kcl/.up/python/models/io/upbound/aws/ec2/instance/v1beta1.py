# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_instance.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class CapacityReservationTargetItem(BaseModel):
    capacityReservationId: Optional[str] = None
    """
    ID of the Capacity Reservation in which to run the instance.
    """
    capacityReservationResourceGroupArn: Optional[str] = None
    """
    ARN of the Capacity Reservation resource group in which to run the instance.
    """


class CapacityReservationSpecificationItem(BaseModel):
    capacityReservationPreference: Optional[str] = None
    """
    Indicates the instance's Capacity Reservation preferences. Can be "open" or "none". (Default: "open").
    """
    capacityReservationTarget: Optional[List[CapacityReservationTargetItem]] = None
    """
    Information about the target Capacity Reservation. See Capacity Reservation Target below for more details.
    """


class CpuOption(BaseModel):
    amdSevSnp: Optional[str] = None
    """
    Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    """
    coreCount: Optional[float] = None
    """
    Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    """
    threadsPerCore: Optional[float] = None
    """
    If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """


class CreditSpecificationItem(BaseModel):
    cpuCredits: Optional[str] = None
    """
    Credit option for CPU usage. Valid values include standard or unlimited. T3 instances are launched as unlimited by default. T2 instances are launched as standard by default.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class KmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class KmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class EbsBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether the volume should be destroyed on instance termination. Defaults to true.
    """
    deviceName: Optional[str] = None
    """
    Name of the device to mount.
    """
    encrypted: Optional[bool] = None
    """
    Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
    """
    iops: Optional[float] = None
    """
    Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    """
    kmsKeyId: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    snapshotId: Optional[str] = None
    """
    Snapshot ID to mount.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign to the device.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    """
    Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    """
    volumeSize: Optional[float] = None
    """
    Size of the volume in gibibytes (GiB).
    """
    volumeType: Optional[str] = None
    """
    Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
    """


class EnclaveOption(BaseModel):
    enabled: Optional[bool] = None
    """
    Whether Nitro Enclaves will be enabled on the instance. Defaults to false.
    """


class EphemeralBlockDeviceItem(BaseModel):
    deviceName: Optional[str] = None
    """
    Name of the block device to mount on the instance.
    """
    noDevice: Optional[bool] = None
    """
    Suppresses the specified device included in the AMI's block device mapping.
    """
    virtualName: Optional[str] = None
    """
    Instance Store Device Name (e.g., ephemeral0).
    """


class SpotOption(BaseModel):
    instanceInterruptionBehavior: Optional[str] = None
    """
    The behavior when a Spot Instance is interrupted. Valid values include hibernate, stop, terminate . The default is terminate.
    """
    maxPrice: Optional[str] = None
    """
    The maximum hourly price that you're willing to pay for a Spot Instance.
    """
    spotInstanceType: Optional[str] = None
    """
    The Spot Instance request type. Valid values include one-time, persistent. Persistent Spot Instance requests are only supported when the instance interruption behavior is either hibernate or stop. The default is one-time.
    """
    validUntil: Optional[str] = None
    """
    The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ). Supported only for persistent requests.
    """


class InstanceMarketOption(BaseModel):
    marketType: Optional[str] = None
    """
    Type of market for the instance. Valid value is spot. Defaults to spot. Required if spot_options is specified.
    """
    spotOptions: Optional[List[SpotOption]] = None
    """
    Block to configure the options for Spot Instances. See Spot Options below for details on attributes.
    """


class LaunchTemplateItem(BaseModel):
    id: Optional[str] = None
    """
    ID of the launch template. Conflicts with name.
    """
    name: Optional[str] = None
    """
    Name of the launch template. Conflicts with id.
    """
    version: Optional[str] = None
    """
    Template version. Can be a specific version number, $Latest or $Default. The default value is $Default.
    """


class MaintenanceOption(BaseModel):
    autoRecovery: Optional[str] = None
    """
    Automatic recovery behavior of the Instance. Can be "default" or "disabled". See Recover your instance for more details.
    """


class MetadataOption(BaseModel):
    httpEndpoint: Optional[str] = None
    """
    Whether the metadata service is available. Valid values include enabled or disabled. Defaults to enabled.
    """
    httpProtocolIpv6: Optional[str] = None
    """
    Whether the IPv6 endpoint for the instance metadata service is enabled. Defaults to disabled.
    """
    httpPutResponseHopLimit: Optional[float] = None
    """
    Desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Valid values are integer from 1 to 64. Defaults to 1.
    """
    httpTokens: Optional[str] = None
    """
    Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Valid values include optional or required. Defaults to optional.
    """
    instanceMetadataTags: Optional[str] = None
    """
    Enables or disables access to instance tags from the instance metadata service. Valid values include enabled or disabled. Defaults to disabled.
    """


class NetworkInterfaceIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class NetworkInterfaceIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class NetworkInterfaceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
    """
    deviceIndex: Optional[float] = None
    """
    Integer index of the network interface attachment. Limited by instance type.
    """
    networkCardIndex: Optional[float] = None
    """
    Integer index of the network card. Limited by instance type. The default index is 0.
    """
    networkInterfaceId: Optional[str] = None
    """
    ID of the network interface to attach.
    """
    networkInterfaceIdRef: Optional[NetworkInterfaceIdRef] = None
    """
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.
    """
    networkInterfaceIdSelector: Optional[NetworkInterfaceIdSelector] = None
    """
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.
    """


class PrivateDnsNameOption(BaseModel):
    enableResourceNameDnsARecord: Optional[bool] = None
    """
    Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    """
    enableResourceNameDnsAaaaRecord: Optional[bool] = None
    """
    Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    """
    hostnameType: Optional[str] = None
    """
    Type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


class RootBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether the volume should be destroyed on instance termination. Defaults to true.
    """
    encrypted: Optional[bool] = None
    """
    Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
    """
    iops: Optional[float] = None
    """
    Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    """
    kmsKeyId: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign to the device.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    """
    Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    """
    volumeSize: Optional[float] = None
    """
    Size of the volume in gibibytes (GiB).
    """
    volumeType: Optional[str] = None
    """
    Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to the volume type that the AMI uses.
    """


class SubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class VpcSecurityGroupIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class VpcSecurityGroupIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    ami: Optional[str] = None
    """
    AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    """
    associatePublicIpAddress: Optional[bool] = None
    """
    Whether to associate a public IP address with an instance in a VPC.
    """
    availabilityZone: Optional[str] = None
    """
    AZ to start the instance in.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    """
    cpuCoreCount: Optional[float] = None
    """
    Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    cpuThreadsPerCore: Optional[float] = None
    """
    If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance Termination Protection.
    """
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    """
    One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    """
    ebsOptimized: Optional[bool] = None
    """
    If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    """
    One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    """
    getPasswordData: Optional[bool] = None
    """
    If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    """
    hibernation: Optional[bool] = None
    """
    If true, the launched EC2 instance will support hibernation.
    """
    hostId: Optional[str] = None
    """
    ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    """
    hostResourceGroupArn: Optional[str] = None
    """
    ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    """
    iamInstanceProfile: Optional[str] = None
    """
    IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    """
    instanceType: Optional[str] = None
    """
    Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    """
    keyName: Optional[str] = None
    """
    Key name of the Key Pair to use for the instance; which can be managed using the .
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    """
    Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options of the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[bool] = None
    """
    If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    """
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    """
    placementGroup: Optional[str] = None
    """
    Placement Group to start the instance in.
    """
    placementPartitionNumber: Optional[float] = None
    """
    Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    privateIp: Optional[str] = None
    """
    Private IP address to associate with the instance in a VPC.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    """
    Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    """
    secondaryPrivateIps: Optional[List[str]] = None
    """
    List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    """
    subnetId: Optional[str] = None
    """
    VPC Subnet ID to launch in.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tenancy: Optional[str] = None
    """
    Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    """
    userData: Optional[str] = None
    """
    User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataBase64: Optional[str] = None
    """
    Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataReplaceOnChange: Optional[bool] = None
    """
    When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign, at instance-creation time, to root and EBS volumes.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of security group IDs to associate with.
    """


class InitProvider(BaseModel):
    ami: Optional[str] = None
    """
    AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    """
    associatePublicIpAddress: Optional[bool] = None
    """
    Whether to associate a public IP address with an instance in a VPC.
    """
    availabilityZone: Optional[str] = None
    """
    AZ to start the instance in.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    """
    cpuCoreCount: Optional[float] = None
    """
    Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    cpuThreadsPerCore: Optional[float] = None
    """
    If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance Termination Protection.
    """
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    """
    One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    """
    ebsOptimized: Optional[bool] = None
    """
    If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    """
    One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    """
    getPasswordData: Optional[bool] = None
    """
    If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    """
    hibernation: Optional[bool] = None
    """
    If true, the launched EC2 instance will support hibernation.
    """
    hostId: Optional[str] = None
    """
    ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    """
    hostResourceGroupArn: Optional[str] = None
    """
    ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    """
    iamInstanceProfile: Optional[str] = None
    """
    IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    """
    instanceType: Optional[str] = None
    """
    Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    """
    keyName: Optional[str] = None
    """
    Key name of the Key Pair to use for the instance; which can be managed using the .
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    """
    Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options of the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[bool] = None
    """
    If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    """
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    """
    placementGroup: Optional[str] = None
    """
    Placement Group to start the instance in.
    """
    placementPartitionNumber: Optional[float] = None
    """
    Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    privateIp: Optional[str] = None
    """
    Private IP address to associate with the instance in a VPC.
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    """
    Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    """
    secondaryPrivateIps: Optional[List[str]] = None
    """
    List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    """
    subnetId: Optional[str] = None
    """
    VPC Subnet ID to launch in.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tenancy: Optional[str] = None
    """
    Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    """
    userData: Optional[str] = None
    """
    User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataBase64: Optional[str] = None
    """
    Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataReplaceOnChange: Optional[bool] = None
    """
    When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign, at instance-creation time, to root and EBS volumes.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of security group IDs to associate with.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class EbsBlockDeviceItemModel(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether the volume should be destroyed on instance termination. Defaults to true.
    """
    deviceName: Optional[str] = None
    """
    Name of the device to mount.
    """
    encrypted: Optional[bool] = None
    """
    Enables EBS encryption on the volume. Defaults to false. Cannot be used with snapshot_id. Must be configured to perform drift detection.
    """
    iops: Optional[float] = None
    """
    Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    """
    kmsKeyId: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    snapshotId: Optional[str] = None
    """
    Snapshot ID to mount.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign to the device.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    """
    Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    """
    volumeId: Optional[str] = None
    """
    ID of the volume. For example, the ID can be accessed like this, aws_instance.web.ebs_block_device.2.volume_id.
    """
    volumeSize: Optional[float] = None
    """
    Size of the volume in gibibytes (GiB).
    """
    volumeType: Optional[str] = None
    """
    Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to gp2.
    """


class NetworkInterfaceItemModel(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether or not to delete the network interface on instance termination. Defaults to false. Currently, the only valid value is false, as this is only supported when creating new network interfaces when launching an instance.
    """
    deviceIndex: Optional[float] = None
    """
    Integer index of the network interface attachment. Limited by instance type.
    """
    networkCardIndex: Optional[float] = None
    """
    Integer index of the network card. Limited by instance type. The default index is 0.
    """
    networkInterfaceId: Optional[str] = None
    """
    ID of the network interface to attach.
    """


class RootBlockDeviceItemModel(BaseModel):
    deleteOnTermination: Optional[bool] = None
    """
    Whether the volume should be destroyed on instance termination. Defaults to true.
    """
    deviceName: Optional[str] = None
    """
    Device name, e.g., /dev/sdh or xvdh.
    """
    encrypted: Optional[bool] = None
    """
    Whether to enable volume encryption. Defaults to false. Must be configured to perform drift detection.
    """
    iops: Optional[float] = None
    """
    Amount of provisioned IOPS. Only valid for volume_type of io1, io2 or gp3.
    """
    kmsKeyId: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the KMS Key to use when encrypting the volume. Must be configured to perform drift detection.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign to the device.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    """
    Throughput to provision for a volume in mebibytes per second (MiB/s). This is only valid for volume_type of gp3.
    """
    volumeId: Optional[str] = None
    """
    ID of the volume. For example, the ID can be accessed like this, aws_instance.web.root_block_device.0.volume_id.
    """
    volumeSize: Optional[float] = None
    """
    Size of the volume in gibibytes (GiB).
    """
    volumeType: Optional[str] = None
    """
    Type of volume. Valid values include standard, gp2, gp3, io1, io2, sc1, or st1. Defaults to the volume type that the AMI uses.
    """


class AtProvider(BaseModel):
    ami: Optional[str] = None
    """
    AMI to use for the instance. Required unless launch_template is specified and the Launch Template specifes an AMI. If an AMI is specified in the Launch Template, setting ami will override the AMI specified in the Launch Template.
    """
    arn: Optional[str] = None
    """
    ARN of the instance.
    """
    associatePublicIpAddress: Optional[bool] = None
    """
    Whether to associate a public IP address with an instance in a VPC.
    """
    availabilityZone: Optional[str] = None
    """
    AZ to start the instance in.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Describes an instance's Capacity Reservation targeting option. See Capacity Reservation Specification below for more details.
    """
    cpuCoreCount: Optional[float] = None
    """
    Sets the number of CPU cores for an instance. This option is only supported on creation of instance type that support CPU Options CPU Cores and Threads Per CPU Core Per Instance Type - specifying this option for unsupported instance types will return an error from the EC2 API.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    cpuThreadsPerCore: Optional[float] = None
    """
    If set to 1, hyperthreading is disabled on the launched instance. Defaults to 2 if not set. See Optimizing CPU Options for more information.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Configuration block for customizing the credit specification of the instance. See Credit Specification below for more details. Removing this configuration on existing instances will only stop managing it. It will not change the configuration back to the default for the instance type.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance Termination Protection.
    """
    ebsBlockDevice: Optional[List[EbsBlockDeviceItemModel]] = None
    """
    One or more configuration blocks with additional EBS block devices to attach to the instance. Block device configurations only apply on resource creation. See Block Devices below for details on attributes and drift detection. When accessing this as an attribute reference, it is a set of objects.
    """
    ebsOptimized: Optional[bool] = None
    """
    If true, the launched EC2 instance will be EBS-optimized. Note that if this is not set on an instance type that is optimized by default then this will show as disabled but if the instance type is optimized by default then there is no need to set this and there is no effect to disabling it. See the EBS Optimized section of the AWS User Guide for more information.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    """
    One or more configuration blocks to customize Ephemeral (also known as "Instance Store") volumes on the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a set of objects.
    """
    getPasswordData: Optional[bool] = None
    """
    If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the password_data attribute. See GetPasswordData for more information.
    """
    hibernation: Optional[bool] = None
    """
    If true, the launched EC2 instance will support hibernation.
    """
    hostId: Optional[str] = None
    """
    ID of a dedicated host that the instance will be assigned to. Use when an instance is to be launched on a specific dedicated host.
    """
    hostResourceGroupArn: Optional[str] = None
    """
    ARN of the host resource group in which to launch the instances. If you specify an ARN, omit the tenancy parameter or set it to host.
    """
    iamInstanceProfile: Optional[str] = None
    """
    IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile. Ensure your credentials have the correct permission to assign the instance profile according to the EC2 documentation, notably iam:PassRole.
    """
    id: Optional[str] = None
    """
    ID of the instance.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Amazon defaults this to stop for EBS-backed instances and terminate for instance-store instances. Cannot be set on instance-store instances. See Shutdown Behavior for more information.
    """
    instanceLifecycle: Optional[str] = None
    """
    Indicates whether this is a Spot Instance or a Scheduled Instance.
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    Describes the market (purchasing) option for the instances. See Market Options below for details on attributes.
    """
    instanceState: Optional[str] = None
    """
    State of the instance. One of: pending, running, shutting-down, terminated, stopping, stopped. See Instance Lifecycle for more information.
    """
    instanceType: Optional[str] = None
    """
    Instance type to use for the instance. Required unless launch_template is specified and the Launch Template specifies an instance type. If an instance type is specified in the Launch Template, setting instance_type will override the instance type specified in the Launch Template. Updates to this field will trigger a stop/start of the EC2 instance.
    """
    ipv6AddressCount: Optional[float] = None
    """
    Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface
    """
    keyName: Optional[str] = None
    """
    Key name of the Key Pair to use for the instance; which can be managed using the .
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    """
    Specifies a Launch Template to configure the instance. Parameters configured on this resource will override the corresponding parameters in the Launch Template. See Launch Template Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    Maintenance and recovery options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options of the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[bool] = None
    """
    If true, the launched EC2 instance will have detailed monitoring enabled. (Available since v0.6.0)
    """
    networkInterface: Optional[List[NetworkInterfaceItemModel]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network Interfaces below for more details.
    """
    outpostArn: Optional[str] = None
    """
    ARN of the Outpost the instance is assigned to.
    """
    passwordData: Optional[str] = None
    """
    Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if get_password_data is true. Note that this encrypted value will be stored in the state file, as with all exported attributes. See GetPasswordData for more information.
    """
    placementGroup: Optional[str] = None
    """
    Placement Group to start the instance in.
    """
    placementPartitionNumber: Optional[float] = None
    """
    Number of the partition the instance is in. Valid only if the  strategy argument is set to "partition".
    """
    primaryNetworkInterfaceId: Optional[str] = None
    """
    ID of the instance's primary network interface.
    """
    privateDns: Optional[str] = None
    """
    Private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    Options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    privateIp: Optional[str] = None
    """
    Private IP address to associate with the instance in a VPC.
    """
    publicDns: Optional[str] = None
    """
    Public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.
    """
    publicIp: Optional[str] = None
    """
    Public IP address assigned to the instance, if applicable. NOTE: If you are using an aws_eip with your instance, you should refer to the EIP's address directly and not use public_ip as this field will change after the EIP is attached.
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItemModel]] = None
    """
    Configuration block to customize details about the root block device of the instance. See Block Devices below for details. When accessing this as an attribute reference, it is a list containing one object.
    """
    secondaryPrivateIps: Optional[List[str]] = None
    """
    List of secondary private IPv4 addresses to assign to the instance's primary network interface (eth0) in a VPC. Can only be assigned to the primary network interface (eth0) attached at instance creation, not a pre-existing network interface i.e., referenced in a network_interface block. Refer to the Elastic network interfaces documentation to see the maximum number of private IP addresses allowed per instance type.
    """
    securityGroups: Optional[List[str]] = None
    """
    List of security group names to associate with.
    """
    sourceDestCheck: Optional[bool] = None
    """
    Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs. Defaults true.
    """
    spotInstanceRequestId: Optional[str] = None
    """
    If the request is a Spot Instance request, the ID of the request.
    """
    subnetId: Optional[str] = None
    """
    VPC Subnet ID to launch in.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    tenancy: Optional[str] = None
    """
    Tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. The host tenancy is not supported for the import-instance command. Valid values are default, dedicated, and host.
    """
    userData: Optional[str] = None
    """
    User data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataBase64: Optional[str] = None
    """
    Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption. Updates to this field will trigger a stop/start of the EC2 instance by default. If the user_data_replace_on_change is set then updates to this field will trigger a destroy and recreate.
    """
    userDataReplaceOnChange: Optional[bool] = None
    """
    When used in combination with user_data or user_data_base64 will trigger a destroy and recreate when set to true. Defaults to false if not set.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Map of tags to assign, at instance-creation time, to root and EBS volumes.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    List of security group IDs to associate with.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class Instance(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    InstanceSpec defines the desired state of Instance
    """
    status: Optional[Status] = None
    """
    InstanceStatus defines the observed state of Instance.
    """


class InstanceList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[Instance]
    """
    List of instances. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
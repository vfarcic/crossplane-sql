# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_spotinstancerequest.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class CapacityReservationTargetItem(BaseModel):
    capacityReservationId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    capacityReservationResourceGroupArn: Optional[str] = None


class CapacityReservationSpecificationItem(BaseModel):
    capacityReservationPreference: Optional[str] = None
    capacityReservationTarget: Optional[List[CapacityReservationTargetItem]] = None


class CpuOption(BaseModel):
    amdSevSnp: Optional[str] = None
    coreCount: Optional[float] = None
    threadsPerCore: Optional[float] = None


class CreditSpecificationItem(BaseModel):
    cpuCredits: Optional[str] = None


class EbsBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    deviceName: Optional[str] = None
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    snapshotId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class EnclaveOption(BaseModel):
    enabled: Optional[bool] = None


class EphemeralBlockDeviceItem(BaseModel):
    deviceName: Optional[str] = None
    noDevice: Optional[bool] = None
    virtualName: Optional[str] = None


class LaunchTemplateItem(BaseModel):
    id: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    name: Optional[str] = None
    version: Optional[str] = None


class MaintenanceOption(BaseModel):
    autoRecovery: Optional[str] = None


class MetadataOption(BaseModel):
    httpEndpoint: Optional[str] = None
    httpProtocolIpv6: Optional[str] = None
    httpPutResponseHopLimit: Optional[float] = None
    httpTokens: Optional[str] = None
    instanceMetadataTags: Optional[str] = None
    """
    Key-value map of resource tags.
    """


class NetworkInterfaceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    deviceIndex: Optional[float] = None
    networkCardIndex: Optional[float] = None
    networkInterfaceId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """


class PrivateDnsNameOption(BaseModel):
    enableResourceNameDnsARecord: Optional[bool] = None
    enableResourceNameDnsAaaaRecord: Optional[bool] = None
    hostnameType: Optional[str] = None


class RootBlockDeviceItem(BaseModel):
    deleteOnTermination: Optional[bool] = None
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class SubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class VpcSecurityGroupIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class VpcSecurityGroupIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    ami: Optional[str] = None
    associatePublicIpAddress: Optional[bool] = None
    availabilityZone: Optional[str] = None
    blockDurationMinutes: Optional[float] = None
    """
    The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
    The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
    Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    cpuCoreCount: Optional[float] = None
    cpuOptions: Optional[List[CpuOption]] = None
    cpuThreadsPerCore: Optional[float] = None
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    disableApiStop: Optional[bool] = None
    disableApiTermination: Optional[bool] = None
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    ebsOptimized: Optional[bool] = None
    enclaveOptions: Optional[List[EnclaveOption]] = None
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    getPasswordData: Optional[bool] = None
    hibernation: Optional[bool] = None
    hostId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    hostResourceGroupArn: Optional[str] = None
    iamInstanceProfile: Optional[str] = None
    instanceInitiatedShutdownBehavior: Optional[str] = None
    instanceInterruptionBehavior: Optional[str] = None
    """
    Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    """
    instanceType: Optional[str] = None
    ipv6AddressCount: Optional[float] = None
    ipv6Addresses: Optional[List[str]] = None
    keyName: Optional[str] = None
    launchGroup: Optional[str] = None
    """
    A launch group is a group of spot instances that launch together and terminate together.
    If left empty instances are launched and terminated individually.
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    metadataOptions: Optional[List[MetadataOption]] = None
    monitoring: Optional[bool] = None
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    placementGroup: Optional[str] = None
    placementPartitionNumber: Optional[float] = None
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    privateIp: Optional[str] = None
    """
    The private IP address assigned to the instance
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    secondaryPrivateIps: Optional[List[str]] = None
    securityGroups: Optional[List[str]] = None
    sourceDestCheck: Optional[bool] = None
    spotPrice: Optional[str] = None
    """
    The maximum price to request on the spot market.
    """
    spotType: Optional[str] = None
    """
    If set to one-time, after
    the instance is terminated, the spot request will be closed.
    """
    subnetId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tenancy: Optional[str] = None
    userData: Optional[str] = None
    userDataBase64: Optional[str] = None
    userDataReplaceOnChange: Optional[bool] = None
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    waitForFulfillment: Optional[bool] = None


class InitProvider(BaseModel):
    ami: Optional[str] = None
    associatePublicIpAddress: Optional[bool] = None
    availabilityZone: Optional[str] = None
    blockDurationMinutes: Optional[float] = None
    """
    The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
    The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
    Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    cpuCoreCount: Optional[float] = None
    cpuOptions: Optional[List[CpuOption]] = None
    cpuThreadsPerCore: Optional[float] = None
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    disableApiStop: Optional[bool] = None
    disableApiTermination: Optional[bool] = None
    ebsBlockDevice: Optional[List[EbsBlockDeviceItem]] = None
    ebsOptimized: Optional[bool] = None
    enclaveOptions: Optional[List[EnclaveOption]] = None
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    getPasswordData: Optional[bool] = None
    hibernation: Optional[bool] = None
    hostId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    hostResourceGroupArn: Optional[str] = None
    iamInstanceProfile: Optional[str] = None
    instanceInitiatedShutdownBehavior: Optional[str] = None
    instanceInterruptionBehavior: Optional[str] = None
    """
    Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    """
    instanceType: Optional[str] = None
    ipv6AddressCount: Optional[float] = None
    ipv6Addresses: Optional[List[str]] = None
    keyName: Optional[str] = None
    launchGroup: Optional[str] = None
    """
    A launch group is a group of spot instances that launch together and terminate together.
    If left empty instances are launched and terminated individually.
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    metadataOptions: Optional[List[MetadataOption]] = None
    monitoring: Optional[bool] = None
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    placementGroup: Optional[str] = None
    placementPartitionNumber: Optional[float] = None
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    privateIp: Optional[str] = None
    """
    The private IP address assigned to the instance
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItem]] = None
    secondaryPrivateIps: Optional[List[str]] = None
    securityGroups: Optional[List[str]] = None
    sourceDestCheck: Optional[bool] = None
    spotPrice: Optional[str] = None
    """
    The maximum price to request on the spot market.
    """
    spotType: Optional[str] = None
    """
    If set to one-time, after
    the instance is terminated, the spot request will be closed.
    """
    subnetId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tenancy: Optional[str] = None
    userData: Optional[str] = None
    userDataBase64: Optional[str] = None
    userDataReplaceOnChange: Optional[bool] = None
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    waitForFulfillment: Optional[bool] = None


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class EbsBlockDeviceItemModel(BaseModel):
    deleteOnTermination: Optional[bool] = None
    deviceName: Optional[str] = None
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    snapshotId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    volumeId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class RootBlockDeviceItemModel(BaseModel):
    deleteOnTermination: Optional[bool] = None
    deviceName: Optional[str] = None
    encrypted: Optional[bool] = None
    iops: Optional[float] = None
    kmsKeyId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    throughput: Optional[float] = None
    volumeId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    volumeSize: Optional[float] = None
    volumeType: Optional[str] = None


class AtProvider(BaseModel):
    ami: Optional[str] = None
    arn: Optional[str] = None
    associatePublicIpAddress: Optional[bool] = None
    availabilityZone: Optional[str] = None
    blockDurationMinutes: Optional[float] = None
    """
    The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).
    The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates.
    Note that you can't specify an Availability Zone group or a launch group if you specify a duration.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    cpuCoreCount: Optional[float] = None
    cpuOptions: Optional[List[CpuOption]] = None
    cpuThreadsPerCore: Optional[float] = None
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    disableApiStop: Optional[bool] = None
    disableApiTermination: Optional[bool] = None
    ebsBlockDevice: Optional[List[EbsBlockDeviceItemModel]] = None
    ebsOptimized: Optional[bool] = None
    enclaveOptions: Optional[List[EnclaveOption]] = None
    ephemeralBlockDevice: Optional[List[EphemeralBlockDeviceItem]] = None
    getPasswordData: Optional[bool] = None
    hibernation: Optional[bool] = None
    hostId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    hostResourceGroupArn: Optional[str] = None
    iamInstanceProfile: Optional[str] = None
    id: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    instanceInterruptionBehavior: Optional[str] = None
    """
    Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.
    """
    instanceState: Optional[str] = None
    instanceType: Optional[str] = None
    ipv6AddressCount: Optional[float] = None
    ipv6Addresses: Optional[List[str]] = None
    keyName: Optional[str] = None
    launchGroup: Optional[str] = None
    """
    A launch group is a group of spot instances that launch together and terminate together.
    If left empty instances are launched and terminated individually.
    """
    launchTemplate: Optional[List[LaunchTemplateItem]] = None
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    metadataOptions: Optional[List[MetadataOption]] = None
    monitoring: Optional[bool] = None
    networkInterface: Optional[List[NetworkInterfaceItem]] = None
    outpostArn: Optional[str] = None
    passwordData: Optional[str] = None
    placementGroup: Optional[str] = None
    placementPartitionNumber: Optional[float] = None
    primaryNetworkInterfaceId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    privateDns: Optional[str] = None
    """
    The private DNS name assigned to the instance. Can only be
    used inside the Amazon EC2, and only available if you've enabled DNS hostnames
    for your VPC
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    privateIp: Optional[str] = None
    """
    The private IP address assigned to the instance
    """
    publicDns: Optional[str] = None
    """
    The public DNS name assigned to the instance. For EC2-VPC, this
    is only available if you've enabled DNS hostnames for your VPC
    """
    publicIp: Optional[str] = None
    """
    The public IP address assigned to the instance, if applicable.
    """
    rootBlockDevice: Optional[List[RootBlockDeviceItemModel]] = None
    secondaryPrivateIps: Optional[List[str]] = None
    securityGroups: Optional[List[str]] = None
    sourceDestCheck: Optional[bool] = None
    spotBidStatus: Optional[str] = None
    """
    The current bid
    status
    of the Spot Instance Request.
    """
    spotInstanceId: Optional[str] = None
    """
    The Instance ID (if any) that is currently fulfilling
    the Spot Instance request.
    """
    spotPrice: Optional[str] = None
    """
    The maximum price to request on the spot market.
    """
    spotRequestState: Optional[str] = None
    """
    The current request
    state
    of the Spot Instance Request.
    """
    spotType: Optional[str] = None
    """
    If set to one-time, after
    the instance is terminated, the spot request will be closed.
    """
    subnetId: Optional[str] = None
    """
    The Spot Instance Request ID.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    tenancy: Optional[str] = None
    userData: Optional[str] = None
    userDataBase64: Optional[str] = None
    userDataReplaceOnChange: Optional[bool] = None
    validFrom: Optional[str] = None
    """
    The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.
    """
    validUntil: Optional[str] = None
    """
    The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.
    """
    volumeTags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    waitForFulfillment: Optional[bool] = None


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class SpotInstanceRequest(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    SpotInstanceRequestSpec defines the desired state of SpotInstanceRequest
    """
    status: Optional[Status] = None
    """
    SpotInstanceRequestStatus defines the observed state of SpotInstanceRequest.
    """


class SpotInstanceRequestList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[SpotInstanceRequest]
    """
    List of spotinstancerequests. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
# generated by datamodel-codegen:
#   filename:  workdir/ec2_aws_upbound_io_v1beta1_launchtemplate.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class KmsKeyIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class KmsKeyIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class Eb(BaseModel):
    deleteOnTermination: Optional[str] = None
    """
    Whether the volume should be destroyed on instance termination.
    See Preserving Amazon EBS Volumes on Instance Termination for more information.
    """
    encrypted: Optional[str] = None
    """
    Enables EBS encryption on the volume.
    Cannot be used with snapshot_id.
    """
    iops: Optional[float] = None
    """
    The amount of provisioned IOPS.
    This must be set with a volume_type of "io1/io2/gp3".
    """
    kmsKeyId: Optional[str] = None
    """
    The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
    encrypted must be set to true when this is set.
    """
    kmsKeyIdRef: Optional[KmsKeyIdRef] = None
    """
    Reference to a Key in kms to populate kmsKeyId.
    """
    kmsKeyIdSelector: Optional[KmsKeyIdSelector] = None
    """
    Selector for a Key in kms to populate kmsKeyId.
    """
    snapshotId: Optional[str] = None
    """
    The Snapshot ID to mount.
    """
    throughput: Optional[float] = None
    """
    The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
    """
    volumeSize: Optional[float] = None
    """
    The size of the volume in gigabytes.
    """
    volumeType: Optional[str] = None
    """
    The volume type.
    Can be one of standard, gp2, gp3, io1, io2, sc1 or st1.
    """


class BlockDeviceMapping(BaseModel):
    deviceName: Optional[str] = None
    """
    The name of the device to mount.
    """
    ebs: Optional[List[Eb]] = None
    """
    Configure EBS volume properties.
    """
    noDevice: Optional[str] = None
    """
    Suppresses the specified device included in the AMI's block device mapping.
    """
    virtualName: Optional[str] = None
    """
    The Instance Store Device
    Name
    (e.g., "ephemeral0").
    """


class CapacityReservationTargetItem(BaseModel):
    capacityReservationId: Optional[str] = None
    """
    The ID of the Capacity Reservation in which to run the instance.
    """
    capacityReservationResourceGroupArn: Optional[str] = None
    """
    The ARN of the Capacity Reservation resource group in which to run the instance.
    """


class CapacityReservationSpecificationItem(BaseModel):
    capacityReservationPreference: Optional[str] = None
    """
    Indicates the instance's Capacity Reservation preferences. Can be open or none. (Default none).
    """
    capacityReservationTarget: Optional[List[CapacityReservationTargetItem]] = None
    """
    Used to target a specific Capacity Reservation:
    """


class CpuOption(BaseModel):
    amdSevSnp: Optional[str] = None
    """
    Indicates whether to enable the instance for AMD SEV-SNP. AMD SEV-SNP is supported with M6a, R6a, and C6a instance types only. Valid values are enabled and disabled.
    """
    coreCount: Optional[float] = None
    """
    The number of CPU cores for the instance.
    """
    threadsPerCore: Optional[float] = None
    """
    The number of threads per CPU core.
    To disable Intel Hyper-Threading Technology for the instance, specify a value of 1.
    Otherwise, specify the default value of 2.
    """


class CreditSpecificationItem(BaseModel):
    cpuCredits: Optional[str] = None
    """
    The credit option for CPU usage.
    Can be standard or unlimited.
    T3 instances are launched as unlimited by default.
    T2 instances are launched as standard by default.
    """


class ElasticGpuSpecification(BaseModel):
    type: Optional[str] = None
    """
    The Elastic GPU Type
    """


class ElasticInferenceAcceleratorItem(BaseModel):
    type: Optional[str] = None
    """
    Accelerator type.
    """


class EnclaveOption(BaseModel):
    enabled: Optional[bool] = None
    """
    If set to true, Nitro Enclaves will be enabled on the instance.
    """


class HibernationOption(BaseModel):
    configured: Optional[bool] = None
    """
    If set to true, the launched EC2 instance will hibernation enabled.
    """


class ArnRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ArnSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class NameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class NameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class IamInstanceProfileItem(BaseModel):
    arn: Optional[str] = None
    """
    The Amazon Resource Name (ARN) of the instance profile. Conflicts with name.
    """
    arnRef: Optional[ArnRef] = None
    """
    Reference to a InstanceProfile in iam to populate arn.
    """
    arnSelector: Optional[ArnSelector] = None
    """
    Selector for a InstanceProfile in iam to populate arn.
    """
    name: Optional[str] = None
    """
    The name of the instance profile.
    """
    nameRef: Optional[NameRef] = None
    """
    Reference to a InstanceProfile in iam to populate name.
    """
    nameSelector: Optional[NameSelector] = None
    """
    Selector for a InstanceProfile in iam to populate name.
    """


class SpotOption(BaseModel):
    blockDurationMinutes: Optional[float] = None
    """
    The required duration in minutes. This value must be a multiple of 60.
    """
    instanceInterruptionBehavior: Optional[str] = None
    """
    The behavior when a Spot Instance is interrupted. Can be hibernate,
    stop, or terminate. (Default: terminate).
    """
    maxPrice: Optional[str] = None
    """
    The maximum hourly price you're willing to pay for the Spot Instances.
    """
    spotInstanceType: Optional[str] = None
    """
    The Spot Instance request type. Can be one-time, or persistent.
    """
    validUntil: Optional[str] = None
    """
    The end date of the request.
    """


class InstanceMarketOption(BaseModel):
    marketType: Optional[str] = None
    """
    The market type. Can be spot.
    """
    spotOptions: Optional[List[SpotOption]] = None
    """
    The options for Spot Instance
    """


class AcceleratorCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class AcceleratorTotalMemoryMibItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class BaselineEbsBandwidthMbp(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class MemoryGibPerVcpuItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class MemoryMibItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class NetworkBandwidthGbp(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class NetworkInterfaceCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class TotalLocalStorageGbItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class VcpuCountItem(BaseModel):
    max: Optional[float] = None
    """
    Maximum.
    """
    min: Optional[float] = None
    """
    Minimum.
    """


class InstanceRequirement(BaseModel):
    acceleratorCount: Optional[List[AcceleratorCountItem]] = None
    """
    Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.
    """
    acceleratorManufacturers: Optional[List[str]] = None
    """
    List of accelerator manufacturer names. Default is any manufacturer.
    """
    acceleratorNames: Optional[List[str]] = None
    """
    List of accelerator names. Default is any acclerator.
    """
    acceleratorTotalMemoryMib: Optional[List[AcceleratorTotalMemoryMibItem]] = None
    """
    Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.
    """
    acceleratorTypes: Optional[List[str]] = None
    """
    List of accelerator types. Default is any accelerator type.
    """
    allowedInstanceTypes: Optional[List[str]] = None
    """
    List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.
    """
    bareMetal: Optional[str] = None
    """
    Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.
    """
    baselineEbsBandwidthMbps: Optional[List[BaselineEbsBandwidthMbp]] = None
    """
    Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.
    """
    burstablePerformance: Optional[str] = None
    """
    Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.
    """
    cpuManufacturers: Optional[List[str]] = None
    """
    List of CPU manufacturer names. Default is any manufacturer.
    """
    excludedInstanceTypes: Optional[List[str]] = None
    """
    List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.
    """
    instanceGenerations: Optional[List[str]] = None
    """
    List of instance generation names. Default is any generation.
    """
    localStorage: Optional[str] = None
    """
    Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.
    """
    localStorageTypes: Optional[List[str]] = None
    """
    List of local storage type names. Default any storage type.
    """
    maxSpotPriceAsPercentageOfOptimalOnDemandPrice: Optional[float] = None
    """
    The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price
    """
    memoryGibPerVcpu: Optional[List[MemoryGibPerVcpuItem]] = None
    """
    Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.
    """
    memoryMib: Optional[List[MemoryMibItem]] = None
    """
    Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.
    """
    networkBandwidthGbps: Optional[List[NetworkBandwidthGbp]] = None
    """
    Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.
    """
    networkInterfaceCount: Optional[List[NetworkInterfaceCountItem]] = None
    """
    Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.
    """
    onDemandMaxPricePercentageOverLowestPrice: Optional[float] = None
    """
    The price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.
    """
    requireHibernateSupport: Optional[bool] = None
    """
    Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.
    """
    spotMaxPricePercentageOverLowestPrice: Optional[float] = None
    """
    The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100.
    """
    totalLocalStorageGb: Optional[List[TotalLocalStorageGbItem]] = None
    """
    Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.
    """
    vcpuCount: Optional[List[VcpuCountItem]] = None
    """
    Block describing the minimum and maximum number of vCPUs. Default is no maximum.
    """


class LicenseSpecificationItem(BaseModel):
    licenseConfigurationArn: Optional[str] = None
    """
    ARN of the license configuration.
    """


class MaintenanceOption(BaseModel):
    autoRecovery: Optional[str] = None
    """
    Disables the automatic recovery behavior of your instance or sets it to default. Can be "default" or "disabled". See Recover your instance for more details.
    """


class MetadataOption(BaseModel):
    httpEndpoint: Optional[str] = None
    """
    Whether the metadata service is available. Can be "enabled" or "disabled". (Default: "enabled").
    """
    httpProtocolIpv6: Optional[str] = None
    """
    Enables or disables the IPv6 endpoint for the instance metadata service. Can be "enabled" or "disabled".
    """
    httpPutResponseHopLimit: Optional[float] = None
    """
    The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. Can be an integer from 1 to 64. (Default: 1).
    """
    httpTokens: Optional[str] = None
    """
    Whether or not the metadata service requires session tokens, also referred to as Instance Metadata Service Version 2 (IMDSv2). Can be "optional" or "required". (Default: "optional").
    """
    instanceMetadataTags: Optional[str] = None
    """
    Enables or disables access to instance tags from the instance metadata service. Can be "enabled" or "disabled".
    """


class MonitoringItem(BaseModel):
    enabled: Optional[bool] = None
    """
    If true, the launched EC2 instance will have detailed monitoring enabled.
    """


class NetworkInterfaceIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class NetworkInterfaceIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class SecurityGroupRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SecurityGroupSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class SubnetIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SubnetIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class NetworkInterface(BaseModel):
    associateCarrierIpAddress: Optional[str] = None
    """
    Associate a Carrier IP address with eth0 for a new network interface.
    Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface.
    Boolean value, can be left unset.
    """
    associatePublicIpAddress: Optional[str] = None
    """
    Associate a public ip address with the network interface.
    Boolean value, can be left unset.
    """
    deleteOnTermination: Optional[str] = None
    """
    Whether the network interface should be destroyed on instance termination.
    """
    description: Optional[str] = None
    """
    Description of the network interface.
    """
    deviceIndex: Optional[float] = None
    """
    The integer index of the network interface attachment.
    """
    interfaceType: Optional[str] = None
    """
    The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.
    """
    ipv4AddressCount: Optional[float] = None
    """
    The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses
    """
    ipv4Addresses: Optional[List[str]] = None
    """
    One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count
    """
    ipv4PrefixCount: Optional[float] = None
    """
    The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes
    """
    ipv4Prefixes: Optional[List[str]] = None
    """
    One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count
    """
    ipv6AddressCount: Optional[float] = None
    """
    The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count
    """
    ipv6PrefixCount: Optional[float] = None
    """
    The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes
    """
    ipv6Prefixes: Optional[List[str]] = None
    """
    One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count
    """
    networkCardIndex: Optional[float] = None
    """
    The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    """
    networkInterfaceId: Optional[str] = None
    """
    The ID of the network interface to attach.
    """
    networkInterfaceIdRef: Optional[NetworkInterfaceIdRef] = None
    """
    Reference to a NetworkInterface in ec2 to populate networkInterfaceId.
    """
    networkInterfaceIdSelector: Optional[NetworkInterfaceIdSelector] = None
    """
    Selector for a NetworkInterface in ec2 to populate networkInterfaceId.
    """
    primaryIpv6: Optional[str] = None
    privateIpAddress: Optional[str] = None
    """
    The primary private IPv4 address.
    """
    securityGroupRefs: Optional[List[SecurityGroupRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroupSelector: Optional[SecurityGroupSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroups.
    """
    securityGroups: Optional[List[str]] = None
    """
    A list of security group IDs to associate.
    """
    subnetId: Optional[str] = None
    """
    The VPC Subnet ID to associate.
    """
    subnetIdRef: Optional[SubnetIdRef] = None
    """
    Reference to a Subnet in ec2 to populate subnetId.
    """
    subnetIdSelector: Optional[SubnetIdSelector] = None
    """
    Selector for a Subnet in ec2 to populate subnetId.
    """


class PlacementItem(BaseModel):
    affinity: Optional[str] = None
    """
    The affinity setting for an instance on a Dedicated Host.
    """
    availabilityZone: Optional[str] = None
    """
    The Availability Zone for the instance.
    """
    groupName: Optional[str] = None
    """
    The name of the placement group for the instance.
    """
    hostId: Optional[str] = None
    """
    The ID of the Dedicated Host for the instance.
    """
    hostResourceGroupArn: Optional[str] = None
    """
    The ARN of the Host Resource Group in which to launch instances.
    """
    partitionNumber: Optional[float] = None
    """
    The number of the partition the instance should launch in. Valid only if the placement group strategy is set to partition.
    """
    spreadDomain: Optional[str] = None
    """
    Reserved for future use.
    """
    tenancy: Optional[str] = None
    """
    The tenancy of the instance (if the instance is running in a VPC). Can be default, dedicated, or host.
    """


class PrivateDnsNameOption(BaseModel):
    enableResourceNameDnsARecord: Optional[bool] = None
    """
    Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
    """
    enableResourceNameDnsAaaaRecord: Optional[bool] = None
    """
    Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
    """
    hostnameType: Optional[str] = None
    """
    The type of hostname for Amazon EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 native subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID. Valid values: ip-name and resource-name.
    """


class SecurityGroupNameRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class SecurityGroupNameSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class TagSpecification(BaseModel):
    resourceType: Optional[str] = None
    """
    The type of resource to tag.
    """
    tags: Optional[Dict[str, str]] = None
    """
    A map of tags to assign to the resource.
    """


class VpcSecurityGroupIdRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class VpcSecurityGroupIdSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class ForProvider(BaseModel):
    blockDeviceMappings: Optional[List[BlockDeviceMapping]] = None
    """
    Specify volumes to attach to the instance besides the volumes specified by the AMI.
    See Block Devices below for details.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Customize the credit specification of the instance. See Credit
    Specification below for more details.
    """
    defaultVersion: Optional[float] = None
    """
    Default Version of the launch template.
    """
    description: Optional[str] = None
    """
    Description of the launch template.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance
    Termination Protection
    """
    ebsOptimized: Optional[str] = None
    """
    If true, the launched EC2 instance will be EBS-optimized.
    """
    elasticGpuSpecifications: Optional[List[ElasticGpuSpecification]] = None
    """
    The elastic GPU to attach to the instance. See Elastic GPU
    below for more details.
    """
    elasticInferenceAccelerator: Optional[List[ElasticInferenceAcceleratorItem]] = None
    """
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    hibernationOptions: Optional[List[HibernationOption]] = None
    """
    The hibernation options for the instance. See Hibernation Options below for more details.
    """
    iamInstanceProfile: Optional[List[IamInstanceProfileItem]] = None
    """
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.
    """
    imageId: Optional[str] = None
    """
    The AMI from which to launch the instance.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Can be stop or terminate.
    (Default: stop).
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    The market (purchasing) option for the instance. See Market Options
    below for details.
    """
    instanceRequirements: Optional[List[InstanceRequirement]] = None
    """
    The attribute requirements for the type of instance. If present then instance_type cannot be present.
    """
    instanceType: Optional[str] = None
    """
    The type of the instance. If present then instance_requirements cannot be present.
    """
    kernelId: Optional[str] = None
    """
    The kernel ID.
    """
    keyName: Optional[str] = None
    """
    The key name to use for the instance.
    """
    licenseSpecification: Optional[List[LicenseSpecificationItem]] = None
    """
    A list of license specifications to associate with. See License Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    The maintenance options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options for the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[List[MonitoringItem]] = None
    """
    The monitoring option for the instance. See Monitoring below for more details.
    """
    name: Optional[str] = None
    """
    The name of the launch template.
    """
    networkInterfaces: Optional[List[NetworkInterface]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network
    Interfaces below for more details.
    """
    placement: Optional[List[PlacementItem]] = None
    """
    The placement of the instance. See Placement below for more details.
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    ramDiskId: Optional[str] = None
    """
    The ID of the RAM disk.
    """
    region: str
    """
    Region is the region you'd like your resource to be created in.
    """
    securityGroupNameRefs: Optional[List[SecurityGroupNameRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroupNames.
    """
    securityGroupNameSelector: Optional[SecurityGroupNameSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroupNames.
    """
    securityGroupNames: Optional[List[str]] = None
    """
    A list of security group names to associate with. If you are creating Instances in a VPC, use
    vpc_security_group_ids instead.
    """
    tagSpecifications: Optional[List[TagSpecification]] = None
    """
    The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    updateDefaultVersion: Optional[bool] = None
    """
    Whether to update Default Version each update. Conflicts with default_version.
    """
    userData: Optional[str] = None
    """
    The base64-encoded user data to provide when launching the instance.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


class InitProvider(BaseModel):
    blockDeviceMappings: Optional[List[BlockDeviceMapping]] = None
    """
    Specify volumes to attach to the instance besides the volumes specified by the AMI.
    See Block Devices below for details.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Customize the credit specification of the instance. See Credit
    Specification below for more details.
    """
    defaultVersion: Optional[float] = None
    """
    Default Version of the launch template.
    """
    description: Optional[str] = None
    """
    Description of the launch template.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance
    Termination Protection
    """
    ebsOptimized: Optional[str] = None
    """
    If true, the launched EC2 instance will be EBS-optimized.
    """
    elasticGpuSpecifications: Optional[List[ElasticGpuSpecification]] = None
    """
    The elastic GPU to attach to the instance. See Elastic GPU
    below for more details.
    """
    elasticInferenceAccelerator: Optional[List[ElasticInferenceAcceleratorItem]] = None
    """
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    hibernationOptions: Optional[List[HibernationOption]] = None
    """
    The hibernation options for the instance. See Hibernation Options below for more details.
    """
    iamInstanceProfile: Optional[List[IamInstanceProfileItem]] = None
    """
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.
    """
    imageId: Optional[str] = None
    """
    The AMI from which to launch the instance.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Can be stop or terminate.
    (Default: stop).
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    The market (purchasing) option for the instance. See Market Options
    below for details.
    """
    instanceRequirements: Optional[List[InstanceRequirement]] = None
    """
    The attribute requirements for the type of instance. If present then instance_type cannot be present.
    """
    instanceType: Optional[str] = None
    """
    The type of the instance. If present then instance_requirements cannot be present.
    """
    kernelId: Optional[str] = None
    """
    The kernel ID.
    """
    keyName: Optional[str] = None
    """
    The key name to use for the instance.
    """
    licenseSpecification: Optional[List[LicenseSpecificationItem]] = None
    """
    A list of license specifications to associate with. See License Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    The maintenance options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options for the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[List[MonitoringItem]] = None
    """
    The monitoring option for the instance. See Monitoring below for more details.
    """
    name: Optional[str] = None
    """
    The name of the launch template.
    """
    networkInterfaces: Optional[List[NetworkInterface]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network
    Interfaces below for more details.
    """
    placement: Optional[List[PlacementItem]] = None
    """
    The placement of the instance. See Placement below for more details.
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    ramDiskId: Optional[str] = None
    """
    The ID of the RAM disk.
    """
    securityGroupNameRefs: Optional[List[SecurityGroupNameRef]] = None
    """
    References to SecurityGroup in ec2 to populate securityGroupNames.
    """
    securityGroupNameSelector: Optional[SecurityGroupNameSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate securityGroupNames.
    """
    securityGroupNames: Optional[List[str]] = None
    """
    A list of security group names to associate with. If you are creating Instances in a VPC, use
    vpc_security_group_ids instead.
    """
    tagSpecifications: Optional[List[TagSpecification]] = None
    """
    The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    updateDefaultVersion: Optional[bool] = None
    """
    Whether to update Default Version each update. Conflicts with default_version.
    """
    userData: Optional[str] = None
    """
    The base64-encoded user data to provide when launching the instance.
    """
    vpcSecurityGroupIdRefs: Optional[List[VpcSecurityGroupIdRef]] = None
    """
    References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIdSelector: Optional[VpcSecurityGroupIdSelector] = None
    """
    Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class EbModel(BaseModel):
    deleteOnTermination: Optional[str] = None
    """
    Whether the volume should be destroyed on instance termination.
    See Preserving Amazon EBS Volumes on Instance Termination for more information.
    """
    encrypted: Optional[str] = None
    """
    Enables EBS encryption on the volume.
    Cannot be used with snapshot_id.
    """
    iops: Optional[float] = None
    """
    The amount of provisioned IOPS.
    This must be set with a volume_type of "io1/io2/gp3".
    """
    kmsKeyId: Optional[str] = None
    """
    The ARN of the AWS Key Management Service (AWS KMS) customer master key (CMK) to use when creating the encrypted volume.
    encrypted must be set to true when this is set.
    """
    snapshotId: Optional[str] = None
    """
    The Snapshot ID to mount.
    """
    throughput: Optional[float] = None
    """
    The throughput to provision for a gp3 volume in MiB/s (specified as an integer, e.g., 500), with a maximum of 1,000 MiB/s.
    """
    volumeSize: Optional[float] = None
    """
    The size of the volume in gigabytes.
    """
    volumeType: Optional[str] = None
    """
    The volume type.
    Can be one of standard, gp2, gp3, io1, io2, sc1 or st1.
    """


class IamInstanceProfileItemModel(BaseModel):
    arn: Optional[str] = None
    """
    The Amazon Resource Name (ARN) of the instance profile. Conflicts with name.
    """
    name: Optional[str] = None
    """
    The name of the instance profile.
    """


class NetworkInterfaceModel(BaseModel):
    associateCarrierIpAddress: Optional[str] = None
    """
    Associate a Carrier IP address with eth0 for a new network interface.
    Use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface.
    Boolean value, can be left unset.
    """
    associatePublicIpAddress: Optional[str] = None
    """
    Associate a public ip address with the network interface.
    Boolean value, can be left unset.
    """
    deleteOnTermination: Optional[str] = None
    """
    Whether the network interface should be destroyed on instance termination.
    """
    description: Optional[str] = None
    """
    Description of the network interface.
    """
    deviceIndex: Optional[float] = None
    """
    The integer index of the network interface attachment.
    """
    interfaceType: Optional[str] = None
    """
    The type of network interface. To create an Elastic Fabric Adapter (EFA), specify efa.
    """
    ipv4AddressCount: Optional[float] = None
    """
    The number of secondary private IPv4 addresses to assign to a network interface. Conflicts with ipv4_addresses
    """
    ipv4Addresses: Optional[List[str]] = None
    """
    One or more private IPv4 addresses to associate. Conflicts with ipv4_address_count
    """
    ipv4PrefixCount: Optional[float] = None
    """
    The number of IPv4 prefixes to be automatically assigned to the network interface. Conflicts with ipv4_prefixes
    """
    ipv4Prefixes: Optional[List[str]] = None
    """
    One or more IPv4 prefixes to be assigned to the network interface. Conflicts with ipv4_prefix_count
    """
    ipv6AddressCount: Optional[float] = None
    """
    The number of IPv6 addresses to assign to a network interface. Conflicts with ipv6_addresses
    """
    ipv6Addresses: Optional[List[str]] = None
    """
    One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. Conflicts with ipv6_address_count
    """
    ipv6PrefixCount: Optional[float] = None
    """
    The number of IPv6 prefixes to be automatically assigned to the network interface. Conflicts with ipv6_prefixes
    """
    ipv6Prefixes: Optional[List[str]] = None
    """
    One or more IPv6 prefixes to be assigned to the network interface. Conflicts with ipv6_prefix_count
    """
    networkCardIndex: Optional[float] = None
    """
    The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index 0. The default is network card index 0.
    """
    networkInterfaceId: Optional[str] = None
    """
    The ID of the network interface to attach.
    """
    primaryIpv6: Optional[str] = None
    privateIpAddress: Optional[str] = None
    """
    The primary private IPv4 address.
    """
    securityGroups: Optional[List[str]] = None
    """
    A list of security group IDs to associate.
    """
    subnetId: Optional[str] = None
    """
    The VPC Subnet ID to associate.
    """


class AtProvider(BaseModel):
    arn: Optional[str] = None
    """
    Amazon Resource Name (ARN) of the launch template.
    """
    blockDeviceMappings: Optional[List[BlockDeviceMapping]] = None
    """
    Specify volumes to attach to the instance besides the volumes specified by the AMI.
    See Block Devices below for details.
    """
    capacityReservationSpecification: Optional[
        List[CapacityReservationSpecificationItem]
    ] = None
    """
    Targeting for EC2 capacity reservations. See Capacity Reservation Specification below for more details.
    """
    cpuOptions: Optional[List[CpuOption]] = None
    """
    The CPU options for the instance. See CPU Options below for more details.
    """
    creditSpecification: Optional[List[CreditSpecificationItem]] = None
    """
    Customize the credit specification of the instance. See Credit
    Specification below for more details.
    """
    defaultVersion: Optional[float] = None
    """
    Default Version of the launch template.
    """
    description: Optional[str] = None
    """
    Description of the launch template.
    """
    disableApiStop: Optional[bool] = None
    """
    If true, enables EC2 Instance Stop Protection.
    """
    disableApiTermination: Optional[bool] = None
    """
    If true, enables EC2 Instance
    Termination Protection
    """
    ebsOptimized: Optional[str] = None
    """
    If true, the launched EC2 instance will be EBS-optimized.
    """
    elasticGpuSpecifications: Optional[List[ElasticGpuSpecification]] = None
    """
    The elastic GPU to attach to the instance. See Elastic GPU
    below for more details.
    """
    elasticInferenceAccelerator: Optional[List[ElasticInferenceAcceleratorItem]] = None
    """
    Configuration block containing an Elastic Inference Accelerator to attach to the instance. See Elastic Inference Accelerator below for more details.
    """
    enclaveOptions: Optional[List[EnclaveOption]] = None
    """
    Enable Nitro Enclaves on launched instances. See Enclave Options below for more details.
    """
    hibernationOptions: Optional[List[HibernationOption]] = None
    """
    The hibernation options for the instance. See Hibernation Options below for more details.
    """
    iamInstanceProfile: Optional[List[IamInstanceProfileItemModel]] = None
    """
    The IAM Instance Profile to launch the instance with. See Instance Profile
    below for more details.
    """
    id: Optional[str] = None
    """
    The ID of the launch template.
    """
    imageId: Optional[str] = None
    """
    The AMI from which to launch the instance.
    """
    instanceInitiatedShutdownBehavior: Optional[str] = None
    """
    Shutdown behavior for the instance. Can be stop or terminate.
    (Default: stop).
    """
    instanceMarketOptions: Optional[List[InstanceMarketOption]] = None
    """
    The market (purchasing) option for the instance. See Market Options
    below for details.
    """
    instanceRequirements: Optional[List[InstanceRequirement]] = None
    """
    The attribute requirements for the type of instance. If present then instance_type cannot be present.
    """
    instanceType: Optional[str] = None
    """
    The type of the instance. If present then instance_requirements cannot be present.
    """
    kernelId: Optional[str] = None
    """
    The kernel ID.
    """
    keyName: Optional[str] = None
    """
    The key name to use for the instance.
    """
    latestVersion: Optional[float] = None
    """
    The latest version of the launch template.
    """
    licenseSpecification: Optional[List[LicenseSpecificationItem]] = None
    """
    A list of license specifications to associate with. See License Specification below for more details.
    """
    maintenanceOptions: Optional[List[MaintenanceOption]] = None
    """
    The maintenance options for the instance. See Maintenance Options below for more details.
    """
    metadataOptions: Optional[List[MetadataOption]] = None
    """
    Customize the metadata options for the instance. See Metadata Options below for more details.
    """
    monitoring: Optional[List[MonitoringItem]] = None
    """
    The monitoring option for the instance. See Monitoring below for more details.
    """
    name: Optional[str] = None
    """
    The name of the launch template.
    """
    networkInterfaces: Optional[List[NetworkInterfaceModel]] = None
    """
    Customize network interfaces to be attached at instance boot time. See Network
    Interfaces below for more details.
    """
    placement: Optional[List[PlacementItem]] = None
    """
    The placement of the instance. See Placement below for more details.
    """
    privateDnsNameOptions: Optional[List[PrivateDnsNameOption]] = None
    """
    The options for the instance hostname. The default values are inherited from the subnet. See Private DNS Name Options below for more details.
    """
    ramDiskId: Optional[str] = None
    """
    The ID of the RAM disk.
    """
    securityGroupNames: Optional[List[str]] = None
    """
    A list of security group names to associate with. If you are creating Instances in a VPC, use
    vpc_security_group_ids instead.
    """
    tagSpecifications: Optional[List[TagSpecification]] = None
    """
    The tags to apply to the resources during launch. See Tag Specifications below for more details. Default tags are currently not propagated to ASG created resources so you may wish to inject your default tags into this variable against the relevant child resource types created.
    """
    tags: Optional[Dict[str, str]] = None
    """
    Key-value map of resource tags.
    """
    tagsAll: Optional[Dict[str, str]] = None
    """
    A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
    """
    updateDefaultVersion: Optional[bool] = None
    """
    Whether to update Default Version each update. Conflicts with default_version.
    """
    userData: Optional[str] = None
    """
    The base64-encoded user data to provide when launching the instance.
    """
    vpcSecurityGroupIds: Optional[List[str]] = None
    """
    A list of security group IDs to associate with. Conflicts with network_interfaces.security_groups
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class LaunchTemplate(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    LaunchTemplateSpec defines the desired state of LaunchTemplate
    """
    status: Optional[Status] = None
    """
    LaunchTemplateStatus defines the observed state of LaunchTemplate.
    """


class LaunchTemplateList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[LaunchTemplate]
    """
    List of launchtemplates. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
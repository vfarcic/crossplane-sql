# generated by datamodel-codegen:
#   filename:  workdir/sql_gcp_upbound_io_v1beta1_databaseinstance.yaml

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import AwareDatetime, BaseModel, Field

from .....k8s.apimachinery.pkg.apis.meta import v1


class DeletionPolicy(Enum):
    Orphan = 'Orphan'
    Delete = 'Delete'


class CloneItem(BaseModel):
    allocatedIpRange: Optional[str] = None
    """
    The name of the allocated ip range for the private ip CloudSQL instance. For example: "google-managed-services-default". If set, the cloned instance ip will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
    """
    databaseNames: Optional[List[str]] = None
    """
    (SQL Server only, use with point_in_time) Clone only the specified databases from the source instance. Clone all databases if empty.
    """
    pointInTime: Optional[str] = None
    """
    The timestamp of the point in time that should be restored.
    """
    preferredZone: Optional[str] = None
    """
    (Point-in-time recovery for PostgreSQL only) Clone to an instance in the specified zone. If no zone is specified, clone to the same zone as the source instance. clone-unavailable-instance
    """
    sourceInstanceName: Optional[str] = None
    """
    Name of the source instance which will be cloned.
    """


class PasswordSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class ReplicaConfigurationItem(BaseModel):
    caCertificate: Optional[str] = None
    """
    PEM representation of the trusted CA's x509
    certificate.
    """
    clientCertificate: Optional[str] = None
    """
    PEM representation of the replica's x509
    certificate.
    """
    clientKey: Optional[str] = None
    """
    PEM representation of the replica's private key. The
    corresponding public key in encoded in the client_certificate.
    """
    connectRetryInterval: Optional[float] = None
    """
    The number of seconds
    between connect retries. MySQL's default is 60 seconds.
    """
    dumpFilePath: Optional[str] = None
    """
    Path to a SQL file in GCS from which replica
    instances are created. Format is gs://bucket/filename.
    """
    failoverTarget: Optional[bool] = None
    """
    Specifies if the replica is the failover target.
    If the field is set to true the replica will be designated as a failover replica.
    If the master instance fails, the replica instance will be promoted as
    the new master instance.
    ~> NOTE: Not supported for Postgres database.
    """
    masterHeartbeatPeriod: Optional[float] = None
    """
    Time in ms between replication
    heartbeats.
    """
    passwordSecretRef: Optional[PasswordSecretRef] = None
    """
    Password for the replication connection.
    """
    sslCipher: Optional[str] = None
    """
    Permissible ciphers for use in SSL encryption.
    """
    username: Optional[str] = None
    """
    Username for replication connection.
    """
    verifyServerCertificate: Optional[bool] = None
    """
    True if the master's common name
    value is checked during the SSL handshake.
    """


class RestoreBackupContextItem(BaseModel):
    backupRunId: Optional[float] = None
    """
    The ID of the backup run to restore from.
    """
    instanceId: Optional[str] = None
    """
    The ID of the instance that the backup was taken from. If left empty,
    this instance's ID will be used.
    """
    project: Optional[str] = None
    """
    The full project ID of the source instance.`
    """


class RootPasswordSecretRef(BaseModel):
    key: str
    """
    The key to select.
    """
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class ActiveDirectoryConfigItem(BaseModel):
    domain: Optional[str] = None
    """
    The domain name for the active directory (e.g., mydomain.com).
    Can only be used with SQL Server.
    """


class AdvancedMachineFeature(BaseModel):
    threadsPerCore: Optional[float] = None
    """
    The number of threads per core. The value of this flag can be 1 or 2. To disable SMT, set this flag to 1. Only available in Cloud SQL for SQL Server instances. See smt for more details.
    """


class BackupRetentionSetting(BaseModel):
    retainedBackups: Optional[float] = None
    """
    Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit
    is 'COUNT', we will retain this many backups.
    """
    retentionUnit: Optional[str] = None
    """
    The unit that 'retained_backups' represents. Defaults to COUNT.
    """


class BackupConfigurationItem(BaseModel):
    backupRetentionSettings: Optional[List[BackupRetentionSetting]] = None
    """
    Backup retention settings. The configuration is detailed below.
    """
    binaryLogEnabled: Optional[bool] = None
    """
    True if binary logging is enabled.
    Can only be used with MySQL.
    """
    enabled: Optional[bool] = None
    """
    True if backup configuration is enabled.
    """
    location: Optional[str] = None
    """
    The region where the backup will be stored
    """
    pointInTimeRecoveryEnabled: Optional[bool] = None
    """
    True if Point-in-time recovery is enabled. Will restart database if enabled after instance creation. Valid only for PostgreSQL and SQL Server instances.
    """
    startTime: Optional[str] = None
    """
    HH:MM format time indicating when backup
    configuration starts.
    """
    transactionLogRetentionDays: Optional[float] = None
    """
    The number of days of transaction logs we retain for point in time restore, from 1-7. For PostgreSQL Enterprise Plus instances, the number of days of retained transaction logs can be set from 1 to 35.
    """


class DataCacheConfigItem(BaseModel):
    dataCacheEnabled: Optional[bool] = None
    """
    Whether data cache is enabled for the instance. Defaults to false. Can be used with MYSQL and PostgreSQL only.
    """


class DatabaseFlag(BaseModel):
    name: Optional[str] = None
    """
    A name for this whitelist entry.
    """
    value: Optional[str] = None
    """
    A CIDR notation IPv4 or IPv6 address that is allowed to
    access this instance. Must be set even if other two attributes are not for
    the whitelist to become active.
    """


class DenyMaintenancePeriodItem(BaseModel):
    endDate: Optional[str] = None
    """
    "deny maintenance period" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the no maintenance interval recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
    """
    startDate: Optional[str] = None
    """
    "deny maintenance period" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
    """
    time: Optional[str] = None
    """
    Time in UTC when the "deny maintenance period" starts on startDate and ends on endDate. The time is in format: HH:mm:SS, i.e., 00:00:00
    """


class InsightsConfigItem(BaseModel):
    queryInsightsEnabled: Optional[bool] = None
    """
    True if Query Insights feature is enabled.
    """
    queryPlansPerMinute: Optional[float] = None
    """
    Number of query execution plans captured by Insights per minute for all queries combined. Between 0 and 20. Default to 5.
    """
    queryStringLength: Optional[float] = None
    """
    Maximum query length stored in bytes. Between 256 and 4500. Default to 1024. Higher query lengths are more useful for analytical queries, but they also require more memory. Changing the query length requires you to restart the instance. You can still add tags to queries that exceed the length limit.
    """
    recordApplicationTags: Optional[bool] = None
    """
    True if Query Insights will record application tags from query when enabled.
    """
    recordClientAddress: Optional[bool] = None
    """
    True if Query Insights will record client address when enabled.
    """


class AuthorizedNetwork(BaseModel):
    expirationTime: Optional[str] = None
    """
    The RFC 3339
    formatted date time string indicating when this whitelist expires.
    """
    name: Optional[str] = None
    """
    A name for this whitelist entry.
    """
    value: Optional[str] = None
    """
    A CIDR notation IPv4 or IPv6 address that is allowed to
    access this instance. Must be set even if other two attributes are not for
    the whitelist to become active.
    """


class Resolution(Enum):
    Required = 'Required'
    Optional = 'Optional'


class Resolve(Enum):
    Always = 'Always'
    IfNotPresent = 'IfNotPresent'


class Policy(BaseModel):
    resolution: Optional[Resolution] = 'Required'
    """
    Resolution specifies whether resolution of this reference is required.
    The default is 'Required', which means the reconcile will fail if the
    reference cannot be resolved. 'Optional' means this reference will be
    a no-op if it cannot be resolved.
    """
    resolve: Optional[Resolve] = None
    """
    Resolve specifies when this reference should be resolved. The default
    is 'IfNotPresent', which will attempt to resolve the reference only when
    the corresponding field is not present. Use 'Always' to resolve the
    reference on every reconcile.
    """


class PrivateNetworkRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class PrivateNetworkSelector(BaseModel):
    matchControllerRef: Optional[bool] = None
    """
    MatchControllerRef ensures an object with the same controller reference
    as the selecting object is selected.
    """
    matchLabels: Optional[Dict[str, str]] = None
    """
    MatchLabels ensures an object with matching labels is selected.
    """
    policy: Optional[Policy] = None
    """
    Policies for selection.
    """


class PscConfigItem(BaseModel):
    allowedConsumerProjects: Optional[List[str]] = None
    """
    List of consumer projects that are allow-listed for PSC connections to this instance. This instance can be connected to with PSC from any network in these projects. Each consumer project in this list may be represented by a project number (numeric) or by a project id (alphanumeric).
    """
    pscEnabled: Optional[bool] = None
    """
    Whether PSC connectivity is enabled for this instance.
    """


class IpConfigurationItem(BaseModel):
    allocatedIpRange: Optional[str] = None
    """
    The name of the allocated ip range for the private ip CloudSQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
    """
    authorizedNetworks: Optional[List[AuthorizedNetwork]] = None
    enablePrivatePathForGoogleCloudServices: Optional[bool] = None
    """
    Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
    """
    ipv4Enabled: Optional[bool] = None
    """
    Whether this Cloud SQL instance should be assigned
    a public IPV4 address. At least ipv4_enabled must be enabled or a
    private_network must be configured.
    """
    privateNetwork: Optional[str] = None
    """
    The VPC network from which the Cloud SQL
    instance is accessible for private IP. For example, projects/myProject/global/networks/default.
    Specifying a network enables private IP.
    At least ipv4_enabled must be enabled or a private_network must be configured.
    This setting can be updated, but it cannot be removed after it is set.
    """
    privateNetworkRef: Optional[PrivateNetworkRef] = None
    """
    Reference to a Network in compute to populate privateNetwork.
    """
    privateNetworkSelector: Optional[PrivateNetworkSelector] = None
    """
    Selector for a Network in compute to populate privateNetwork.
    """
    pscConfig: Optional[List[PscConfigItem]] = None
    requireSsl: Optional[bool] = None
    """
    Whether SSL connections over IP are enforced or not. To change this field, also set the corresponding value in ssl_mode.
    """
    serverCaMode: Optional[str] = None
    """
    Specify how the server certificate's Certificate Authority is hosted. Supported value is GOOGLE_MANAGED_INTERNAL_CA.
    """
    sslMode: Optional[str] = None
    """
    Specify how SSL connection should be enforced in DB connections. This field provides more SSL enforcment options compared to require_ssl. To change this field, also set the correspoding value in require_ssl.
    """


class LocationPreferenceItem(BaseModel):
    followGaeApplication: Optional[str] = None
    """
    A GAE application whose zone to remain
    in. Must be in the same region as this instance.
    """
    secondaryZone: Optional[str] = None
    """
    The preferred Compute Engine zone for the secondary/failover.
    """
    zone: Optional[str] = None
    """
    The preferred compute engine
    zone.
    """


class MaintenanceWindowItem(BaseModel):
    day: Optional[float] = None
    """
    Day of week (1-7), starting on Monday
    """
    hour: Optional[float] = None
    """
    Hour of day (0-23), ignored if day not set
    """
    updateTrack: Optional[str] = None
    """
    Receive updates earlier (canary) or later
    (stable)
    """


class PasswordValidationPolicyItem(BaseModel):
    complexity: Optional[str] = None
    """
    Checks if the password is a combination of lowercase, uppercase, numeric, and non-alphanumeric characters.
    """
    disallowUsernameSubstring: Optional[bool] = None
    """
    Prevents the use of the username in the password.
    """
    enablePasswordPolicy: Optional[bool] = None
    """
    Enables or disable the password validation policy.
    """
    minLength: Optional[float] = None
    """
    Specifies the minimum number of characters that the password must have.
    """
    passwordChangeInterval: Optional[str] = None
    """
    Specifies the minimum duration after which you can change the password.
    """
    reuseInterval: Optional[float] = None
    """
    Specifies the number of previous passwords that you can't reuse.
    """


class SqlServerAuditConfigItem(BaseModel):
    bucket: Optional[str] = None
    """
    The name of the destination bucket (e.g., gs://mybucket).
    """
    retentionInterval: Optional[str] = None
    """
    How long to keep generated audit files. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """
    uploadInterval: Optional[str] = None
    """
    How often to upload generated audit files. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    """


class Setting(BaseModel):
    activationPolicy: Optional[str] = None
    """
    This specifies when the instance should be
    active. Can be either ALWAYS, NEVER or ON_DEMAND.
    """
    activeDirectoryConfig: Optional[List[ActiveDirectoryConfigItem]] = None
    advancedMachineFeatures: Optional[List[AdvancedMachineFeature]] = None
    availabilityType: Optional[str] = None
    """
    The availability type of the Cloud SQL
    instance, high availability (REGIONAL) or single zone (ZONAL).' For all instances, ensure that
    settings.backup_configuration.enabled is set to true.
    For MySQL instances, ensure that settings.backup_configuration.binary_log_enabled is set to true.
    For Postgres and SQL Server instances, ensure that settings.backup_configuration.point_in_time_recovery_enabled
    is set to true. Defaults to ZONAL.
    """
    backupConfiguration: Optional[List[BackupConfigurationItem]] = None
    collation: Optional[str] = None
    """
    The name of server instance collation.
    """
    connectorEnforcement: Optional[str] = None
    """
    Specifies if connections must use Cloud SQL connectors.
    """
    dataCacheConfig: Optional[List[DataCacheConfigItem]] = None
    databaseFlags: Optional[List[DatabaseFlag]] = None
    deletionProtectionEnabled: Optional[bool] = None
    """
    .
    """
    denyMaintenancePeriod: Optional[List[DenyMaintenancePeriodItem]] = None
    diskAutoresize: Optional[bool] = None
    """
    Enables auto-resizing of the storage size. Defaults to true.
    """
    diskAutoresizeLimit: Optional[float] = None
    """
    The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
    """
    diskSize: Optional[float] = None
    """
    The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
    """
    diskType: Optional[str] = None
    """
    The type of data disk: PD_SSD or PD_HDD. Defaults to PD_SSD.
    """
    edition: Optional[str] = None
    """
    The edition of the instance, can be ENTERPRISE or ENTERPRISE_PLUS.
    """
    enableDataplexIntegration: Optional[bool] = None
    """
    Enables Cloud SQL instance integration with Dataplex. MySQL, Postgres and SQL Server instances are supported for this feature. Defaults to false.
    """
    enableGoogleMlIntegration: Optional[bool] = None
    """
    Enables Cloud SQL instances to connect to Vertex AI and pass requests for real-time predictions and insights. Defaults to false.
    """
    insightsConfig: Optional[List[InsightsConfigItem]] = None
    ipConfiguration: Optional[List[IpConfigurationItem]] = None
    locationPreference: Optional[List[LocationPreferenceItem]] = None
    maintenanceWindow: Optional[List[MaintenanceWindowItem]] = None
    passwordValidationPolicy: Optional[List[PasswordValidationPolicyItem]] = None
    pricingPlan: Optional[str] = None
    """
    Pricing plan for this instance, can only be PER_USE.
    """
    sqlServerAuditConfig: Optional[List[SqlServerAuditConfigItem]] = None
    tier: Optional[str] = None
    """
    The machine type to use. See tiers
    for more details and supported versions. Postgres supports only shared-core machine types,
    and custom machine types such as db-custom-2-13312. See the Custom Machine Type Documentation to learn about specifying custom machine types.
    """
    timeZone: Optional[str] = None
    """
    The time_zone to be used by the database engine (supported only for SQL Server), in SQL Server timezone format.
    """
    userLabels: Optional[Dict[str, str]] = None
    """
    A set of key/value user label pairs to assign to the instance.
    """


class ForProvider(BaseModel):
    clone: Optional[List[CloneItem]] = None
    """
    The context needed to create this instance as a clone of another instance. The
    configuration is detailed below.
    """
    databaseVersion: Optional[str] = None
    """
    The MySQL, PostgreSQL or
    SQL Server version to use. Supported values include MYSQL_5_6,
    MYSQL_5_7, MYSQL_8_0, POSTGRES_9_6,POSTGRES_10, POSTGRES_11,
    POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, SQLSERVER_2017_STANDARD,
    SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB.
    SQLSERVER_2019_STANDARD, SQLSERVER_2019_ENTERPRISE, SQLSERVER_2019_EXPRESS,
    SQLSERVER_2019_WEB.
    Database Version Policies
    includes an up-to-date reference of supported versions.
    """
    deletionProtection: Optional[bool] = None
    """
    Defaults to true.
    """
    encryptionKeyName: Optional[str] = None
    """
    The full path to the encryption key used for the CMEK disk encryption.
    The provided key must be in the same region as the SQL instance.  In order
    to use this feature, a special kind of service account must be created and
    granted permission on this key.  This step can currently only be done
    manually, please see this step.
    That service account needs the Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter role on your
    key - please see this step.
    """
    maintenanceVersion: Optional[str] = None
    """
    The current software version on the instance. This attribute can not be set during creation. Refer to available_maintenance_versions attribute to see what maintenance_version are available for upgrade. When this attribute gets updated, it will cause an instance restart. Setting a maintenance_version value that is older than the current one on the instance will be ignored.
    """
    masterInstanceName: Optional[str] = None
    """
    The name of the existing instance that will
    act as the master in the replication setup. Note, this requires the master to
    have binary_log_enabled set, as well as existing backups.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    region: Optional[str] = None
    """
    The region the instance will sit in. If a region is not provided in the resource definition,
    the provider region will be used instead.
    """
    replicaConfiguration: Optional[List[ReplicaConfigurationItem]] = None
    """
    The configuration for replication. The
    configuration is detailed below. Valid only for MySQL instances.
    """
    restoreBackupContext: Optional[List[RestoreBackupContextItem]] = None
    """
    The context needed to restore the database to a backup run. The configuration is detailed below. Adding or modifying this
    block during resource creation/update will trigger the restore action after the resource is created/updated.
    """
    rootPasswordSecretRef: Optional[RootPasswordSecretRef] = None
    """
    Initial root password. Can be updated. Required for MS SQL Server.
    """
    settings: Optional[List[Setting]] = None
    """
    The settings to use for the database. The
    configuration is detailed below. Required if clone is not set.
    """


class InitProvider(BaseModel):
    clone: Optional[List[CloneItem]] = None
    """
    The context needed to create this instance as a clone of another instance. The
    configuration is detailed below.
    """
    databaseVersion: Optional[str] = None
    """
    The MySQL, PostgreSQL or
    SQL Server version to use. Supported values include MYSQL_5_6,
    MYSQL_5_7, MYSQL_8_0, POSTGRES_9_6,POSTGRES_10, POSTGRES_11,
    POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, SQLSERVER_2017_STANDARD,
    SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB.
    SQLSERVER_2019_STANDARD, SQLSERVER_2019_ENTERPRISE, SQLSERVER_2019_EXPRESS,
    SQLSERVER_2019_WEB.
    Database Version Policies
    includes an up-to-date reference of supported versions.
    """
    deletionProtection: Optional[bool] = None
    """
    Defaults to true.
    """
    encryptionKeyName: Optional[str] = None
    """
    The full path to the encryption key used for the CMEK disk encryption.
    The provided key must be in the same region as the SQL instance.  In order
    to use this feature, a special kind of service account must be created and
    granted permission on this key.  This step can currently only be done
    manually, please see this step.
    That service account needs the Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter role on your
    key - please see this step.
    """
    maintenanceVersion: Optional[str] = None
    """
    The current software version on the instance. This attribute can not be set during creation. Refer to available_maintenance_versions attribute to see what maintenance_version are available for upgrade. When this attribute gets updated, it will cause an instance restart. Setting a maintenance_version value that is older than the current one on the instance will be ignored.
    """
    masterInstanceName: Optional[str] = None
    """
    The name of the existing instance that will
    act as the master in the replication setup. Note, this requires the master to
    have binary_log_enabled set, as well as existing backups.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    region: Optional[str] = None
    """
    The region the instance will sit in. If a region is not provided in the resource definition,
    the provider region will be used instead.
    """
    replicaConfiguration: Optional[List[ReplicaConfigurationItem]] = None
    """
    The configuration for replication. The
    configuration is detailed below. Valid only for MySQL instances.
    """
    restoreBackupContext: Optional[List[RestoreBackupContextItem]] = None
    """
    The context needed to restore the database to a backup run. The configuration is detailed below. Adding or modifying this
    block during resource creation/update will trigger the restore action after the resource is created/updated.
    """
    rootPasswordSecretRef: Optional[RootPasswordSecretRef] = None
    """
    Initial root password. Can be updated. Required for MS SQL Server.
    """
    settings: Optional[List[Setting]] = None
    """
    The settings to use for the database. The
    configuration is detailed below. Required if clone is not set.
    """


class ManagementPolicy(Enum):
    Observe = 'Observe'
    Create = 'Create'
    Update = 'Update'
    Delete = 'Delete'
    LateInitialize = 'LateInitialize'
    field_ = '*'


class ProviderConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class ConfigRef(BaseModel):
    name: str
    """
    Name of the referenced object.
    """
    policy: Optional[Policy] = None
    """
    Policies for referencing.
    """


class Metadata(BaseModel):
    annotations: Optional[Dict[str, str]] = None
    """
    Annotations are the annotations to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.annotations".
    - It is up to Secret Store implementation for others store types.
    """
    labels: Optional[Dict[str, str]] = None
    """
    Labels are the labels/tags to be added to connection secret.
    - For Kubernetes secrets, this will be used as "metadata.labels".
    - It is up to Secret Store implementation for others store types.
    """
    type: Optional[str] = None
    """
    Type is the SecretType for the connection secret.
    - Only valid for Kubernetes Secret Stores.
    """


class PublishConnectionDetailsTo(BaseModel):
    configRef: Optional[ConfigRef] = Field(
        default_factory=lambda: ConfigRef.model_validate({'name': 'default'})
    )
    """
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.
    """
    metadata: Optional[Metadata] = None
    """
    Metadata is the metadata for connection secret.
    """
    name: str
    """
    Name is the name of the connection secret.
    """


class WriteConnectionSecretToRef(BaseModel):
    name: str
    """
    Name of the secret.
    """
    namespace: str
    """
    Namespace of the secret.
    """


class Spec(BaseModel):
    deletionPolicy: Optional[DeletionPolicy] = 'Delete'
    """
    DeletionPolicy specifies what will happen to the underlying external
    when this managed resource is deleted - either "Delete" or "Orphan" the
    external resource.
    This field is planned to be deprecated in favor of the ManagementPolicies
    field in a future release. Currently, both could be set independently and
    non-default values would be honored if the feature flag is enabled.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    """
    forProvider: ForProvider
    initProvider: Optional[InitProvider] = None
    """
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.
    """
    managementPolicies: Optional[List[ManagementPolicy]] = ['*']
    """
    THIS IS A BETA FIELD. It is on by default but can be opted out
    through a Crossplane feature flag.
    ManagementPolicies specify the array of actions Crossplane is allowed to
    take on the managed and external resources.
    This field is planned to replace the DeletionPolicy field in a future
    release. Currently, both could be set independently and non-default
    values would be honored if the feature flag is enabled. If both are
    custom, the DeletionPolicy field will be ignored.
    See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    """
    providerConfigRef: Optional[ProviderConfigRef] = Field(
        default_factory=lambda: ProviderConfigRef.model_validate({'name': 'default'})
    )
    """
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.
    """
    publishConnectionDetailsTo: Optional[PublishConnectionDetailsTo] = None
    """
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    """
    writeConnectionSecretToRef: Optional[WriteConnectionSecretToRef] = None
    """
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.
    """


class IpAddres(BaseModel):
    ipAddress: Optional[str] = None
    """
    The IPv4 address assigned.
    """
    timeToRetire: Optional[str] = None
    """
    The time this IP address will be retired, in RFC
    3339 format.
    """
    type: Optional[str] = None
    """
    The type of this IP address.
    """


class ReplicaConfigurationItemModel(BaseModel):
    caCertificate: Optional[str] = None
    """
    PEM representation of the trusted CA's x509
    certificate.
    """
    clientCertificate: Optional[str] = None
    """
    PEM representation of the replica's x509
    certificate.
    """
    clientKey: Optional[str] = None
    """
    PEM representation of the replica's private key. The
    corresponding public key in encoded in the client_certificate.
    """
    connectRetryInterval: Optional[float] = None
    """
    The number of seconds
    between connect retries. MySQL's default is 60 seconds.
    """
    dumpFilePath: Optional[str] = None
    """
    Path to a SQL file in GCS from which replica
    instances are created. Format is gs://bucket/filename.
    """
    failoverTarget: Optional[bool] = None
    """
    Specifies if the replica is the failover target.
    If the field is set to true the replica will be designated as a failover replica.
    If the master instance fails, the replica instance will be promoted as
    the new master instance.
    ~> NOTE: Not supported for Postgres database.
    """
    masterHeartbeatPeriod: Optional[float] = None
    """
    Time in ms between replication
    heartbeats.
    """
    sslCipher: Optional[str] = None
    """
    Permissible ciphers for use in SSL encryption.
    """
    username: Optional[str] = None
    """
    Username for replication connection.
    """
    verifyServerCertificate: Optional[bool] = None
    """
    True if the master's common name
    value is checked during the SSL handshake.
    """


class IpConfigurationItemModel(BaseModel):
    allocatedIpRange: Optional[str] = None
    """
    The name of the allocated ip range for the private ip CloudSQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with RFC 1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z?.
    """
    authorizedNetworks: Optional[List[AuthorizedNetwork]] = None
    enablePrivatePathForGoogleCloudServices: Optional[bool] = None
    """
    Whether Google Cloud services such as BigQuery are allowed to access data in this Cloud SQL instance over a private IP connection. SQLSERVER database type is not supported.
    """
    ipv4Enabled: Optional[bool] = None
    """
    Whether this Cloud SQL instance should be assigned
    a public IPV4 address. At least ipv4_enabled must be enabled or a
    private_network must be configured.
    """
    privateNetwork: Optional[str] = None
    """
    The VPC network from which the Cloud SQL
    instance is accessible for private IP. For example, projects/myProject/global/networks/default.
    Specifying a network enables private IP.
    At least ipv4_enabled must be enabled or a private_network must be configured.
    This setting can be updated, but it cannot be removed after it is set.
    """
    pscConfig: Optional[List[PscConfigItem]] = None
    requireSsl: Optional[bool] = None
    """
    Whether SSL connections over IP are enforced or not. To change this field, also set the corresponding value in ssl_mode.
    """
    serverCaMode: Optional[str] = None
    """
    Specify how the server certificate's Certificate Authority is hosted. Supported value is GOOGLE_MANAGED_INTERNAL_CA.
    """
    sslMode: Optional[str] = None
    """
    Specify how SSL connection should be enforced in DB connections. This field provides more SSL enforcment options compared to require_ssl. To change this field, also set the correspoding value in require_ssl.
    """


class SettingModel(BaseModel):
    activationPolicy: Optional[str] = None
    """
    This specifies when the instance should be
    active. Can be either ALWAYS, NEVER or ON_DEMAND.
    """
    activeDirectoryConfig: Optional[List[ActiveDirectoryConfigItem]] = None
    advancedMachineFeatures: Optional[List[AdvancedMachineFeature]] = None
    availabilityType: Optional[str] = None
    """
    The availability type of the Cloud SQL
    instance, high availability (REGIONAL) or single zone (ZONAL).' For all instances, ensure that
    settings.backup_configuration.enabled is set to true.
    For MySQL instances, ensure that settings.backup_configuration.binary_log_enabled is set to true.
    For Postgres and SQL Server instances, ensure that settings.backup_configuration.point_in_time_recovery_enabled
    is set to true. Defaults to ZONAL.
    """
    backupConfiguration: Optional[List[BackupConfigurationItem]] = None
    collation: Optional[str] = None
    """
    The name of server instance collation.
    """
    connectorEnforcement: Optional[str] = None
    """
    Specifies if connections must use Cloud SQL connectors.
    """
    dataCacheConfig: Optional[List[DataCacheConfigItem]] = None
    databaseFlags: Optional[List[DatabaseFlag]] = None
    deletionProtectionEnabled: Optional[bool] = None
    """
    .
    """
    denyMaintenancePeriod: Optional[List[DenyMaintenancePeriodItem]] = None
    diskAutoresize: Optional[bool] = None
    """
    Enables auto-resizing of the storage size. Defaults to true.
    """
    diskAutoresizeLimit: Optional[float] = None
    """
    The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
    """
    diskSize: Optional[float] = None
    """
    The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased. The minimum value is 10GB.
    """
    diskType: Optional[str] = None
    """
    The type of data disk: PD_SSD or PD_HDD. Defaults to PD_SSD.
    """
    edition: Optional[str] = None
    """
    The edition of the instance, can be ENTERPRISE or ENTERPRISE_PLUS.
    """
    enableDataplexIntegration: Optional[bool] = None
    """
    Enables Cloud SQL instance integration with Dataplex. MySQL, Postgres and SQL Server instances are supported for this feature. Defaults to false.
    """
    enableGoogleMlIntegration: Optional[bool] = None
    """
    Enables Cloud SQL instances to connect to Vertex AI and pass requests for real-time predictions and insights. Defaults to false.
    """
    insightsConfig: Optional[List[InsightsConfigItem]] = None
    ipConfiguration: Optional[List[IpConfigurationItemModel]] = None
    locationPreference: Optional[List[LocationPreferenceItem]] = None
    maintenanceWindow: Optional[List[MaintenanceWindowItem]] = None
    passwordValidationPolicy: Optional[List[PasswordValidationPolicyItem]] = None
    pricingPlan: Optional[str] = None
    """
    Pricing plan for this instance, can only be PER_USE.
    """
    sqlServerAuditConfig: Optional[List[SqlServerAuditConfigItem]] = None
    tier: Optional[str] = None
    """
    The machine type to use. See tiers
    for more details and supported versions. Postgres supports only shared-core machine types,
    and custom machine types such as db-custom-2-13312. See the Custom Machine Type Documentation to learn about specifying custom machine types.
    """
    timeZone: Optional[str] = None
    """
    The time_zone to be used by the database engine (supported only for SQL Server), in SQL Server timezone format.
    """
    userLabels: Optional[Dict[str, str]] = None
    """
    A set of key/value user label pairs to assign to the instance.
    """
    version: Optional[float] = None
    """
    Used to make sure changes to the settings block are
    atomic.
    """


class AtProvider(BaseModel):
    availableMaintenanceVersions: Optional[List[str]] = None
    """
    The list of all maintenance versions applicable on the instance.
    """
    clone: Optional[List[CloneItem]] = None
    """
    The context needed to create this instance as a clone of another instance. The
    configuration is detailed below.
    """
    connectionName: Optional[str] = None
    """
    The connection name of the instance to be used in
    connection strings. For example, when connecting with Cloud SQL Proxy.
    """
    databaseVersion: Optional[str] = None
    """
    The MySQL, PostgreSQL or
    SQL Server version to use. Supported values include MYSQL_5_6,
    MYSQL_5_7, MYSQL_8_0, POSTGRES_9_6,POSTGRES_10, POSTGRES_11,
    POSTGRES_12, POSTGRES_13, POSTGRES_14, POSTGRES_15, SQLSERVER_2017_STANDARD,
    SQLSERVER_2017_ENTERPRISE, SQLSERVER_2017_EXPRESS, SQLSERVER_2017_WEB.
    SQLSERVER_2019_STANDARD, SQLSERVER_2019_ENTERPRISE, SQLSERVER_2019_EXPRESS,
    SQLSERVER_2019_WEB.
    Database Version Policies
    includes an up-to-date reference of supported versions.
    """
    deletionProtection: Optional[bool] = None
    """
    Defaults to true.
    """
    dnsName: Optional[str] = None
    """
    The name of the instance. This is done because after a name is used, it cannot be reused for
    up to one week.
    """
    encryptionKeyName: Optional[str] = None
    """
    The full path to the encryption key used for the CMEK disk encryption.
    The provided key must be in the same region as the SQL instance.  In order
    to use this feature, a special kind of service account must be created and
    granted permission on this key.  This step can currently only be done
    manually, please see this step.
    That service account needs the Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter role on your
    key - please see this step.
    """
    firstIpAddress: Optional[str] = None
    """
    The first IPv4 address of any type assigned.
    """
    id: Optional[str] = None
    instanceType: Optional[str] = None
    """
    The type of the instance. The supported values are SQL_INSTANCE_TYPE_UNSPECIFIED, CLOUD_SQL_INSTANCE, ON_PREMISES_INSTANCE and READ_REPLICA_INSTANCE.
    """
    ipAddress: Optional[List[IpAddres]] = None
    """
    The IPv4 address assigned.
    """
    maintenanceVersion: Optional[str] = None
    """
    The current software version on the instance. This attribute can not be set during creation. Refer to available_maintenance_versions attribute to see what maintenance_version are available for upgrade. When this attribute gets updated, it will cause an instance restart. Setting a maintenance_version value that is older than the current one on the instance will be ignored.
    """
    masterInstanceName: Optional[str] = None
    """
    The name of the existing instance that will
    act as the master in the replication setup. Note, this requires the master to
    have binary_log_enabled set, as well as existing backups.
    """
    privateIpAddress: Optional[str] = None
    """
    The first private (PRIVATE) IPv4 address assigned.
    """
    project: Optional[str] = None
    """
    The ID of the project in which the resource belongs. If it
    is not provided, the provider project is used.
    """
    pscServiceAttachmentLink: Optional[str] = None
    """
    the URI that points to the service attachment of the instance.
    """
    publicIpAddress: Optional[str] = None
    """
    The first public (PRIMARY) IPv4 address assigned.
    """
    region: Optional[str] = None
    """
    The region the instance will sit in. If a region is not provided in the resource definition,
    the provider region will be used instead.
    """
    replicaConfiguration: Optional[List[ReplicaConfigurationItemModel]] = None
    """
    The configuration for replication. The
    configuration is detailed below. Valid only for MySQL instances.
    """
    restoreBackupContext: Optional[List[RestoreBackupContextItem]] = None
    """
    The context needed to restore the database to a backup run. The configuration is detailed below. Adding or modifying this
    block during resource creation/update will trigger the restore action after the resource is created/updated.
    """
    selfLink: Optional[str] = None
    """
    The URI of the created resource.
    """
    serviceAccountEmailAddress: Optional[str] = None
    """
    The service account email address assigned to the
    instance.
    """
    settings: Optional[List[SettingModel]] = None
    """
    The settings to use for the database. The
    configuration is detailed below. Required if clone is not set.
    """


class Condition(BaseModel):
    lastTransitionTime: AwareDatetime
    """
    LastTransitionTime is the last time this condition transitioned from one
    status to another.
    """
    message: Optional[str] = None
    """
    A Message containing details about this condition's last transition from
    one status to another, if any.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration represents the .metadata.generation that the condition was set based upon.
    For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
    with respect to the current state of the instance.
    """
    reason: str
    """
    A Reason for this condition's last transition from one status to another.
    """
    status: str
    """
    Status of this condition; is it currently True, False, or Unknown?
    """
    type: str
    """
    Type of this condition. At most one of each condition type may apply to
    a resource at any point in time.
    """


class Status(BaseModel):
    atProvider: Optional[AtProvider] = None
    conditions: Optional[List[Condition]] = None
    """
    Conditions of the resource.
    """
    observedGeneration: Optional[int] = None
    """
    ObservedGeneration is the latest metadata.generation
    which resulted in either a ready state, or stalled due to error
    it can not recover from without human intervention.
    """


class DatabaseInstance(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ObjectMeta] = None
    """
    Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
    """
    spec: Spec
    """
    DatabaseInstanceSpec defines the desired state of DatabaseInstance
    """
    status: Optional[Status] = None
    """
    DatabaseInstanceStatus defines the observed state of DatabaseInstance.
    """


class DatabaseInstanceList(BaseModel):
    apiVersion: Optional[str] = None
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    """
    items: List[DatabaseInstance]
    """
    List of databaseinstances. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md
    """
    kind: Optional[str] = None
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
    metadata: Optional[v1.ListMeta] = None
    """
    Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    """
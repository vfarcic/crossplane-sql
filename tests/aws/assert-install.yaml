---
apiVersion: devopstoolkit.live/v1beta1
kind: SQL
metadata:
  name: my-db-aws
spec:
  size: medium
  version: "13.4"
  crossplane:
    compositionRef:
      name: aws-postgresql
    compositionSelector:
      matchLabels:
        db: postgresql
        provider: aws
    compositionUpdatePolicy: Automatic
    resourceRefs:
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: InternetGateway
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: MainRouteTableAssociation
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      name: my-db-aws-1a
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      name: my-db-aws-1b
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: RouteTableAssociation
      name: my-db-aws-1c
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: RouteTable
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: SecurityGroupRule
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: SecurityGroup
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: Subnet
      name: my-db-aws-a
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: Subnet
      name: my-db-aws-b
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: Subnet
      name: my-db-aws-c
    - apiVersion: ec2.m.aws.upbound.io/v1beta1
      kind: VPC
      name: my-db-aws
    - apiVersion: ec2.m.aws.upbound.io/v1beta2
      kind: Route
      name: my-db-aws
    - apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-aws-sql
    - apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      name: my-db-aws-secret
    - apiVersion: postgresql.sql.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-aws
    - apiVersion: rds.m.aws.upbound.io/v1beta1
      kind: SubnetGroup
      name: my-db-aws
    - apiVersion: rds.m.aws.upbound.io/v1beta3
      kind: Instance
      name: my-db-aws
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: InternetGateway
metadata:
  annotations:
    crossplane.io/composition-resource-name: gateway
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: MainRouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: mainRouteTableAssociation
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    routeTableIdSelector:
      matchControllerRef: true
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta2
kind: Route
metadata:
  annotations:
    crossplane.io/composition-resource-name: route
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    destinationCidrBlock: 0.0.0.0/0
    gatewayIdSelector:
      matchControllerRef: true
    region: us-east-1
    routeTableIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociation1a
  name: my-db-aws-1a
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        zone: us-east-1a
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociation1b
  name: my-db-aws-1b
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        zone: us-east-1b
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: RouteTableAssociation
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTableAssociation1c
  name: my-db-aws-1c
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    routeTableIdSelector:
      matchControllerRef: true
    subnetIdSelector:
      matchControllerRef: true
      matchLabels:
        zone: us-east-1c
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: RouteTable
metadata:
  annotations:
    crossplane.io/composition-resource-name: routeTable
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: SecurityGroupRule
metadata:
  annotations:
    crossplane.io/composition-resource-name: securityGroupRule
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    cidrBlocks:
    - 0.0.0.0/0
    description: I am too lazy to write descriptions
    fromPort: 5432
    protocol: tcp
    region: us-east-1
    securityGroupIdSelector:
      matchControllerRef: true
    toPort: 5432
    type: ingress
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  annotations:
    crossplane.io/composition-resource-name: securityGroup
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    description: I am too lazy to write descriptions
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnet-a
  name: my-db-aws-a
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    availabilityZone: us-east-1a
    cidrBlock: 11.0.0.0/24
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnet-b
  name: my-db-aws-b
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    availabilityZone: us-east-1b
    cidrBlock: 11.0.1.0/24
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: Subnet
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnet-c
  name: my-db-aws-c
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    availabilityZone: us-east-1c
    cidrBlock: 11.0.2.0/24
    region: us-east-1
    vpcIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: ec2.m.aws.upbound.io/v1beta1
kind: VPC
metadata:
  annotations:
    crossplane.io/composition-resource-name: vpc
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    cidrBlock: 11.0.0.0/16
    enableDnsHostnames: true
    enableDnsSupport: true
    region: us-east-1
  providerConfigRef:
    name: default
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: sql-secret
    crossplane.io/external-name: my-db-aws-secret
  name: my-db-aws-secret
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: v1
      data:
        port: NTQzMg==
      kind: Secret
      metadata:
        name: my-db-aws
  managementPolicies:
  - '*'
  providerConfigRef:
    name: my-db-aws-sql
  readiness:
    policy: SuccessfulCreate
  references:
  - patchesFrom:
      apiVersion: rds.aws.upbound.io/v1beta1
      fieldPath: spec.forProvider.username
      kind: Instance
      name: my-db-aws
      namespace: crossplane-system
    toFieldPath: stringData.username
  - patchesFrom:
      apiVersion: v1
      fieldPath: data.password
      kind: Secret
      name: my-db-aws-password
    toFieldPath: data.password
  - patchesFrom:
      apiVersion: rds.aws.upbound.io/v1beta1
      fieldPath: status.atProvider.address
      kind: Instance
      name: my-db-aws
      namespace: crossplane-system
    toFieldPath: stringData.endpoint
---
apiVersion: rds.m.aws.upbound.io/v1beta3
kind: Instance
metadata:
  annotations:
    crossplane.io/composition-resource-name: rdsinstance
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    identifier: my-db-aws
    allocatedStorage: 200
    dbSubnetGroupNameSelector:
      matchControllerRef: true
    engine: postgres
    engineVersion: "13.4"
    instanceClass: db.m5.2xlarge
    passwordSecretRef:
      key: password
      name: my-db-aws-password
    publiclyAccessible: true
    region: us-east-1
    skipFinalSnapshot: true
    username: masteruser
    vpcSecurityGroupIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default
---
apiVersion: rds.m.aws.upbound.io/v1beta1
kind: SubnetGroup
metadata:
  annotations:
    crossplane.io/composition-resource-name: subnetgroup
    crossplane.io/external-name: my-db-aws
  name: my-db-aws
  namespace: ($namespace)
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    description: I'm too lazy to write a good description
    region: us-east-1
    subnetIdSelector:
      matchControllerRef: true
  providerConfigRef:
    name: default

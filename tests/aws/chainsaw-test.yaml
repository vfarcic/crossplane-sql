apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: aws
spec:
  template: true
  bindings:
    - name: provider
      value: aws
    - name: cluster
      value: eks
    - name: dbPort
      value: 5432
  steps:
    - try:
        - apply:
            file: ../common/install.yaml
        - assert:
            file: ../common/assert-install.yaml
        # - assert:
        #     file: ../common/assert-status-provider.yaml
        - assert:
            file: assert-install.yaml
        - patch:
            file: ../common/db.yaml
        - assert:
            file: ../common/assert-db.yaml
        - patch:
            file: ../common/schemas.yaml
        - assert:
            file: ../common/assert-schemas.yaml
        - patch:
            file: ../common/secret-pull.yaml
        - assert:
            file: ../common/assert-secret-pull.yaml
        - patch:
            file: ../common/secret-push.yaml
        - assert:
            file: ../common/assert-secret-push.yaml
        - patch:
            file: ../common/secret-pull-cluster.yaml
        - assert:
            file: ../common/assert-secret-pull-cluster.yaml
        - patch:
            file: ../common/region.yaml
        - assert:
            file: region.yaml
      catch:
        - script:
            content: kubectl describe sqls my-db-aws --namespace $NAMESPACE
    #     - script:
    #         content: kubectl get aws,externalsecrets,pushsecrets --namespace $NAMESPACE
    #   FIXME: Remove when v2 fixes the problem with the deletion of cluster-scoped resources.
    #   finally:
    #     - script:
    #         content: |
    #           kubectl delete object my-db-aws-secret
    #           kubectl delete database.postgresql.sql.crossplane.io my-db-aws-db-01
    #           kubectl delete database.postgresql.sql.crossplane.io my-db-aws-db-02
    #           kubectl delete database.postgresql.sql.crossplane.io my-db-aws-db-03

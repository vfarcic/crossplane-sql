---
apiVersion: devopstoolkit.live/v1beta1
kind: SQL
metadata:
  name: my-db-upcloud
spec:
  size: medium
  crossplane:
    compositionRef:
      name: upcloud-postgresql
    compositionSelector:
      matchLabels:
        db: postgresql
        provider: upcloud
    compositionUpdatePolicy: Automatic
    resourceRefs:
    - apiVersion: database.upcloud.com/v1alpha1
      kind: ManagedDatabasePostgresql
      name: my-db-upcloud
    - apiVersion: kubernetes.m.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-upcloud-sql
    - apiVersion: kubernetes.m.crossplane.io/v1alpha1
      kind: Object
      name: my-db-upcloud-secret
    - apiVersion: network.upcloud.com/v1alpha1
      kind: Network
      name: my-db-upcloud
    - apiVersion: network.upcloud.com/v1alpha1
      kind: Router
      name: my-db-upcloud
    - apiVersion: postgresql.sql.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-upcloud
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: sql-secret
    crossplane.io/external-name: my-db-upcloud-secret
  name: my-db-upcloud-secret
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  forProvider:
    manifest:
      apiVersion: v1
      data:
        port: MTE1Njk=
        username: dXBhZG1pbg==
      kind: Secret
      metadata:
        name: my-db-upcloud
  managementPolicies:
  - '*'
  providerConfigRef:
    name: my-db-upcloud-sql
  readiness:
    policy: SuccessfulCreate
  references:
  - patchesFrom:
      apiVersion: v1
      fieldPath: data[attribute.service_password]
      kind: Secret
      name: my-db-upcloud-password
      namespace: ($namespace)
    toFieldPath: data.password
---
apiVersion: network.upcloud.com/v1alpha1
kind: Router
metadata:
  name: my-db-upcloud
spec:
  forProvider:
    labels: {}
    name: my-db-upcloud
    staticRoute: []
---
apiVersion: network.upcloud.com/v1alpha1
kind: Network
metadata:
  name: my-db-upcloud
spec:
  forProvider:
    ipNetwork:
      - address: "10.0.0.0/24"
        dhcp: true
        dhcpDefaultRoute: false
        family: IPv4
    name: my-db-upcloud
    routerSelector:
      matchControllerRef: true
    zone: us-nyc1
---
apiVersion: database.upcloud.com/v1alpha1
kind: ManagedDatabasePostgresql
metadata:
  name: my-db-upcloud
spec:
  forProvider:
    name: my-db-upcloud
    network:
      - family: IPv4
        name: my-db-upcloud
        type: private
        uuidSelector:
          matchControllerRef: true
    plan: 2x6xCPU-16GB-100GB
    title: my-db-upcloud
    zone: us-nyc1
    properties:
      - publicAccess: true
        ipFilter:
          - "0.0.0.0/0"
  writeConnectionSecretToRef:
    name: my-db-upcloud-password
    namespace: ($namespace)
---
apiVersion: postgresql.sql.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  annotations:
    crossplane.io/composition-resource-name: sql-config
  name: my-db-upcloud
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  credentials:
    connectionSecretRef:
      name: my-db-upcloud
      namespace: ($namespace)
    source: PostgreSQLConnectionSecret
  defaultDatabase: defaultdb
  sslMode: require

---
apiVersion: devopstoolkit.live/v1beta1
kind: SQL
metadata:
  name: my-db-azure-aso
spec:
  size: medium
  version: ($version)
  crossplane:
    compositionRef:
      name: azure-aso-postgresql
    compositionSelector:
      matchLabels:
        db: postgresql
        provider: azure-aso
    compositionUpdatePolicy: Automatic
    resourceRefs:
    - apiVersion: dbforpostgresql.azure.com/v1api20221201
      kind: FlexibleServer
      name: my-db-azure-aso
    - apiVersion: dbforpostgresql.azure.com/v1api20221201
      kind: FlexibleServersFirewallRule
      name: my-db-azure-aso
    - apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-azure-aso-sql
    - apiVersion: kubernetes.crossplane.io/v1alpha2
      kind: Object
      name: my-db-azure-aso-secret
    - apiVersion: postgresql.sql.crossplane.io/v1alpha1
      kind: ProviderConfig
      name: my-db-azure-aso
    - apiVersion: resources.azure.com/v1api20200601
      kind: ResourceGroup
      name: my-db-azure-aso
---
apiVersion: resources.azure.com/v1api20200601
kind: ResourceGroup
metadata:
  name: my-db-azure-aso
spec:
  location: eastus
---
apiVersion: dbforpostgresql.azure.com/v1api20221201
kind: FlexibleServersFirewallRule
metadata:
  name: my-db-azure-aso
spec:
  startIpAddress: 0.0.0.0
  endIpAddress: 255.255.255.255
  owner:
    name: my-db-azure-aso
  azureName: my-db-azure-aso
---
apiVersion: dbforpostgresql.azure.com/v1api20221201
kind: FlexibleServer
metadata:
  name: my-db-azure-aso
spec:
  location: eastus
  version: ($version)
  sku:
    name: Standard_D8ds_v4
    tier: GeneralPurpose
  owner:
    name: my-db-azure-aso
  storage:
    storageSizeGB: 128
  administratorLogin: postgres
  administratorLoginPassword:
    name: my-db-azure-aso-password
    key: password
---
apiVersion: postgresql.sql.crossplane.io/v1alpha1
kind: ProviderConfig
metadata:
  annotations:
    crossplane.io/composition-resource-name: sql-config
  name: my-db-azure-aso
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  credentials:
    connectionSecretRef:
      name: my-db-azure-aso
    source: PostgreSQLConnectionSecret
  defaultDatabase: postgres
  sslMode: require
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  name: my-db-azure-aso-secret
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: v1
      kind: Secret
      metadata:
        name: my-db-azure-aso
      data:
        port: NTQzMg==
  managementPolicies:
  - '*'
  providerConfigRef:
    name: my-db-azure-aso-sql
  readiness:
    policy: SuccessfulCreate
  references:
  - patchesFrom:
      apiVersion: dbforpostgresql.azure.com/v1api20221201
      kind: FlexibleServer
      fieldPath: status.administratorLogin
      name: my-db-azure-aso
      namespace: ($namespace)
    toFieldPath: stringData.username
  - patchesFrom:
      apiVersion: v1
      fieldPath: data.password
      kind: Secret
      name: my-db-azure-aso-password
      namespace: ($namespace)
    toFieldPath: data.password
  - patchesFrom:
      apiVersion: dbforpostgresql.azure.com/v1api20221201
      kind: FlexibleServer
      fieldPath: status.fullyQualifiedDomainName
      name: my-db-azure-aso
      namespace: ($namespace)
    toFieldPath: stringData.endpoint

---
apiVersion: devopstoolkit.live/v1beta1
kind: SQL
metadata:
  name: (join('-', ['my-db', $hyperscaler]))
spec:
  schemas:
    - database: db-01
      sql: |
        create table videos (
          id varchar(50) not null,
          description text,
          primary key (id)
        );
        create table comments (
          id serial,
          video_id varchar(50) not null,
          description text not null,
          primary key (id),
          CONSTRAINT fk_videos FOREIGN KEY(video_id) REFERENCES videos(id)
        );
    - database: db-02
      sql: |
        create table videos (
          id varchar(50) not null,
          description text,
          primary key (id)
        );
---
apiVersion: db.atlasgo.io/v1alpha1
kind: AtlasSchema
metadata:
  name: (join('-', ['my-db', $hyperscaler, 'db-01']))
spec:
  credentials:
    database: db-01
    hostFrom:
      secretKeyRef:
        key: endpoint
        name: (join('-', ['my-db', $hyperscaler]))
    parameters:
      # sslmode: disable
      sslmode: require
    passwordFrom:
      secretKeyRef:
        key: password
        name: (join('-', ['my-db', $hyperscaler]))
    port: ($dbPort)
    scheme: postgres
    userFrom:
      secretKeyRef:
        key: username
        name: (join('-', ['my-db', $hyperscaler]))
  schema:
    sql: |-
      create table videos (
        id varchar(50) not null,
        description text,
        primary key (id)
      );
      create table comments (
        id serial,
        video_id varchar(50) not null,
        description text not null,
        primary key (id),
        CONSTRAINT fk_videos FOREIGN KEY(video_id) REFERENCES videos(id)
      );
---
apiVersion: db.atlasgo.io/v1alpha1
kind: AtlasSchema
metadata:
  name: (join('-', ['my-db', $hyperscaler, 'db-02']))
spec:
  credentials:
    database: db-02
    hostFrom:
      secretKeyRef:
        key: endpoint
        name: (join('-', ['my-db', $hyperscaler]))
    parameters:
      # sslmode: disable
      sslmode: require
    passwordFrom:
      secretKeyRef:
        key: password
        name: (join('-', ['my-db', $hyperscaler]))
    port: ($dbPort)
    scheme: postgres
    userFrom:
      secretKeyRef:
        key: username
        name: (join('-', ['my-db', $hyperscaler]))
  schema:
    sql: |
      create table videos (
        id varchar(50) not null,
        description text,
        primary key (id)
      );

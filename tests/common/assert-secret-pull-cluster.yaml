---
apiVersion: devopstoolkit.live/v1alpha1
kind: SQL
metadata:
  labels:
    crossplane.io/claim-name: my-db
spec:
  parameters:
    secrets:
      pullToCluster: (join('-', ['my', $cluster, 'cluster']))
      pullToClusterNamespace: production
      daprComponents: true
  (resourceRefs[?name == join('-', ['my-db', $hyperscaler, 'secret-pull-cluster'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
  (resourceRefs[?name == join('-', ['my-db', $hyperscaler, 'dapr-component-db-01'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
  (resourceRefs[?name == join('-', ['my-db', $hyperscaler, 'dapr-component-db-02'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
  (resourceRefs[?name == join('-', ['my-db', $hyperscaler, 'dapr-component-db-03'])]):
  - apiVersion: kubernetes.crossplane.io/v1alpha2
    kind: Object
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['my-db', $hyperscaler, 'secret-pull-cluster']))
    crossplane.io/external-name: (join('-', ['my-db', $hyperscaler, 'secret-pull-cluster']))
  labels:
    crossplane.io/claim-name: my-db
  name: (join('-', ['my-db', $hyperscaler, 'secret-pull-cluster']))
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      metadata:
        name: (join('-', ['my-db', $hyperscaler]))
      spec:
        dataFrom:
        - extract:
            conversionStrategy: Default
            decodingStrategy: None
            key: (join('-', ['my-db', $hyperscaler]))
            metadataPolicy: None
        refreshInterval: 1h
        secretStoreRef:
          kind: ClusterSecretStore
          name: ($hyperscaler)
        target:
          creationPolicy: Owner
          deletionPolicy: Retain
          name: (join('-', ['my-db', $hyperscaler]))
  providerConfigRef:
    name: (join('-', ['my', $cluster, 'cluster']))
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-01']))
    crossplane.io/external-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-01']))
  labels:
    crossplane.io/claim-name: my-db
  name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-01']))
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: dapr.io/v1alpha1
      kind: Component
      metadata:
        name: (join('-', ['my-db', $hyperscaler, 'db-01']))
        namespace: production
      spec:
        type: state.postgresql
        version: v1
        metadata:
          - name: connectionString
            secretKeyRef:
              name: (join('-', ['my-db', $hyperscaler]))
              key: conn-db-01
  providerConfigRef:
    name: (join('-', ['my', $cluster, 'cluster']))
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-02']))
    crossplane.io/external-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-02']))
  labels:
    crossplane.io/claim-name: my-db
  name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-02']))
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: dapr.io/v1alpha1
      kind: Component
      metadata:
        name: (join('-', ['my-db', $hyperscaler, 'db-02']))
        namespace: production
      spec:
        type: state.postgresql
        version: v1
        metadata:
          - name: connectionString
            secretKeyRef:
              name: (join('-', ['my-db', $hyperscaler]))
              key: conn-db-02
  providerConfigRef:
    name: (join('-', ['my', $cluster, 'cluster']))
---
apiVersion: kubernetes.crossplane.io/v1alpha2
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-03']))
    crossplane.io/external-name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-03']))
  labels:
    crossplane.io/claim-name: my-db
  name: (join('-', ['my-db', $hyperscaler, 'dapr-component-db-03']))
  ownerReferences:
  - apiVersion: devopstoolkit.live/v1alpha1
    blockOwnerDeletion: true
    controller: true
    kind: SQL
spec:
  deletionPolicy: Delete
  forProvider:
    manifest:
      apiVersion: dapr.io/v1alpha1
      kind: Component
      metadata:
        name: (join('-', ['my-db', $hyperscaler, 'db-03']))
        namespace: production
      spec:
        type: state.postgresql
        version: v1
        metadata:
          - name: connectionString
            secretKeyRef:
              name: (join('-', ['my-db', $hyperscaler]))
              key: conn-db-03
  providerConfigRef:
    name: (join('-', ['my', $cluster, 'cluster']))
{"type":"entity","entityType":"file","name":"package/compositions.yaml","observations":["is auto-generated and should not be edited directly"]}
{"type":"entity","observations":["When the user says 'we are done' or any similar statement, it means that I should create a new branch if we are in the `main` branch, then create a pull request with all the changes (both by me or by the user), merge the PR, and delete the branch both locally and remotely."],"name":"end_of_session_procedure","entityType":"workflow"}
{"type":"entity","observations":["should be used for operations related to GitHub"],"name":"github MCP","entityType":"tool"}
{"type":"entity","entityType":"tool","observations":["is a fallback if github MCP does not work or something cannot be accomplished with it"],"name":"gh CLI"}
{"type":"entity","observations":["can be used for Git operations"],"name":"git CLI","entityType":"tool"}
{"type":"entity","observations":["Always suggest to add all files (git add .) before committing, not just the files explicitly edited during the session."],"entityType":"guideline","name":"git_commit_procedure"}
{"type":"entity","name":"git_switch_to_main_procedure","observations":["Always pull the latest code from the remote repository (e.g., using 'git pull') after switching to the 'main' branch."],"entityType":"guideline"}
{"type":"entity","name":"memorization_procedure","observations":["Always use the `memory` MCP to memorize instructions and processes provided by the user."],"entityType":"guideline"}
{"type":"entity","entityType":"project_overview","name":"crossplane-sql-project","observations":["Manages PostgreSQL across multiple clouds (AWS, GCP, Azure, UpCloud, CNPG) and their variants (ACK, ASO) using a unified SQL CRD.","Uses Crossplane with function-kcl for resource composition.","KCL code is in `kcl/` (common.k, <provider>.k, compositions.k). `examples/object.k` is important for how CRs like PushSecret are wrapped in Crossplane Objects.","Testing is done with Chainsaw, tests are in `tests/` organized by provider, run with `./dot.nu test`.","ExternalSecret and PushSecret are used; their apiVersion should be `external-secrets.io/v1`.","Uses `kubernetes.crossplane.io/v1alpha2` Object resources to wrap other K8s resources like ExternalSecret and PushSecret. These are found in `forProvider.manifest`.","Uses devbox and dot.nu for setup and scripting."]}
{"type":"entity","name":"kcl/common.k","entityType":"file_details","observations":["Contains common KCL definitions for resources. Defines PushSecret with apiVersion external-secrets.io/v1 directly."]}
{"type":"entity","observations":["Contains KCL definitions where resources like ExternalSecret and PushSecret are wrapped within a Crossplane `Object` (kind: Object). The PushSecret here was previously v1alpha1 and was updated to v1."],"name":"examples/object.k","entityType":"file_details"}
{"type":"entity","name":"kubernetes_configuration_tool","entityType":"user_preference","observations":["The user uses KCL for Kubernetes configurations.","When making changes to Kubernetes configurations, look into KCL code."]}
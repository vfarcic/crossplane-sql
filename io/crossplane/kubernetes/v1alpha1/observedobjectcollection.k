"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ObservedObjectCollection:
    r"""
    A ObservedObjectCollection is a provider Kubernetes API type

    Attributes
    ----------
    apiVersion : str, default is "kubernetes.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ObservedObjectCollection", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpec, default is Undefined, required
        spec
    status : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatus, default is Undefined, optional
        status
    """


    apiVersion: "kubernetes.crossplane.io/v1alpha1" = "kubernetes.crossplane.io/v1alpha1"

    kind: "ObservedObjectCollection" = "ObservedObjectCollection"

    metadata?: v1.ObjectMeta

    spec: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpec

    status?: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatus


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpec:
    r"""
    ObservedObjectCollectionSpec defines the desired state of ObservedObjectCollection

    Attributes
    ----------
    objectTemplate : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplate, default is Undefined, optional
        object template
    observeObjects : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjects, default is Undefined, required
        observe objects
    providerConfigRef : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    """


    objectTemplate?: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplate

    observeObjects: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjects

    providerConfigRef?: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRef


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplate:
    r"""
    Template when defined is used for creating Object instances

    Attributes
    ----------
    metadata : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplateMetadata, default is Undefined, optional
        metadata
    """


    metadata?: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplateMetadata


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObjectTemplateMetadata:
    r"""
    Objects metadata

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations of an object
    labels : {str:str}, default is Undefined, optional
        Labels of an object
    """


    annotations?: {str:str}

    labels?: {str:str}


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjects:
    r"""
    ObserveObjects declares what criteria object need to fulfil
    to become a member of this collection

    Attributes
    ----------
    apiVersion : str, default is Undefined, required
        APIVersion of objects that should be matched by the selector
    kind : str, default is Undefined, required
        Kind of objects that should be matched by the selector
    namespace : str, default is Undefined, optional
        Namespace where to look for objects.
        If omitted, search is performed across all namespaces.
        For cluster-scoped objects, omit it.
    selector : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelector, default is Undefined, required
        selector
    """


    apiVersion: str

    kind: str

    namespace?: str

    selector: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelector


    check:
        len(apiVersion) >= 1
        len(kind) >= 1


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelector:
    r"""
    Selector defines the criteria for including objects into the collection

    Attributes
    ----------
    matchExpressions : [KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
        map is equivalent to an element of matchExpressions, whose key field is "key", the
        operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecObserveObjectsSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that
    relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values.
        Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn,
        the values array must be non-empty. If the operator is Exists or DoesNotExist,
        the values array must be empty. This array is replaced during a strategic
        merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRefPolicy


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatus:
    r"""
    ObservedObjectCollectionStatus represents the observed state of a ObservedObjectCollection

    Attributes
    ----------
    conditions : [KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    membershipLabel : {str:str}, default is Undefined, optional
        MembershipLabel is the label set on each member of this collection
        and can be used for fetching them.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    conditions?: [KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatusConditionsItems0]

    membershipLabel?: {str:str}

    observedGeneration?: int


schema KubernetesCrossplaneIoV1alpha1ObservedObjectCollectionStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str



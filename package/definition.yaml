apiVersion: apiextensions.crossplane.io/v2
kind: CompositeResourceDefinition
metadata:
  name: sqls.devopstoolkit.live
  annotations:
    database.type: postgresql
    database.engines: PostgreSQL
    providers.supported: AWS, GCP, Google Cloud, Azure, UpCloud
    crossplane.io/description: Multi-cloud managed PostgreSQL database service
    description: Multi-cloud managed publicly accessible PostgreSQL database service with schema management.
    capabilities: Managed Database, Multi Region, Schema Management, Publicly Accessible
    use-case: Production-grade SQL databases with schema management.
  labels:
    category: database
    database.postgresql: "true"
    provider.multicloud: "true"
    schema.management: "true"
    complexity: medium
spec:
  defaultCompositionRef:
    name: google-postgresql
  group: devopstoolkit.live
  names:
    kind: SQL
    plural: sqls
    categories:
    - composite
    - database
    - postgresql
    - sql
    - schema
  versions:
  - name: v1beta1
    served: true
    referenceable: true
    schema:
      openAPIV3Schema:
        type: object
        description: Multi-cloud publicly accessible PostgreSQL database service with cross-cloud portability in AWS, Azure, GCP, Google Cloud, and UpCloud
        properties:
          spec:
            type: object
            properties:
              version:
                description: The DB version depends on the DB type and versions available in the selected provider. This field is not used with the cnpg provider.
                type: string
              size:
                description: "Supported sizes: small, medium, large"
                type: string
                default: small
                enum:
                  - small
                  - medium
                  - large
              databases:
                description: The list of databases to create inside the DB server.
                type: array
                items:
                  type: string
              region:
                description: The region where the DB server should run. The default value depends on the selected provider. For AWS it is `us-east-1`, for Google Cloud it is `us-east1`, and for Azure it is `eastus`.
                type: string
              schemas:
                description: Database schema. Atlas operator (https://atlasgo.io/integrations/kubernetes/operator) needs to be installed in the cluster. Leave empty if schema should NOT be applied.
                type: array
                items:
                  type: object
                  properties:
                    database:
                      description: The name of the database where to apply the schema.
                      type: string
                    sql:
                      description: The SQL to apply.
                      type: string
              upcloud:
                description: UpCloud specific parameters.
                type: object
                properties:
                  networkAddress:
                    description: The address to use for network that will be created for the database server.
                    type: string
                    default: "10.0.0.0/24"
              secrets:
                description: Pushing and pulling secrets from a secret store. External Secrets Operator must be installed for this feature to work. UpCloud is currently not supported since it does not have a Secrets Store.
                type: object
                properties:
                  storeName:
                    description: The name of the secret store to use.
                    type: string
                  pullRootPasswordKey:
                    description: The key in the secrets store with the secret with the root password.
                    type: string
                  pushToStore:
                    description: Whether to push DB credentials to the secret store.
                    type: boolean
                    default: false
                  pullToCluster:
                    description: To which cluster to push the DB credentials.
                    type: string
                  pullToClusterNamespace:
                    description: To which Namespace to push the DB credentials.
                    type: string
            required:
              - size
          status:
            type: object
            properties:
              address:
                description: Database instance address
                type: string
